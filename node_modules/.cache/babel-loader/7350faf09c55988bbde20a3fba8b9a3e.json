{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ebelfars\\\\PycharmProjects\\\\react-portfolio\\\\src\\\\components\\\\Skills.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useRef } from 'react';\nimport * as d3 from 'd3';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Skills = () => {\n  _s();\n\n  const svgRef = useRef();\n  const skills = [{\n    title: \"Python Scripting\",\n    level: 8\n  }, {\n    title: \"ML Frameworks\",\n    level: 7\n  }, {\n    title: \"Databases\",\n    level: 9\n  }, {\n    title: \"Data Analysis\",\n    level: 8\n  }, {\n    title: \"DevOps\",\n    level: 6\n  }];\n  useEffect(() => {\n    const width = 400;\n    const height = 400;\n    const levels = 10; // Number of concentric circles\n\n    const angleSlice = Math.PI * 2 / skills.length;\n    const radius = Math.min(width / 2, height / 2); // Radius of the radar chart\n\n    const svg = d3.select(svgRef.current).attr(\"width\", width).attr(\"height\", height).append(\"g\").attr(\"transform\", `translate(${width / 2},${height / 2})`); // Draw concentric circles\n\n    for (let i = 1; i <= levels; i++) {\n      svg.append(\"circle\").attr(\"cx\", 0).attr(\"cy\", 0).attr(\"r\", radius / levels * i).style(\"fill\", \"none\").style(\"stroke\", \"#ccc\");\n    } // Draw the axes\n\n\n    skills.forEach((skill, i) => {\n      const angle = i * angleSlice;\n      const x = radius * Math.cos(angle);\n      const y = radius * Math.sin(angle);\n      svg.append(\"line\").attr(\"x1\", 0).attr(\"y1\", 0).attr(\"x2\", x).attr(\"y2\", y).style(\"stroke\", \"#ccc\");\n      svg.append(\"text\").attr(\"x\", x * 1.1).attr(\"y\", y * 1.1).attr(\"dy\", \"0.35em\").style(\"text-anchor\", x > 0 ? \"start\" : \"end\").text(skill.title).style(\"fill\", \"#fff\").style(\"font-size\", \"12px\");\n    }); // Draw the skill levels\n\n    const radarLine = d3.lineRadial().radius(d => radius / levels * d.level).angle((d, i) => i * angleSlice);\n    svg.append(\"path\").datum(skills).attr(\"d\", radarLine).style(\"fill\", \"rgba(255, 0, 0, 0.5)\").style(\"stroke\", \"#ff0000\").style(\"stroke-width\", \"2px\"); // Add points at skill levels\n\n    skills.forEach((skill, i) => {\n      const angle = i * angleSlice;\n      const x = radius / levels * skill.level * Math.cos(angle);\n      const y = radius / levels * skill.level * Math.sin(angle);\n      svg.append(\"circle\").attr(\"cx\", x).attr(\"cy\", y).attr(\"r\", 4).style(\"fill\", \"#ff0000\");\n    });\n  }, [skills]);\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"skill\",\n    id: \"skills\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-12\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"skill-bx wow zoomIn\",\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              children: \"Skills\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Acquired skills through academic and professional training include:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"svg\", {\n              ref: svgRef\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Skills, \"89Ty783ABEwsfMbSOeu9vscWF34=\");\n\n_c = Skills;\n\nvar _c;\n\n$RefreshReg$(_c, \"Skills\");","map":{"version":3,"names":["React","useEffect","useRef","d3","Skills","svgRef","skills","title","level","width","height","levels","angleSlice","Math","PI","length","radius","min","svg","select","current","attr","append","i","style","forEach","skill","angle","x","cos","y","sin","text","radarLine","lineRadial","d","datum"],"sources":["C:/Users/ebelfars/PycharmProjects/react-portfolio/src/components/Skills.js"],"sourcesContent":["import React, { useEffect, useRef } from 'react';\nimport * as d3 from 'd3';\n\nexport const Skills = () => {\n  const svgRef = useRef();\n\n  const skills = [\n    { title: \"Python Scripting\", level: 8 },\n    { title: \"ML Frameworks\", level: 7 },\n    { title: \"Databases\", level: 9 },\n    { title: \"Data Analysis\", level: 8 },\n    { title: \"DevOps\", level: 6 },\n  ];\n\n  useEffect(() => {\n    const width = 400;\n    const height = 400;\n    const levels = 10; // Number of concentric circles\n    const angleSlice = (Math.PI * 2) / skills.length;\n\n    const radius = Math.min(width / 2, height / 2); // Radius of the radar chart\n\n    const svg = d3.select(svgRef.current)\n      .attr(\"width\", width)\n      .attr(\"height\", height)\n      .append(\"g\")\n      .attr(\"transform\", `translate(${width / 2},${height / 2})`);\n\n    // Draw concentric circles\n    for (let i = 1; i <= levels; i++) {\n      svg.append(\"circle\")\n        .attr(\"cx\", 0)\n        .attr(\"cy\", 0)\n        .attr(\"r\", (radius / levels) * i)\n        .style(\"fill\", \"none\")\n        .style(\"stroke\", \"#ccc\");\n    }\n\n    // Draw the axes\n    skills.forEach((skill, i) => {\n      const angle = i * angleSlice;\n      const x = radius * Math.cos(angle);\n      const y = radius * Math.sin(angle);\n\n      svg.append(\"line\")\n        .attr(\"x1\", 0)\n        .attr(\"y1\", 0)\n        .attr(\"x2\", x)\n        .attr(\"y2\", y)\n        .style(\"stroke\", \"#ccc\");\n\n      svg.append(\"text\")\n        .attr(\"x\", x * 1.1)\n        .attr(\"y\", y * 1.1)\n        .attr(\"dy\", \"0.35em\")\n        .style(\"text-anchor\", x > 0 ? \"start\" : \"end\")\n        .text(skill.title)\n        .style(\"fill\", \"#fff\")\n        .style(\"font-size\", \"12px\");\n    });\n\n    // Draw the skill levels\n    const radarLine = d3.lineRadial()\n      .radius(d => (radius / levels) * d.level)\n      .angle((d, i) => i * angleSlice);\n\n    svg.append(\"path\")\n      .datum(skills)\n      .attr(\"d\", radarLine)\n      .style(\"fill\", \"rgba(255, 0, 0, 0.5)\")\n      .style(\"stroke\", \"#ff0000\")\n      .style(\"stroke-width\", \"2px\");\n\n    // Add points at skill levels\n    skills.forEach((skill, i) => {\n      const angle = i * angleSlice;\n      const x = (radius / levels) * skill.level * Math.cos(angle);\n      const y = (radius / levels) * skill.level * Math.sin(angle);\n\n      svg.append(\"circle\")\n        .attr(\"cx\", x)\n        .attr(\"cy\", y)\n        .attr(\"r\", 4)\n        .style(\"fill\", \"#ff0000\");\n    });\n  }, [skills]);\n\n  return (\n    <section className=\"skill\" id=\"skills\">\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"col-12\">\n            <div className=\"skill-bx wow zoomIn\">\n              <h2>Skills</h2>\n              <p>Acquired skills through academic and professional training include:</p>\n              <svg ref={svgRef}></svg>\n            </div>\n          </div>\n        </div>\n      </div>\n    </section>\n  );\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}