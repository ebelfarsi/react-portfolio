{"ast":null,"code":"import _objectSpread from \"C:/Users/ebelfars/PycharmProjects/react-portfolio/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _assertThisInitialized from \"C:/Users/ebelfars/PycharmProjects/react-portfolio/node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js\";\nimport _get from \"C:/Users/ebelfars/PycharmProjects/react-portfolio/node_modules/@babel/runtime/helpers/esm/get.js\";\nimport _getPrototypeOf from \"C:/Users/ebelfars/PycharmProjects/react-portfolio/node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js\";\nimport _inherits from \"C:/Users/ebelfars/PycharmProjects/react-portfolio/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"C:/Users/ebelfars/PycharmProjects/react-portfolio/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport _slicedToArray from \"C:/Users/ebelfars/PycharmProjects/react-portfolio/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport _defineProperty from \"C:/Users/ebelfars/PycharmProjects/react-portfolio/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport _createForOfIteratorHelper from \"C:/Users/ebelfars/PycharmProjects/react-portfolio/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js\";\nimport _toConsumableArray from \"C:/Users/ebelfars/PycharmProjects/react-portfolio/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport _classCallCheck from \"C:/Users/ebelfars/PycharmProjects/react-portfolio/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"C:/Users/ebelfars/PycharmProjects/react-portfolio/node_modules/@babel/runtime/helpers/esm/createClass.js\";\n\n/*!\n * Chart.js v4.4.4\n * https://www.chartjs.org\n * (c) 2024 Chart.js Contributors\n * Released under the MIT License\n */\nimport { r as requestAnimFrame, a as resolve, e as effects, c as _color, i as isObject, d as defaults, b as isArray, v as valueOrDefault, u as unlistenArrayEvents, l as listenArrayEvents, f as resolveObjectKey, g as isNumberFinite, h as defined, s as sign, j as createContext, k as isNullOrUndef, _ as _arrayUnique, t as toRadians, m as toPercentage, n as toDimension, T as TAU, o as formatNumber, p as _angleBetween, H as HALF_PI, P as PI, q as _getStartAndCountOfVisiblePoints, w as _scaleRangesChanged, x as isNumber, y as _parseObjectDataRadialScale, z as getRelativePosition, A as _rlookupByKey, B as _lookupByKey, C as _isPointInArea, D as getAngleFromPoint, E as toPadding, F as each, G as _getMaximumSize, I as _getParentNode, J as readUsedSize, K as supportsEventListenerOptions, L as throttled, M as _isDomSupported, N as _factorize, O as finiteOrDefault, Q as callback, R as _addGrace, S as _limitValue, U as toDegrees, V as _measureText, W as _int16Range, X as _alignPixel, Y as clipArea, Z as renderText, $ as unclipArea, a0 as toFont, a1 as _toLeftRightCenter, a2 as _alignStartEnd, a3 as overrides, a4 as merge, a5 as _capitalize, a6 as descriptors, a7 as isFunction, a8 as _attachContext, a9 as _createResolver, aa as _descriptors, ab as mergeIf, ac as uid, ad as debounce, ae as retinaScale, af as clearCanvas, ag as setsEqual, ah as _elementsEqual, ai as _isClickEvent, aj as _isBetween, ak as _readValueToProps, al as _updateBezierControlPoints, am as _computeSegments, an as _boundSegments, ao as _steppedInterpolation, ap as _bezierInterpolation, aq as _pointInLine, ar as _steppedLineTo, as as _bezierCurveTo, at as drawPoint, au as addRoundedRectPath, av as toTRBL, aw as toTRBLCorners, ax as _boundSegment, ay as _normalizeAngle, az as getRtlAdapter, aA as overrideTextDirection, aB as _textX, aC as restoreTextDirection, aD as drawPointLegend, aE as distanceBetweenPoints, aF as noop, aG as _setMinAndMaxByKey, aH as niceNum, aI as almostWhole, aJ as almostEquals, aK as _decimalPlaces, aL as Ticks, aM as log10, aN as _longestText, aO as _filterBetween, aP as _lookup } from './chunks/helpers.segment.js';\nimport '@kurkle/color';\n\nvar Animator = /*#__PURE__*/function () {\n  function Animator() {\n    _classCallCheck(this, Animator);\n\n    this._request = null;\n    this._charts = new Map();\n    this._running = false;\n    this._lastDate = undefined;\n  }\n\n  _createClass(Animator, [{\n    key: \"_notify\",\n    value: function _notify(chart, anims, date, type) {\n      var callbacks = anims.listeners[type];\n      var numSteps = anims.duration;\n      callbacks.forEach(function (fn) {\n        return fn({\n          chart: chart,\n          initial: anims.initial,\n          numSteps: numSteps,\n          currentStep: Math.min(date - anims.start, numSteps)\n        });\n      });\n    }\n  }, {\n    key: \"_refresh\",\n    value: function _refresh() {\n      var _this = this;\n\n      if (this._request) {\n        return;\n      }\n\n      this._running = true;\n      this._request = requestAnimFrame.call(window, function () {\n        _this._update();\n\n        _this._request = null;\n\n        if (_this._running) {\n          _this._refresh();\n        }\n      });\n    }\n  }, {\n    key: \"_update\",\n    value: function _update() {\n      var _this2 = this;\n\n      var date = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : Date.now();\n      var remaining = 0;\n\n      this._charts.forEach(function (anims, chart) {\n        if (!anims.running || !anims.items.length) {\n          return;\n        }\n\n        var items = anims.items;\n        var i = items.length - 1;\n        var draw = false;\n        var item;\n\n        for (; i >= 0; --i) {\n          item = items[i];\n\n          if (item._active) {\n            if (item._total > anims.duration) {\n              anims.duration = item._total;\n            }\n\n            item.tick(date);\n            draw = true;\n          } else {\n            items[i] = items[items.length - 1];\n            items.pop();\n          }\n        }\n\n        if (draw) {\n          chart.draw();\n\n          _this2._notify(chart, anims, date, 'progress');\n        }\n\n        if (!items.length) {\n          anims.running = false;\n\n          _this2._notify(chart, anims, date, 'complete');\n\n          anims.initial = false;\n        }\n\n        remaining += items.length;\n      });\n\n      this._lastDate = date;\n\n      if (remaining === 0) {\n        this._running = false;\n      }\n    }\n  }, {\n    key: \"_getAnims\",\n    value: function _getAnims(chart) {\n      var charts = this._charts;\n      var anims = charts.get(chart);\n\n      if (!anims) {\n        anims = {\n          running: false,\n          initial: true,\n          items: [],\n          listeners: {\n            complete: [],\n            progress: []\n          }\n        };\n        charts.set(chart, anims);\n      }\n\n      return anims;\n    }\n  }, {\n    key: \"listen\",\n    value: function listen(chart, event, cb) {\n      this._getAnims(chart).listeners[event].push(cb);\n    }\n  }, {\n    key: \"add\",\n    value: function add(chart, items) {\n      var _this$_getAnims$items;\n\n      if (!items || !items.length) {\n        return;\n      }\n\n      (_this$_getAnims$items = this._getAnims(chart).items).push.apply(_this$_getAnims$items, _toConsumableArray(items));\n    }\n  }, {\n    key: \"has\",\n    value: function has(chart) {\n      return this._getAnims(chart).items.length > 0;\n    }\n  }, {\n    key: \"start\",\n    value: function start(chart) {\n      var anims = this._charts.get(chart);\n\n      if (!anims) {\n        return;\n      }\n\n      anims.running = true;\n      anims.start = Date.now();\n      anims.duration = anims.items.reduce(function (acc, cur) {\n        return Math.max(acc, cur._duration);\n      }, 0);\n\n      this._refresh();\n    }\n  }, {\n    key: \"running\",\n    value: function running(chart) {\n      if (!this._running) {\n        return false;\n      }\n\n      var anims = this._charts.get(chart);\n\n      if (!anims || !anims.running || !anims.items.length) {\n        return false;\n      }\n\n      return true;\n    }\n  }, {\n    key: \"stop\",\n    value: function stop(chart) {\n      var anims = this._charts.get(chart);\n\n      if (!anims || !anims.items.length) {\n        return;\n      }\n\n      var items = anims.items;\n      var i = items.length - 1;\n\n      for (; i >= 0; --i) {\n        items[i].cancel();\n      }\n\n      anims.items = [];\n\n      this._notify(chart, anims, Date.now(), 'complete');\n    }\n  }, {\n    key: \"remove\",\n    value: function remove(chart) {\n      return this._charts.delete(chart);\n    }\n  }]);\n\n  return Animator;\n}();\n\nvar animator = /* #__PURE__ */new Animator();\nvar transparent = 'transparent';\nvar interpolators = {\n  boolean: function boolean(from, to, factor) {\n    return factor > 0.5 ? to : from;\n  },\n  color: function color(from, to, factor) {\n    var c0 = _color(from || transparent);\n\n    var c1 = c0.valid && _color(to || transparent);\n\n    return c1 && c1.valid ? c1.mix(c0, factor).hexString() : to;\n  },\n  number: function number(from, to, factor) {\n    return from + (to - from) * factor;\n  }\n};\n\nvar Animation = /*#__PURE__*/function () {\n  function Animation(cfg, target, prop, to) {\n    _classCallCheck(this, Animation);\n\n    var currentValue = target[prop];\n    to = resolve([cfg.to, to, currentValue, cfg.from]);\n    var from = resolve([cfg.from, currentValue, to]);\n    this._active = true;\n    this._fn = cfg.fn || interpolators[cfg.type || typeof from];\n    this._easing = effects[cfg.easing] || effects.linear;\n    this._start = Math.floor(Date.now() + (cfg.delay || 0));\n    this._duration = this._total = Math.floor(cfg.duration);\n    this._loop = !!cfg.loop;\n    this._target = target;\n    this._prop = prop;\n    this._from = from;\n    this._to = to;\n    this._promises = undefined;\n  }\n\n  _createClass(Animation, [{\n    key: \"active\",\n    value: function active() {\n      return this._active;\n    }\n  }, {\n    key: \"update\",\n    value: function update(cfg, to, date) {\n      if (this._active) {\n        this._notify(false);\n\n        var currentValue = this._target[this._prop];\n        var elapsed = date - this._start;\n        var remain = this._duration - elapsed;\n        this._start = date;\n        this._duration = Math.floor(Math.max(remain, cfg.duration));\n        this._total += elapsed;\n        this._loop = !!cfg.loop;\n        this._to = resolve([cfg.to, to, currentValue, cfg.from]);\n        this._from = resolve([cfg.from, currentValue, to]);\n      }\n    }\n  }, {\n    key: \"cancel\",\n    value: function cancel() {\n      if (this._active) {\n        this.tick(Date.now());\n        this._active = false;\n\n        this._notify(false);\n      }\n    }\n  }, {\n    key: \"tick\",\n    value: function tick(date) {\n      var elapsed = date - this._start;\n      var duration = this._duration;\n      var prop = this._prop;\n      var from = this._from;\n      var loop = this._loop;\n      var to = this._to;\n      var factor;\n      this._active = from !== to && (loop || elapsed < duration);\n\n      if (!this._active) {\n        this._target[prop] = to;\n\n        this._notify(true);\n\n        return;\n      }\n\n      if (elapsed < 0) {\n        this._target[prop] = from;\n        return;\n      }\n\n      factor = elapsed / duration % 2;\n      factor = loop && factor > 1 ? 2 - factor : factor;\n      factor = this._easing(Math.min(1, Math.max(0, factor)));\n      this._target[prop] = this._fn(from, to, factor);\n    }\n  }, {\n    key: \"wait\",\n    value: function wait() {\n      var promises = this._promises || (this._promises = []);\n      return new Promise(function (res, rej) {\n        promises.push({\n          res: res,\n          rej: rej\n        });\n      });\n    }\n  }, {\n    key: \"_notify\",\n    value: function _notify(resolved) {\n      var method = resolved ? 'res' : 'rej';\n      var promises = this._promises || [];\n\n      for (var i = 0; i < promises.length; i++) {\n        promises[i][method]();\n      }\n    }\n  }]);\n\n  return Animation;\n}();\n\nvar Animations = /*#__PURE__*/function () {\n  function Animations(chart, config) {\n    _classCallCheck(this, Animations);\n\n    this._chart = chart;\n    this._properties = new Map();\n    this.configure(config);\n  }\n\n  _createClass(Animations, [{\n    key: \"configure\",\n    value: function configure(config) {\n      if (!isObject(config)) {\n        return;\n      }\n\n      var animationOptions = Object.keys(defaults.animation);\n      var animatedProps = this._properties;\n      Object.getOwnPropertyNames(config).forEach(function (key) {\n        var cfg = config[key];\n\n        if (!isObject(cfg)) {\n          return;\n        }\n\n        var resolved = {};\n\n        var _iterator = _createForOfIteratorHelper(animationOptions),\n            _step;\n\n        try {\n          for (_iterator.s(); !(_step = _iterator.n()).done;) {\n            var option = _step.value;\n            resolved[option] = cfg[option];\n          }\n        } catch (err) {\n          _iterator.e(err);\n        } finally {\n          _iterator.f();\n        }\n\n        (isArray(cfg.properties) && cfg.properties || [key]).forEach(function (prop) {\n          if (prop === key || !animatedProps.has(prop)) {\n            animatedProps.set(prop, resolved);\n          }\n        });\n      });\n    }\n  }, {\n    key: \"_animateOptions\",\n    value: function _animateOptions(target, values) {\n      var newOptions = values.options;\n      var options = resolveTargetOptions(target, newOptions);\n\n      if (!options) {\n        return [];\n      }\n\n      var animations = this._createAnimations(options, newOptions);\n\n      if (newOptions.$shared) {\n        awaitAll(target.options.$animations, newOptions).then(function () {\n          target.options = newOptions;\n        }, function () {});\n      }\n\n      return animations;\n    }\n  }, {\n    key: \"_createAnimations\",\n    value: function _createAnimations(target, values) {\n      var animatedProps = this._properties;\n      var animations = [];\n      var running = target.$animations || (target.$animations = {});\n      var props = Object.keys(values);\n      var date = Date.now();\n      var i;\n\n      for (i = props.length - 1; i >= 0; --i) {\n        var prop = props[i];\n\n        if (prop.charAt(0) === '$') {\n          continue;\n        }\n\n        if (prop === 'options') {\n          animations.push.apply(animations, _toConsumableArray(this._animateOptions(target, values)));\n          continue;\n        }\n\n        var value = values[prop];\n        var animation = running[prop];\n        var cfg = animatedProps.get(prop);\n\n        if (animation) {\n          if (cfg && animation.active()) {\n            animation.update(cfg, value, date);\n            continue;\n          } else {\n            animation.cancel();\n          }\n        }\n\n        if (!cfg || !cfg.duration) {\n          target[prop] = value;\n          continue;\n        }\n\n        running[prop] = animation = new Animation(cfg, target, prop, value);\n        animations.push(animation);\n      }\n\n      return animations;\n    }\n  }, {\n    key: \"update\",\n    value: function update(target, values) {\n      if (this._properties.size === 0) {\n        Object.assign(target, values);\n        return;\n      }\n\n      var animations = this._createAnimations(target, values);\n\n      if (animations.length) {\n        animator.add(this._chart, animations);\n        return true;\n      }\n    }\n  }]);\n\n  return Animations;\n}();\n\nfunction awaitAll(animations, properties) {\n  var running = [];\n  var keys = Object.keys(properties);\n\n  for (var i = 0; i < keys.length; i++) {\n    var anim = animations[keys[i]];\n\n    if (anim && anim.active()) {\n      running.push(anim.wait());\n    }\n  }\n\n  return Promise.all(running);\n}\n\nfunction resolveTargetOptions(target, newOptions) {\n  if (!newOptions) {\n    return;\n  }\n\n  var options = target.options;\n\n  if (!options) {\n    target.options = newOptions;\n    return;\n  }\n\n  if (options.$shared) {\n    target.options = options = Object.assign({}, options, {\n      $shared: false,\n      $animations: {}\n    });\n  }\n\n  return options;\n}\n\nfunction scaleClip(scale, allowedOverflow) {\n  var opts = scale && scale.options || {};\n  var reverse = opts.reverse;\n  var min = opts.min === undefined ? allowedOverflow : 0;\n  var max = opts.max === undefined ? allowedOverflow : 0;\n  return {\n    start: reverse ? max : min,\n    end: reverse ? min : max\n  };\n}\n\nfunction defaultClip(xScale, yScale, allowedOverflow) {\n  if (allowedOverflow === false) {\n    return false;\n  }\n\n  var x = scaleClip(xScale, allowedOverflow);\n  var y = scaleClip(yScale, allowedOverflow);\n  return {\n    top: y.end,\n    right: x.end,\n    bottom: y.start,\n    left: x.start\n  };\n}\n\nfunction toClip(value) {\n  var t, r, b, l;\n\n  if (isObject(value)) {\n    t = value.top;\n    r = value.right;\n    b = value.bottom;\n    l = value.left;\n  } else {\n    t = r = b = l = value;\n  }\n\n  return {\n    top: t,\n    right: r,\n    bottom: b,\n    left: l,\n    disabled: value === false\n  };\n}\n\nfunction getSortedDatasetIndices(chart, filterVisible) {\n  var keys = [];\n\n  var metasets = chart._getSortedDatasetMetas(filterVisible);\n\n  var i, ilen;\n\n  for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n    keys.push(metasets[i].index);\n  }\n\n  return keys;\n}\n\nfunction _applyStack(stack, value, dsIndex) {\n  var options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n  var keys = stack.keys;\n  var singleMode = options.mode === 'single';\n  var i, ilen, datasetIndex, otherValue;\n\n  if (value === null) {\n    return;\n  }\n\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    datasetIndex = +keys[i];\n\n    if (datasetIndex === dsIndex) {\n      if (options.all) {\n        continue;\n      }\n\n      break;\n    }\n\n    otherValue = stack.values[datasetIndex];\n\n    if (isNumberFinite(otherValue) && (singleMode || value === 0 || sign(value) === sign(otherValue))) {\n      value += otherValue;\n    }\n  }\n\n  return value;\n}\n\nfunction convertObjectDataToArray(data, meta) {\n  var iScale = meta.iScale,\n      vScale = meta.vScale;\n  var iAxisKey = iScale.axis === 'x' ? 'x' : 'y';\n  var vAxisKey = vScale.axis === 'x' ? 'x' : 'y';\n  var keys = Object.keys(data);\n  var adata = new Array(keys.length);\n  var i, ilen, key;\n\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    var _adata$i;\n\n    key = keys[i];\n    adata[i] = (_adata$i = {}, _defineProperty(_adata$i, iAxisKey, key), _defineProperty(_adata$i, vAxisKey, data[key]), _adata$i);\n  }\n\n  return adata;\n}\n\nfunction isStacked(scale, meta) {\n  var stacked = scale && scale.options.stacked;\n  return stacked || stacked === undefined && meta.stack !== undefined;\n}\n\nfunction getStackKey(indexScale, valueScale, meta) {\n  return \"\".concat(indexScale.id, \".\").concat(valueScale.id, \".\").concat(meta.stack || meta.type);\n}\n\nfunction getUserBounds(scale) {\n  var _scale$getUserBounds = scale.getUserBounds(),\n      min = _scale$getUserBounds.min,\n      max = _scale$getUserBounds.max,\n      minDefined = _scale$getUserBounds.minDefined,\n      maxDefined = _scale$getUserBounds.maxDefined;\n\n  return {\n    min: minDefined ? min : Number.NEGATIVE_INFINITY,\n    max: maxDefined ? max : Number.POSITIVE_INFINITY\n  };\n}\n\nfunction getOrCreateStack(stacks, stackKey, indexValue) {\n  var subStack = stacks[stackKey] || (stacks[stackKey] = {});\n  return subStack[indexValue] || (subStack[indexValue] = {});\n}\n\nfunction getLastIndexInStack(stack, vScale, positive, type) {\n  var _iterator2 = _createForOfIteratorHelper(vScale.getMatchingVisibleMetas(type).reverse()),\n      _step2;\n\n  try {\n    for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n      var meta = _step2.value;\n      var value = stack[meta.index];\n\n      if (positive && value > 0 || !positive && value < 0) {\n        return meta.index;\n      }\n    }\n  } catch (err) {\n    _iterator2.e(err);\n  } finally {\n    _iterator2.f();\n  }\n\n  return null;\n}\n\nfunction updateStacks(controller, parsed) {\n  var chart = controller.chart,\n      meta = controller._cachedMeta;\n  var stacks = chart._stacks || (chart._stacks = {});\n  var iScale = meta.iScale,\n      vScale = meta.vScale,\n      datasetIndex = meta.index;\n  var iAxis = iScale.axis;\n  var vAxis = vScale.axis;\n  var key = getStackKey(iScale, vScale, meta);\n  var ilen = parsed.length;\n  var stack;\n\n  for (var i = 0; i < ilen; ++i) {\n    var item = parsed[i];\n    var _index = item[iAxis],\n        value = item[vAxis];\n    var itemStacks = item._stacks || (item._stacks = {});\n    stack = itemStacks[vAxis] = getOrCreateStack(stacks, key, _index);\n    stack[datasetIndex] = value;\n    stack._top = getLastIndexInStack(stack, vScale, true, meta.type);\n    stack._bottom = getLastIndexInStack(stack, vScale, false, meta.type);\n    var visualValues = stack._visualValues || (stack._visualValues = {});\n    visualValues[datasetIndex] = value;\n  }\n}\n\nfunction getFirstScaleId(chart, axis) {\n  var scales = chart.scales;\n  return Object.keys(scales).filter(function (key) {\n    return scales[key].axis === axis;\n  }).shift();\n}\n\nfunction createDatasetContext(parent, index) {\n  return createContext(parent, {\n    active: false,\n    dataset: undefined,\n    datasetIndex: index,\n    index: index,\n    mode: 'default',\n    type: 'dataset'\n  });\n}\n\nfunction createDataContext(parent, index, element) {\n  return createContext(parent, {\n    active: false,\n    dataIndex: index,\n    parsed: undefined,\n    raw: undefined,\n    element: element,\n    index: index,\n    mode: 'default',\n    type: 'data'\n  });\n}\n\nfunction clearStacks(meta, items) {\n  var datasetIndex = meta.controller.index;\n  var axis = meta.vScale && meta.vScale.axis;\n\n  if (!axis) {\n    return;\n  }\n\n  items = items || meta._parsed;\n\n  var _iterator3 = _createForOfIteratorHelper(items),\n      _step3;\n\n  try {\n    for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n      var parsed = _step3.value;\n      var stacks = parsed._stacks;\n\n      if (!stacks || stacks[axis] === undefined || stacks[axis][datasetIndex] === undefined) {\n        return;\n      }\n\n      delete stacks[axis][datasetIndex];\n\n      if (stacks[axis]._visualValues !== undefined && stacks[axis]._visualValues[datasetIndex] !== undefined) {\n        delete stacks[axis]._visualValues[datasetIndex];\n      }\n    }\n  } catch (err) {\n    _iterator3.e(err);\n  } finally {\n    _iterator3.f();\n  }\n}\n\nvar isDirectUpdateMode = function isDirectUpdateMode(mode) {\n  return mode === 'reset' || mode === 'none';\n};\n\nvar cloneIfNotShared = function cloneIfNotShared(cached, shared) {\n  return shared ? cached : Object.assign({}, cached);\n};\n\nvar createStack = function createStack(canStack, meta, chart) {\n  return canStack && !meta.hidden && meta._stacked && {\n    keys: getSortedDatasetIndices(chart, true),\n    values: null\n  };\n};\n\nvar DatasetController = /*#__PURE__*/function () {\n  function DatasetController(chart, datasetIndex) {\n    _classCallCheck(this, DatasetController);\n\n    this.chart = chart;\n    this._ctx = chart.ctx;\n    this.index = datasetIndex;\n    this._cachedDataOpts = {};\n    this._cachedMeta = this.getMeta();\n    this._type = this._cachedMeta.type;\n    this.options = undefined;\n    this._parsing = false;\n    this._data = undefined;\n    this._objectData = undefined;\n    this._sharedOptions = undefined;\n    this._drawStart = undefined;\n    this._drawCount = undefined;\n    this.enableOptionSharing = false;\n    this.supportsDecimation = false;\n    this.$context = undefined;\n    this._syncList = [];\n    this.datasetElementType = (this instanceof DatasetController ? this.constructor : void 0).datasetElementType;\n    this.dataElementType = (this instanceof DatasetController ? this.constructor : void 0).dataElementType;\n    this.initialize();\n  }\n\n  _createClass(DatasetController, [{\n    key: \"initialize\",\n    value: function initialize() {\n      var meta = this._cachedMeta;\n      this.configure();\n      this.linkScales();\n      meta._stacked = isStacked(meta.vScale, meta);\n      this.addElements();\n\n      if (this.options.fill && !this.chart.isPluginEnabled('filler')) {\n        console.warn(\"Tried to use the 'fill' option without the 'Filler' plugin enabled. Please import and register the 'Filler' plugin and make sure it is not disabled in the options\");\n      }\n    }\n  }, {\n    key: \"updateIndex\",\n    value: function updateIndex(datasetIndex) {\n      if (this.index !== datasetIndex) {\n        clearStacks(this._cachedMeta);\n      }\n\n      this.index = datasetIndex;\n    }\n  }, {\n    key: \"linkScales\",\n    value: function linkScales() {\n      var chart = this.chart;\n      var meta = this._cachedMeta;\n      var dataset = this.getDataset();\n\n      var chooseId = function chooseId(axis, x, y, r) {\n        return axis === 'x' ? x : axis === 'r' ? r : y;\n      };\n\n      var xid = meta.xAxisID = valueOrDefault(dataset.xAxisID, getFirstScaleId(chart, 'x'));\n      var yid = meta.yAxisID = valueOrDefault(dataset.yAxisID, getFirstScaleId(chart, 'y'));\n      var rid = meta.rAxisID = valueOrDefault(dataset.rAxisID, getFirstScaleId(chart, 'r'));\n      var indexAxis = meta.indexAxis;\n      var iid = meta.iAxisID = chooseId(indexAxis, xid, yid, rid);\n      var vid = meta.vAxisID = chooseId(indexAxis, yid, xid, rid);\n      meta.xScale = this.getScaleForId(xid);\n      meta.yScale = this.getScaleForId(yid);\n      meta.rScale = this.getScaleForId(rid);\n      meta.iScale = this.getScaleForId(iid);\n      meta.vScale = this.getScaleForId(vid);\n    }\n  }, {\n    key: \"getDataset\",\n    value: function getDataset() {\n      return this.chart.data.datasets[this.index];\n    }\n  }, {\n    key: \"getMeta\",\n    value: function getMeta() {\n      return this.chart.getDatasetMeta(this.index);\n    }\n  }, {\n    key: \"getScaleForId\",\n    value: function getScaleForId(scaleID) {\n      return this.chart.scales[scaleID];\n    }\n  }, {\n    key: \"_getOtherScale\",\n    value: function _getOtherScale(scale) {\n      var meta = this._cachedMeta;\n      return scale === meta.iScale ? meta.vScale : meta.iScale;\n    }\n  }, {\n    key: \"reset\",\n    value: function reset() {\n      this._update('reset');\n    }\n  }, {\n    key: \"_destroy\",\n    value: function _destroy() {\n      var meta = this._cachedMeta;\n\n      if (this._data) {\n        unlistenArrayEvents(this._data, this);\n      }\n\n      if (meta._stacked) {\n        clearStacks(meta);\n      }\n    }\n  }, {\n    key: \"_dataCheck\",\n    value: function _dataCheck() {\n      var dataset = this.getDataset();\n      var data = dataset.data || (dataset.data = []);\n      var _data = this._data;\n\n      if (isObject(data)) {\n        var meta = this._cachedMeta;\n        this._data = convertObjectDataToArray(data, meta);\n      } else if (_data !== data) {\n        if (_data) {\n          unlistenArrayEvents(_data, this);\n          var _meta = this._cachedMeta;\n          clearStacks(_meta);\n          _meta._parsed = [];\n        }\n\n        if (data && Object.isExtensible(data)) {\n          listenArrayEvents(data, this);\n        }\n\n        this._syncList = [];\n        this._data = data;\n      }\n    }\n  }, {\n    key: \"addElements\",\n    value: function addElements() {\n      var meta = this._cachedMeta;\n\n      this._dataCheck();\n\n      if (this.datasetElementType) {\n        meta.dataset = new this.datasetElementType();\n      }\n    }\n  }, {\n    key: \"buildOrUpdateElements\",\n    value: function buildOrUpdateElements(resetNewElements) {\n      var meta = this._cachedMeta;\n      var dataset = this.getDataset();\n      var stackChanged = false;\n\n      this._dataCheck();\n\n      var oldStacked = meta._stacked;\n      meta._stacked = isStacked(meta.vScale, meta);\n\n      if (meta.stack !== dataset.stack) {\n        stackChanged = true;\n        clearStacks(meta);\n        meta.stack = dataset.stack;\n      }\n\n      this._resyncElements(resetNewElements);\n\n      if (stackChanged || oldStacked !== meta._stacked) {\n        updateStacks(this, meta._parsed);\n      }\n    }\n  }, {\n    key: \"configure\",\n    value: function configure() {\n      var config = this.chart.config;\n      var scopeKeys = config.datasetScopeKeys(this._type);\n      var scopes = config.getOptionScopes(this.getDataset(), scopeKeys, true);\n      this.options = config.createResolver(scopes, this.getContext());\n      this._parsing = this.options.parsing;\n      this._cachedDataOpts = {};\n    }\n  }, {\n    key: \"parse\",\n    value: function parse(start, count) {\n      var meta = this._cachedMeta,\n          data = this._data;\n      var iScale = meta.iScale,\n          _stacked = meta._stacked;\n      var iAxis = iScale.axis;\n      var sorted = start === 0 && count === data.length ? true : meta._sorted;\n      var prev = start > 0 && meta._parsed[start - 1];\n      var i, cur, parsed;\n\n      if (this._parsing === false) {\n        meta._parsed = data;\n        meta._sorted = true;\n        parsed = data;\n      } else {\n        if (isArray(data[start])) {\n          parsed = this.parseArrayData(meta, data, start, count);\n        } else if (isObject(data[start])) {\n          parsed = this.parseObjectData(meta, data, start, count);\n        } else {\n          parsed = this.parsePrimitiveData(meta, data, start, count);\n        }\n\n        var isNotInOrderComparedToPrev = function isNotInOrderComparedToPrev() {\n          return cur[iAxis] === null || prev && cur[iAxis] < prev[iAxis];\n        };\n\n        for (i = 0; i < count; ++i) {\n          meta._parsed[i + start] = cur = parsed[i];\n\n          if (sorted) {\n            if (isNotInOrderComparedToPrev()) {\n              sorted = false;\n            }\n\n            prev = cur;\n          }\n        }\n\n        meta._sorted = sorted;\n      }\n\n      if (_stacked) {\n        updateStacks(this, parsed);\n      }\n    }\n  }, {\n    key: \"parsePrimitiveData\",\n    value: function parsePrimitiveData(meta, data, start, count) {\n      var iScale = meta.iScale,\n          vScale = meta.vScale;\n      var iAxis = iScale.axis;\n      var vAxis = vScale.axis;\n      var labels = iScale.getLabels();\n      var singleScale = iScale === vScale;\n      var parsed = new Array(count);\n      var i, ilen, index;\n\n      for (i = 0, ilen = count; i < ilen; ++i) {\n        var _parsed$i;\n\n        index = i + start;\n        parsed[i] = (_parsed$i = {}, _defineProperty(_parsed$i, iAxis, singleScale || iScale.parse(labels[index], index)), _defineProperty(_parsed$i, vAxis, vScale.parse(data[index], index)), _parsed$i);\n      }\n\n      return parsed;\n    }\n  }, {\n    key: \"parseArrayData\",\n    value: function parseArrayData(meta, data, start, count) {\n      var xScale = meta.xScale,\n          yScale = meta.yScale;\n      var parsed = new Array(count);\n      var i, ilen, index, item;\n\n      for (i = 0, ilen = count; i < ilen; ++i) {\n        index = i + start;\n        item = data[index];\n        parsed[i] = {\n          x: xScale.parse(item[0], index),\n          y: yScale.parse(item[1], index)\n        };\n      }\n\n      return parsed;\n    }\n  }, {\n    key: \"parseObjectData\",\n    value: function parseObjectData(meta, data, start, count) {\n      var xScale = meta.xScale,\n          yScale = meta.yScale;\n      var _this$_parsing = this._parsing,\n          _this$_parsing$xAxisK = _this$_parsing.xAxisKey,\n          xAxisKey = _this$_parsing$xAxisK === void 0 ? 'x' : _this$_parsing$xAxisK,\n          _this$_parsing$yAxisK = _this$_parsing.yAxisKey,\n          yAxisKey = _this$_parsing$yAxisK === void 0 ? 'y' : _this$_parsing$yAxisK;\n      var parsed = new Array(count);\n      var i, ilen, index, item;\n\n      for (i = 0, ilen = count; i < ilen; ++i) {\n        index = i + start;\n        item = data[index];\n        parsed[i] = {\n          x: xScale.parse(resolveObjectKey(item, xAxisKey), index),\n          y: yScale.parse(resolveObjectKey(item, yAxisKey), index)\n        };\n      }\n\n      return parsed;\n    }\n  }, {\n    key: \"getParsed\",\n    value: function getParsed(index) {\n      return this._cachedMeta._parsed[index];\n    }\n  }, {\n    key: \"getDataElement\",\n    value: function getDataElement(index) {\n      return this._cachedMeta.data[index];\n    }\n  }, {\n    key: \"applyStack\",\n    value: function applyStack(scale, parsed, mode) {\n      var chart = this.chart;\n      var meta = this._cachedMeta;\n      var value = parsed[scale.axis];\n      var stack = {\n        keys: getSortedDatasetIndices(chart, true),\n        values: parsed._stacks[scale.axis]._visualValues\n      };\n      return _applyStack(stack, value, meta.index, {\n        mode: mode\n      });\n    }\n  }, {\n    key: \"updateRangeFromParsed\",\n    value: function updateRangeFromParsed(range, scale, parsed, stack) {\n      var parsedValue = parsed[scale.axis];\n      var value = parsedValue === null ? NaN : parsedValue;\n      var values = stack && parsed._stacks[scale.axis];\n\n      if (stack && values) {\n        stack.values = values;\n        value = _applyStack(stack, parsedValue, this._cachedMeta.index);\n      }\n\n      range.min = Math.min(range.min, value);\n      range.max = Math.max(range.max, value);\n    }\n  }, {\n    key: \"getMinMax\",\n    value: function getMinMax(scale, canStack) {\n      var meta = this._cachedMeta;\n      var _parsed = meta._parsed;\n      var sorted = meta._sorted && scale === meta.iScale;\n      var ilen = _parsed.length;\n\n      var otherScale = this._getOtherScale(scale);\n\n      var stack = createStack(canStack, meta, this.chart);\n      var range = {\n        min: Number.POSITIVE_INFINITY,\n        max: Number.NEGATIVE_INFINITY\n      };\n\n      var _getUserBounds = getUserBounds(otherScale),\n          otherMin = _getUserBounds.min,\n          otherMax = _getUserBounds.max;\n\n      var i, parsed;\n\n      function _skip() {\n        parsed = _parsed[i];\n        var otherValue = parsed[otherScale.axis];\n        return !isNumberFinite(parsed[scale.axis]) || otherMin > otherValue || otherMax < otherValue;\n      }\n\n      for (i = 0; i < ilen; ++i) {\n        if (_skip()) {\n          continue;\n        }\n\n        this.updateRangeFromParsed(range, scale, parsed, stack);\n\n        if (sorted) {\n          break;\n        }\n      }\n\n      if (sorted) {\n        for (i = ilen - 1; i >= 0; --i) {\n          if (_skip()) {\n            continue;\n          }\n\n          this.updateRangeFromParsed(range, scale, parsed, stack);\n          break;\n        }\n      }\n\n      return range;\n    }\n  }, {\n    key: \"getAllParsedValues\",\n    value: function getAllParsedValues(scale) {\n      var parsed = this._cachedMeta._parsed;\n      var values = [];\n      var i, ilen, value;\n\n      for (i = 0, ilen = parsed.length; i < ilen; ++i) {\n        value = parsed[i][scale.axis];\n\n        if (isNumberFinite(value)) {\n          values.push(value);\n        }\n      }\n\n      return values;\n    }\n  }, {\n    key: \"getMaxOverflow\",\n    value: function getMaxOverflow() {\n      return false;\n    }\n  }, {\n    key: \"getLabelAndValue\",\n    value: function getLabelAndValue(index) {\n      var meta = this._cachedMeta;\n      var iScale = meta.iScale;\n      var vScale = meta.vScale;\n      var parsed = this.getParsed(index);\n      return {\n        label: iScale ? '' + iScale.getLabelForValue(parsed[iScale.axis]) : '',\n        value: vScale ? '' + vScale.getLabelForValue(parsed[vScale.axis]) : ''\n      };\n    }\n  }, {\n    key: \"_update\",\n    value: function _update(mode) {\n      var meta = this._cachedMeta;\n      this.update(mode || 'default');\n      meta._clip = toClip(valueOrDefault(this.options.clip, defaultClip(meta.xScale, meta.yScale, this.getMaxOverflow())));\n    }\n  }, {\n    key: \"update\",\n    value: function update(mode) {}\n  }, {\n    key: \"draw\",\n    value: function draw() {\n      var ctx = this._ctx;\n      var chart = this.chart;\n      var meta = this._cachedMeta;\n      var elements = meta.data || [];\n      var area = chart.chartArea;\n      var active = [];\n      var start = this._drawStart || 0;\n      var count = this._drawCount || elements.length - start;\n      var drawActiveElementsOnTop = this.options.drawActiveElementsOnTop;\n      var i;\n\n      if (meta.dataset) {\n        meta.dataset.draw(ctx, area, start, count);\n      }\n\n      for (i = start; i < start + count; ++i) {\n        var element = elements[i];\n\n        if (element.hidden) {\n          continue;\n        }\n\n        if (element.active && drawActiveElementsOnTop) {\n          active.push(element);\n        } else {\n          element.draw(ctx, area);\n        }\n      }\n\n      for (i = 0; i < active.length; ++i) {\n        active[i].draw(ctx, area);\n      }\n    }\n  }, {\n    key: \"getStyle\",\n    value: function getStyle(index, active) {\n      var mode = active ? 'active' : 'default';\n      return index === undefined && this._cachedMeta.dataset ? this.resolveDatasetElementOptions(mode) : this.resolveDataElementOptions(index || 0, mode);\n    }\n  }, {\n    key: \"getContext\",\n    value: function getContext(index, active, mode) {\n      var dataset = this.getDataset();\n      var context;\n\n      if (index >= 0 && index < this._cachedMeta.data.length) {\n        var element = this._cachedMeta.data[index];\n        context = element.$context || (element.$context = createDataContext(this.getContext(), index, element));\n        context.parsed = this.getParsed(index);\n        context.raw = dataset.data[index];\n        context.index = context.dataIndex = index;\n      } else {\n        context = this.$context || (this.$context = createDatasetContext(this.chart.getContext(), this.index));\n        context.dataset = dataset;\n        context.index = context.datasetIndex = this.index;\n      }\n\n      context.active = !!active;\n      context.mode = mode;\n      return context;\n    }\n  }, {\n    key: \"resolveDatasetElementOptions\",\n    value: function resolveDatasetElementOptions(mode) {\n      return this._resolveElementOptions(this.datasetElementType.id, mode);\n    }\n  }, {\n    key: \"resolveDataElementOptions\",\n    value: function resolveDataElementOptions(index, mode) {\n      return this._resolveElementOptions(this.dataElementType.id, mode, index);\n    }\n  }, {\n    key: \"_resolveElementOptions\",\n    value: function _resolveElementOptions(elementType) {\n      var _this3 = this;\n\n      var mode = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'default';\n      var index = arguments.length > 2 ? arguments[2] : undefined;\n      var active = mode === 'active';\n      var cache = this._cachedDataOpts;\n      var cacheKey = elementType + '-' + mode;\n      var cached = cache[cacheKey];\n      var sharing = this.enableOptionSharing && defined(index);\n\n      if (cached) {\n        return cloneIfNotShared(cached, sharing);\n      }\n\n      var config = this.chart.config;\n      var scopeKeys = config.datasetElementScopeKeys(this._type, elementType);\n      var prefixes = active ? [\"\".concat(elementType, \"Hover\"), 'hover', elementType, ''] : [elementType, ''];\n      var scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n      var names = Object.keys(defaults.elements[elementType]);\n\n      var context = function context() {\n        return _this3.getContext(index, active, mode);\n      };\n\n      var values = config.resolveNamedOptions(scopes, names, context, prefixes);\n\n      if (values.$shared) {\n        values.$shared = sharing;\n        cache[cacheKey] = Object.freeze(cloneIfNotShared(values, sharing));\n      }\n\n      return values;\n    }\n  }, {\n    key: \"_resolveAnimations\",\n    value: function _resolveAnimations(index, transition, active) {\n      var chart = this.chart;\n      var cache = this._cachedDataOpts;\n      var cacheKey = \"animation-\".concat(transition);\n      var cached = cache[cacheKey];\n\n      if (cached) {\n        return cached;\n      }\n\n      var options;\n\n      if (chart.options.animation !== false) {\n        var config = this.chart.config;\n        var scopeKeys = config.datasetAnimationScopeKeys(this._type, transition);\n        var scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n        options = config.createResolver(scopes, this.getContext(index, active, transition));\n      }\n\n      var animations = new Animations(chart, options && options.animations);\n\n      if (options && options._cacheable) {\n        cache[cacheKey] = Object.freeze(animations);\n      }\n\n      return animations;\n    }\n  }, {\n    key: \"getSharedOptions\",\n    value: function getSharedOptions(options) {\n      if (!options.$shared) {\n        return;\n      }\n\n      return this._sharedOptions || (this._sharedOptions = Object.assign({}, options));\n    }\n  }, {\n    key: \"includeOptions\",\n    value: function includeOptions(mode, sharedOptions) {\n      return !sharedOptions || isDirectUpdateMode(mode) || this.chart._animationsDisabled;\n    }\n  }, {\n    key: \"_getSharedOptions\",\n    value: function _getSharedOptions(start, mode) {\n      var firstOpts = this.resolveDataElementOptions(start, mode);\n      var previouslySharedOptions = this._sharedOptions;\n      var sharedOptions = this.getSharedOptions(firstOpts);\n      var includeOptions = this.includeOptions(mode, sharedOptions) || sharedOptions !== previouslySharedOptions;\n      this.updateSharedOptions(sharedOptions, mode, firstOpts);\n      return {\n        sharedOptions: sharedOptions,\n        includeOptions: includeOptions\n      };\n    }\n  }, {\n    key: \"updateElement\",\n    value: function updateElement(element, index, properties, mode) {\n      if (isDirectUpdateMode(mode)) {\n        Object.assign(element, properties);\n      } else {\n        this._resolveAnimations(index, mode).update(element, properties);\n      }\n    }\n  }, {\n    key: \"updateSharedOptions\",\n    value: function updateSharedOptions(sharedOptions, mode, newOptions) {\n      if (sharedOptions && !isDirectUpdateMode(mode)) {\n        this._resolveAnimations(undefined, mode).update(sharedOptions, newOptions);\n      }\n    }\n  }, {\n    key: \"_setStyle\",\n    value: function _setStyle(element, index, mode, active) {\n      element.active = active;\n      var options = this.getStyle(index, active);\n\n      this._resolveAnimations(index, mode, active).update(element, {\n        options: !active && this.getSharedOptions(options) || options\n      });\n    }\n  }, {\n    key: \"removeHoverStyle\",\n    value: function removeHoverStyle(element, datasetIndex, index) {\n      this._setStyle(element, index, 'active', false);\n    }\n  }, {\n    key: \"setHoverStyle\",\n    value: function setHoverStyle(element, datasetIndex, index) {\n      this._setStyle(element, index, 'active', true);\n    }\n  }, {\n    key: \"_removeDatasetHoverStyle\",\n    value: function _removeDatasetHoverStyle() {\n      var element = this._cachedMeta.dataset;\n\n      if (element) {\n        this._setStyle(element, undefined, 'active', false);\n      }\n    }\n  }, {\n    key: \"_setDatasetHoverStyle\",\n    value: function _setDatasetHoverStyle() {\n      var element = this._cachedMeta.dataset;\n\n      if (element) {\n        this._setStyle(element, undefined, 'active', true);\n      }\n    }\n  }, {\n    key: \"_resyncElements\",\n    value: function _resyncElements(resetNewElements) {\n      var data = this._data;\n      var elements = this._cachedMeta.data;\n\n      var _iterator4 = _createForOfIteratorHelper(this._syncList),\n          _step4;\n\n      try {\n        for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {\n          var _step4$value = _slicedToArray(_step4.value, 3),\n              method = _step4$value[0],\n              arg1 = _step4$value[1],\n              arg2 = _step4$value[2];\n\n          this[method](arg1, arg2);\n        }\n      } catch (err) {\n        _iterator4.e(err);\n      } finally {\n        _iterator4.f();\n      }\n\n      this._syncList = [];\n      var numMeta = elements.length;\n      var numData = data.length;\n      var count = Math.min(numData, numMeta);\n\n      if (count) {\n        this.parse(0, count);\n      }\n\n      if (numData > numMeta) {\n        this._insertElements(numMeta, numData - numMeta, resetNewElements);\n      } else if (numData < numMeta) {\n        this._removeElements(numData, numMeta - numData);\n      }\n    }\n  }, {\n    key: \"_insertElements\",\n    value: function _insertElements(start, count) {\n      var resetNewElements = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n      var meta = this._cachedMeta;\n      var data = meta.data;\n      var end = start + count;\n      var i;\n\n      var move = function move(arr) {\n        arr.length += count;\n\n        for (i = arr.length - 1; i >= end; i--) {\n          arr[i] = arr[i - count];\n        }\n      };\n\n      move(data);\n\n      for (i = start; i < end; ++i) {\n        data[i] = new this.dataElementType();\n      }\n\n      if (this._parsing) {\n        move(meta._parsed);\n      }\n\n      this.parse(start, count);\n\n      if (resetNewElements) {\n        this.updateElements(data, start, count, 'reset');\n      }\n    }\n  }, {\n    key: \"updateElements\",\n    value: function updateElements(element, start, count, mode) {}\n  }, {\n    key: \"_removeElements\",\n    value: function _removeElements(start, count) {\n      var meta = this._cachedMeta;\n\n      if (this._parsing) {\n        var removed = meta._parsed.splice(start, count);\n\n        if (meta._stacked) {\n          clearStacks(meta, removed);\n        }\n      }\n\n      meta.data.splice(start, count);\n    }\n  }, {\n    key: \"_sync\",\n    value: function _sync(args) {\n      if (this._parsing) {\n        this._syncList.push(args);\n      } else {\n        var _args2 = _slicedToArray(args, 3),\n            method = _args2[0],\n            arg1 = _args2[1],\n            arg2 = _args2[2];\n\n        this[method](arg1, arg2);\n      }\n\n      this.chart._dataChanges.push([this.index].concat(_toConsumableArray(args)));\n    }\n  }, {\n    key: \"_onDataPush\",\n    value: function _onDataPush() {\n      var count = arguments.length;\n\n      this._sync(['_insertElements', this.getDataset().data.length - count, count]);\n    }\n  }, {\n    key: \"_onDataPop\",\n    value: function _onDataPop() {\n      this._sync(['_removeElements', this._cachedMeta.data.length - 1, 1]);\n    }\n  }, {\n    key: \"_onDataShift\",\n    value: function _onDataShift() {\n      this._sync(['_removeElements', 0, 1]);\n    }\n  }, {\n    key: \"_onDataSplice\",\n    value: function _onDataSplice(start, count) {\n      if (count) {\n        this._sync(['_removeElements', start, count]);\n      }\n\n      var newCount = arguments.length - 2;\n\n      if (newCount) {\n        this._sync(['_insertElements', start, newCount]);\n      }\n    }\n  }, {\n    key: \"_onDataUnshift\",\n    value: function _onDataUnshift() {\n      this._sync(['_insertElements', 0, arguments.length]);\n    }\n  }]);\n\n  return DatasetController;\n}();\n\n_defineProperty(DatasetController, \"defaults\", {});\n\n_defineProperty(DatasetController, \"datasetElementType\", null);\n\n_defineProperty(DatasetController, \"dataElementType\", null);\n\nfunction getAllScaleValues(scale, type) {\n  if (!scale._cache.$bar) {\n    var visibleMetas = scale.getMatchingVisibleMetas(type);\n    var values = [];\n\n    for (var i = 0, ilen = visibleMetas.length; i < ilen; i++) {\n      values = values.concat(visibleMetas[i].controller.getAllParsedValues(scale));\n    }\n\n    scale._cache.$bar = _arrayUnique(values.sort(function (a, b) {\n      return a - b;\n    }));\n  }\n\n  return scale._cache.$bar;\n}\n\nfunction computeMinSampleSize(meta) {\n  var scale = meta.iScale;\n  var values = getAllScaleValues(scale, meta.type);\n  var min = scale._length;\n  var i, ilen, curr, prev;\n\n  var updateMinAndPrev = function updateMinAndPrev() {\n    if (curr === 32767 || curr === -32768) {\n      return;\n    }\n\n    if (defined(prev)) {\n      min = Math.min(min, Math.abs(curr - prev) || min);\n    }\n\n    prev = curr;\n  };\n\n  for (i = 0, ilen = values.length; i < ilen; ++i) {\n    curr = scale.getPixelForValue(values[i]);\n    updateMinAndPrev();\n  }\n\n  prev = undefined;\n\n  for (i = 0, ilen = scale.ticks.length; i < ilen; ++i) {\n    curr = scale.getPixelForTick(i);\n    updateMinAndPrev();\n  }\n\n  return min;\n}\n\nfunction computeFitCategoryTraits(index, ruler, options, stackCount) {\n  var thickness = options.barThickness;\n  var size, ratio;\n\n  if (isNullOrUndef(thickness)) {\n    size = ruler.min * options.categoryPercentage;\n    ratio = options.barPercentage;\n  } else {\n    size = thickness * stackCount;\n    ratio = 1;\n  }\n\n  return {\n    chunk: size / stackCount,\n    ratio: ratio,\n    start: ruler.pixels[index] - size / 2\n  };\n}\n\nfunction computeFlexCategoryTraits(index, ruler, options, stackCount) {\n  var pixels = ruler.pixels;\n  var curr = pixels[index];\n  var prev = index > 0 ? pixels[index - 1] : null;\n  var next = index < pixels.length - 1 ? pixels[index + 1] : null;\n  var percent = options.categoryPercentage;\n\n  if (prev === null) {\n    prev = curr - (next === null ? ruler.end - ruler.start : next - curr);\n  }\n\n  if (next === null) {\n    next = curr + curr - prev;\n  }\n\n  var start = curr - (curr - Math.min(prev, next)) / 2 * percent;\n  var size = Math.abs(next - prev) / 2 * percent;\n  return {\n    chunk: size / stackCount,\n    ratio: options.barPercentage,\n    start: start\n  };\n}\n\nfunction parseFloatBar(entry, item, vScale, i) {\n  var startValue = vScale.parse(entry[0], i);\n  var endValue = vScale.parse(entry[1], i);\n  var min = Math.min(startValue, endValue);\n  var max = Math.max(startValue, endValue);\n  var barStart = min;\n  var barEnd = max;\n\n  if (Math.abs(min) > Math.abs(max)) {\n    barStart = max;\n    barEnd = min;\n  }\n\n  item[vScale.axis] = barEnd;\n  item._custom = {\n    barStart: barStart,\n    barEnd: barEnd,\n    start: startValue,\n    end: endValue,\n    min: min,\n    max: max\n  };\n}\n\nfunction parseValue(entry, item, vScale, i) {\n  if (isArray(entry)) {\n    parseFloatBar(entry, item, vScale, i);\n  } else {\n    item[vScale.axis] = vScale.parse(entry, i);\n  }\n\n  return item;\n}\n\nfunction parseArrayOrPrimitive(meta, data, start, count) {\n  var iScale = meta.iScale;\n  var vScale = meta.vScale;\n  var labels = iScale.getLabels();\n  var singleScale = iScale === vScale;\n  var parsed = [];\n  var i, ilen, item, entry;\n\n  for (i = start, ilen = start + count; i < ilen; ++i) {\n    entry = data[i];\n    item = {};\n    item[iScale.axis] = singleScale || iScale.parse(labels[i], i);\n    parsed.push(parseValue(entry, item, vScale, i));\n  }\n\n  return parsed;\n}\n\nfunction isFloatBar(custom) {\n  return custom && custom.barStart !== undefined && custom.barEnd !== undefined;\n}\n\nfunction barSign(size, vScale, actualBase) {\n  if (size !== 0) {\n    return sign(size);\n  }\n\n  return (vScale.isHorizontal() ? 1 : -1) * (vScale.min >= actualBase ? 1 : -1);\n}\n\nfunction borderProps(properties) {\n  var reverse, start, end, top, bottom;\n\n  if (properties.horizontal) {\n    reverse = properties.base > properties.x;\n    start = 'left';\n    end = 'right';\n  } else {\n    reverse = properties.base < properties.y;\n    start = 'bottom';\n    end = 'top';\n  }\n\n  if (reverse) {\n    top = 'end';\n    bottom = 'start';\n  } else {\n    top = 'start';\n    bottom = 'end';\n  }\n\n  return {\n    start: start,\n    end: end,\n    reverse: reverse,\n    top: top,\n    bottom: bottom\n  };\n}\n\nfunction setBorderSkipped(properties, options, stack, index) {\n  var edge = options.borderSkipped;\n  var res = {};\n\n  if (!edge) {\n    properties.borderSkipped = res;\n    return;\n  }\n\n  if (edge === true) {\n    properties.borderSkipped = {\n      top: true,\n      right: true,\n      bottom: true,\n      left: true\n    };\n    return;\n  }\n\n  var _borderProps = borderProps(properties),\n      start = _borderProps.start,\n      end = _borderProps.end,\n      reverse = _borderProps.reverse,\n      top = _borderProps.top,\n      bottom = _borderProps.bottom;\n\n  if (edge === 'middle' && stack) {\n    properties.enableBorderRadius = true;\n\n    if ((stack._top || 0) === index) {\n      edge = top;\n    } else if ((stack._bottom || 0) === index) {\n      edge = bottom;\n    } else {\n      res[parseEdge(bottom, start, end, reverse)] = true;\n      edge = top;\n    }\n  }\n\n  res[parseEdge(edge, start, end, reverse)] = true;\n  properties.borderSkipped = res;\n}\n\nfunction parseEdge(edge, a, b, reverse) {\n  if (reverse) {\n    edge = swap(edge, a, b);\n    edge = startEnd(edge, b, a);\n  } else {\n    edge = startEnd(edge, a, b);\n  }\n\n  return edge;\n}\n\nfunction swap(orig, v1, v2) {\n  return orig === v1 ? v2 : orig === v2 ? v1 : orig;\n}\n\nfunction startEnd(v, start, end) {\n  return v === 'start' ? start : v === 'end' ? end : v;\n}\n\nfunction setInflateAmount(properties, _ref, ratio) {\n  var inflateAmount = _ref.inflateAmount;\n  properties.inflateAmount = inflateAmount === 'auto' ? ratio === 1 ? 0.33 : 0 : inflateAmount;\n}\n\nvar BarController = /*#__PURE__*/function (_DatasetController) {\n  _inherits(BarController, _DatasetController);\n\n  var _super = _createSuper(BarController);\n\n  function BarController() {\n    _classCallCheck(this, BarController);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(BarController, [{\n    key: \"parsePrimitiveData\",\n    value: function parsePrimitiveData(meta, data, start, count) {\n      return parseArrayOrPrimitive(meta, data, start, count);\n    }\n  }, {\n    key: \"parseArrayData\",\n    value: function parseArrayData(meta, data, start, count) {\n      return parseArrayOrPrimitive(meta, data, start, count);\n    }\n  }, {\n    key: \"parseObjectData\",\n    value: function parseObjectData(meta, data, start, count) {\n      var iScale = meta.iScale,\n          vScale = meta.vScale;\n      var _this$_parsing2 = this._parsing,\n          _this$_parsing2$xAxis = _this$_parsing2.xAxisKey,\n          xAxisKey = _this$_parsing2$xAxis === void 0 ? 'x' : _this$_parsing2$xAxis,\n          _this$_parsing2$yAxis = _this$_parsing2.yAxisKey,\n          yAxisKey = _this$_parsing2$yAxis === void 0 ? 'y' : _this$_parsing2$yAxis;\n      var iAxisKey = iScale.axis === 'x' ? xAxisKey : yAxisKey;\n      var vAxisKey = vScale.axis === 'x' ? xAxisKey : yAxisKey;\n      var parsed = [];\n      var i, ilen, item, obj;\n\n      for (i = start, ilen = start + count; i < ilen; ++i) {\n        obj = data[i];\n        item = {};\n        item[iScale.axis] = iScale.parse(resolveObjectKey(obj, iAxisKey), i);\n        parsed.push(parseValue(resolveObjectKey(obj, vAxisKey), item, vScale, i));\n      }\n\n      return parsed;\n    }\n  }, {\n    key: \"updateRangeFromParsed\",\n    value: function updateRangeFromParsed(range, scale, parsed, stack) {\n      _get(_getPrototypeOf(BarController.prototype), \"updateRangeFromParsed\", this).call(this, range, scale, parsed, stack);\n\n      var custom = parsed._custom;\n\n      if (custom && scale === this._cachedMeta.vScale) {\n        range.min = Math.min(range.min, custom.min);\n        range.max = Math.max(range.max, custom.max);\n      }\n    }\n  }, {\n    key: \"getMaxOverflow\",\n    value: function getMaxOverflow() {\n      return 0;\n    }\n  }, {\n    key: \"getLabelAndValue\",\n    value: function getLabelAndValue(index) {\n      var meta = this._cachedMeta;\n      var iScale = meta.iScale,\n          vScale = meta.vScale;\n      var parsed = this.getParsed(index);\n      var custom = parsed._custom;\n      var value = isFloatBar(custom) ? '[' + custom.start + ', ' + custom.end + ']' : '' + vScale.getLabelForValue(parsed[vScale.axis]);\n      return {\n        label: '' + iScale.getLabelForValue(parsed[iScale.axis]),\n        value: value\n      };\n    }\n  }, {\n    key: \"initialize\",\n    value: function initialize() {\n      this.enableOptionSharing = true;\n\n      _get(_getPrototypeOf(BarController.prototype), \"initialize\", this).call(this);\n\n      var meta = this._cachedMeta;\n      meta.stack = this.getDataset().stack;\n    }\n  }, {\n    key: \"update\",\n    value: function update(mode) {\n      var meta = this._cachedMeta;\n      this.updateElements(meta.data, 0, meta.data.length, mode);\n    }\n  }, {\n    key: \"updateElements\",\n    value: function updateElements(bars, start, count, mode) {\n      var reset = mode === 'reset';\n      var index = this.index,\n          vScale = this._cachedMeta.vScale;\n      var base = vScale.getBasePixel();\n      var horizontal = vScale.isHorizontal();\n\n      var ruler = this._getRuler();\n\n      var _this$_getSharedOptio = this._getSharedOptions(start, mode),\n          sharedOptions = _this$_getSharedOptio.sharedOptions,\n          includeOptions = _this$_getSharedOptio.includeOptions;\n\n      for (var i = start; i < start + count; i++) {\n        var parsed = this.getParsed(i);\n        var vpixels = reset || isNullOrUndef(parsed[vScale.axis]) ? {\n          base: base,\n          head: base\n        } : this._calculateBarValuePixels(i);\n\n        var ipixels = this._calculateBarIndexPixels(i, ruler);\n\n        var stack = (parsed._stacks || {})[vScale.axis];\n        var properties = {\n          horizontal: horizontal,\n          base: vpixels.base,\n          enableBorderRadius: !stack || isFloatBar(parsed._custom) || index === stack._top || index === stack._bottom,\n          x: horizontal ? vpixels.head : ipixels.center,\n          y: horizontal ? ipixels.center : vpixels.head,\n          height: horizontal ? ipixels.size : Math.abs(vpixels.size),\n          width: horizontal ? Math.abs(vpixels.size) : ipixels.size\n        };\n\n        if (includeOptions) {\n          properties.options = sharedOptions || this.resolveDataElementOptions(i, bars[i].active ? 'active' : mode);\n        }\n\n        var options = properties.options || bars[i].options;\n        setBorderSkipped(properties, options, stack, index);\n        setInflateAmount(properties, options, ruler.ratio);\n        this.updateElement(bars[i], i, properties, mode);\n      }\n    }\n  }, {\n    key: \"_getStacks\",\n    value: function _getStacks(last, dataIndex) {\n      var iScale = this._cachedMeta.iScale;\n      var metasets = iScale.getMatchingVisibleMetas(this._type).filter(function (meta) {\n        return meta.controller.options.grouped;\n      });\n      var stacked = iScale.options.stacked;\n      var stacks = [];\n\n      var currentParsed = this._cachedMeta.controller.getParsed(dataIndex);\n\n      var iScaleValue = currentParsed && currentParsed[iScale.axis];\n\n      var skipNull = function skipNull(meta) {\n        var parsed = meta._parsed.find(function (item) {\n          return item[iScale.axis] === iScaleValue;\n        });\n\n        var val = parsed && parsed[meta.vScale.axis];\n\n        if (isNullOrUndef(val) || isNaN(val)) {\n          return true;\n        }\n      };\n\n      var _iterator5 = _createForOfIteratorHelper(metasets),\n          _step5;\n\n      try {\n        for (_iterator5.s(); !(_step5 = _iterator5.n()).done;) {\n          var meta = _step5.value;\n\n          if (dataIndex !== undefined && skipNull(meta)) {\n            continue;\n          }\n\n          if (stacked === false || stacks.indexOf(meta.stack) === -1 || stacked === undefined && meta.stack === undefined) {\n            stacks.push(meta.stack);\n          }\n\n          if (meta.index === last) {\n            break;\n          }\n        }\n      } catch (err) {\n        _iterator5.e(err);\n      } finally {\n        _iterator5.f();\n      }\n\n      if (!stacks.length) {\n        stacks.push(undefined);\n      }\n\n      return stacks;\n    }\n  }, {\n    key: \"_getStackCount\",\n    value: function _getStackCount(index) {\n      return this._getStacks(undefined, index).length;\n    }\n  }, {\n    key: \"_getStackIndex\",\n    value: function _getStackIndex(datasetIndex, name, dataIndex) {\n      var stacks = this._getStacks(datasetIndex, dataIndex);\n\n      var index = name !== undefined ? stacks.indexOf(name) : -1;\n      return index === -1 ? stacks.length - 1 : index;\n    }\n  }, {\n    key: \"_getRuler\",\n    value: function _getRuler() {\n      var opts = this.options;\n      var meta = this._cachedMeta;\n      var iScale = meta.iScale;\n      var pixels = [];\n      var i, ilen;\n\n      for (i = 0, ilen = meta.data.length; i < ilen; ++i) {\n        pixels.push(iScale.getPixelForValue(this.getParsed(i)[iScale.axis], i));\n      }\n\n      var barThickness = opts.barThickness;\n      var min = barThickness || computeMinSampleSize(meta);\n      return {\n        min: min,\n        pixels: pixels,\n        start: iScale._startPixel,\n        end: iScale._endPixel,\n        stackCount: this._getStackCount(),\n        scale: iScale,\n        grouped: opts.grouped,\n        ratio: barThickness ? 1 : opts.categoryPercentage * opts.barPercentage\n      };\n    }\n  }, {\n    key: \"_calculateBarValuePixels\",\n    value: function _calculateBarValuePixels(index) {\n      var _this$_cachedMeta = this._cachedMeta,\n          vScale = _this$_cachedMeta.vScale,\n          _stacked = _this$_cachedMeta._stacked,\n          datasetIndex = _this$_cachedMeta.index,\n          _this$options = this.options,\n          baseValue = _this$options.base,\n          minBarLength = _this$options.minBarLength;\n      var actualBase = baseValue || 0;\n      var parsed = this.getParsed(index);\n      var custom = parsed._custom;\n      var floating = isFloatBar(custom);\n      var value = parsed[vScale.axis];\n      var start = 0;\n      var length = _stacked ? this.applyStack(vScale, parsed, _stacked) : value;\n      var head, size;\n\n      if (length !== value) {\n        start = length - value;\n        length = value;\n      }\n\n      if (floating) {\n        value = custom.barStart;\n        length = custom.barEnd - custom.barStart;\n\n        if (value !== 0 && sign(value) !== sign(custom.barEnd)) {\n          start = 0;\n        }\n\n        start += value;\n      }\n\n      var startValue = !isNullOrUndef(baseValue) && !floating ? baseValue : start;\n      var base = vScale.getPixelForValue(startValue);\n\n      if (this.chart.getDataVisibility(index)) {\n        head = vScale.getPixelForValue(start + length);\n      } else {\n        head = base;\n      }\n\n      size = head - base;\n\n      if (Math.abs(size) < minBarLength) {\n        size = barSign(size, vScale, actualBase) * minBarLength;\n\n        if (value === actualBase) {\n          base -= size / 2;\n        }\n\n        var startPixel = vScale.getPixelForDecimal(0);\n        var endPixel = vScale.getPixelForDecimal(1);\n        var min = Math.min(startPixel, endPixel);\n        var max = Math.max(startPixel, endPixel);\n        base = Math.max(Math.min(base, max), min);\n        head = base + size;\n\n        if (_stacked && !floating) {\n          parsed._stacks[vScale.axis]._visualValues[datasetIndex] = vScale.getValueForPixel(head) - vScale.getValueForPixel(base);\n        }\n      }\n\n      if (base === vScale.getPixelForValue(actualBase)) {\n        var halfGrid = sign(size) * vScale.getLineWidthForValue(actualBase) / 2;\n        base += halfGrid;\n        size -= halfGrid;\n      }\n\n      return {\n        size: size,\n        base: base,\n        head: head,\n        center: head + size / 2\n      };\n    }\n  }, {\n    key: \"_calculateBarIndexPixels\",\n    value: function _calculateBarIndexPixels(index, ruler) {\n      var scale = ruler.scale;\n      var options = this.options;\n      var skipNull = options.skipNull;\n      var maxBarThickness = valueOrDefault(options.maxBarThickness, Infinity);\n      var center, size;\n\n      if (ruler.grouped) {\n        var stackCount = skipNull ? this._getStackCount(index) : ruler.stackCount;\n        var range = options.barThickness === 'flex' ? computeFlexCategoryTraits(index, ruler, options, stackCount) : computeFitCategoryTraits(index, ruler, options, stackCount);\n\n        var stackIndex = this._getStackIndex(this.index, this._cachedMeta.stack, skipNull ? index : undefined);\n\n        center = range.start + range.chunk * stackIndex + range.chunk / 2;\n        size = Math.min(maxBarThickness, range.chunk * range.ratio);\n      } else {\n        center = scale.getPixelForValue(this.getParsed(index)[scale.axis], index);\n        size = Math.min(maxBarThickness, ruler.min * ruler.ratio);\n      }\n\n      return {\n        base: center - size / 2,\n        head: center + size / 2,\n        center: center,\n        size: size\n      };\n    }\n  }, {\n    key: \"draw\",\n    value: function draw() {\n      var meta = this._cachedMeta;\n      var vScale = meta.vScale;\n      var rects = meta.data;\n      var ilen = rects.length;\n      var i = 0;\n\n      for (; i < ilen; ++i) {\n        if (this.getParsed(i)[vScale.axis] !== null && !rects[i].hidden) {\n          rects[i].draw(this._ctx);\n        }\n      }\n    }\n  }]);\n\n  return BarController;\n}(DatasetController);\n\n_defineProperty(BarController, \"id\", 'bar');\n\n_defineProperty(BarController, \"defaults\", {\n  datasetElementType: false,\n  dataElementType: 'bar',\n  categoryPercentage: 0.8,\n  barPercentage: 0.9,\n  grouped: true,\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['x', 'y', 'base', 'width', 'height']\n    }\n  }\n});\n\n_defineProperty(BarController, \"overrides\", {\n  scales: {\n    _index_: {\n      type: 'category',\n      offset: true,\n      grid: {\n        offset: true\n      }\n    },\n    _value_: {\n      type: 'linear',\n      beginAtZero: true\n    }\n  }\n});\n\nvar BubbleController = /*#__PURE__*/function (_DatasetController2) {\n  _inherits(BubbleController, _DatasetController2);\n\n  var _super2 = _createSuper(BubbleController);\n\n  function BubbleController() {\n    _classCallCheck(this, BubbleController);\n\n    return _super2.apply(this, arguments);\n  }\n\n  _createClass(BubbleController, [{\n    key: \"initialize\",\n    value: function initialize() {\n      this.enableOptionSharing = true;\n\n      _get(_getPrototypeOf(BubbleController.prototype), \"initialize\", this).call(this);\n    }\n  }, {\n    key: \"parsePrimitiveData\",\n    value: function parsePrimitiveData(meta, data, start, count) {\n      var parsed = _get(_getPrototypeOf(BubbleController.prototype), \"parsePrimitiveData\", this).call(this, meta, data, start, count);\n\n      for (var i = 0; i < parsed.length; i++) {\n        parsed[i]._custom = this.resolveDataElementOptions(i + start).radius;\n      }\n\n      return parsed;\n    }\n  }, {\n    key: \"parseArrayData\",\n    value: function parseArrayData(meta, data, start, count) {\n      var parsed = _get(_getPrototypeOf(BubbleController.prototype), \"parseArrayData\", this).call(this, meta, data, start, count);\n\n      for (var i = 0; i < parsed.length; i++) {\n        var item = data[start + i];\n        parsed[i]._custom = valueOrDefault(item[2], this.resolveDataElementOptions(i + start).radius);\n      }\n\n      return parsed;\n    }\n  }, {\n    key: \"parseObjectData\",\n    value: function parseObjectData(meta, data, start, count) {\n      var parsed = _get(_getPrototypeOf(BubbleController.prototype), \"parseObjectData\", this).call(this, meta, data, start, count);\n\n      for (var i = 0; i < parsed.length; i++) {\n        var item = data[start + i];\n        parsed[i]._custom = valueOrDefault(item && item.r && +item.r, this.resolveDataElementOptions(i + start).radius);\n      }\n\n      return parsed;\n    }\n  }, {\n    key: \"getMaxOverflow\",\n    value: function getMaxOverflow() {\n      var data = this._cachedMeta.data;\n      var max = 0;\n\n      for (var i = data.length - 1; i >= 0; --i) {\n        max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n      }\n\n      return max > 0 && max;\n    }\n  }, {\n    key: \"getLabelAndValue\",\n    value: function getLabelAndValue(index) {\n      var meta = this._cachedMeta;\n      var labels = this.chart.data.labels || [];\n      var xScale = meta.xScale,\n          yScale = meta.yScale;\n      var parsed = this.getParsed(index);\n      var x = xScale.getLabelForValue(parsed.x);\n      var y = yScale.getLabelForValue(parsed.y);\n      var r = parsed._custom;\n      return {\n        label: labels[index] || '',\n        value: '(' + x + ', ' + y + (r ? ', ' + r : '') + ')'\n      };\n    }\n  }, {\n    key: \"update\",\n    value: function update(mode) {\n      var points = this._cachedMeta.data;\n      this.updateElements(points, 0, points.length, mode);\n    }\n  }, {\n    key: \"updateElements\",\n    value: function updateElements(points, start, count, mode) {\n      var reset = mode === 'reset';\n      var _this$_cachedMeta2 = this._cachedMeta,\n          iScale = _this$_cachedMeta2.iScale,\n          vScale = _this$_cachedMeta2.vScale;\n\n      var _this$_getSharedOptio2 = this._getSharedOptions(start, mode),\n          sharedOptions = _this$_getSharedOptio2.sharedOptions,\n          includeOptions = _this$_getSharedOptio2.includeOptions;\n\n      var iAxis = iScale.axis;\n      var vAxis = vScale.axis;\n\n      for (var i = start; i < start + count; i++) {\n        var point = points[i];\n        var parsed = !reset && this.getParsed(i);\n        var properties = {};\n        var iPixel = properties[iAxis] = reset ? iScale.getPixelForDecimal(0.5) : iScale.getPixelForValue(parsed[iAxis]);\n        var vPixel = properties[vAxis] = reset ? vScale.getBasePixel() : vScale.getPixelForValue(parsed[vAxis]);\n        properties.skip = isNaN(iPixel) || isNaN(vPixel);\n\n        if (includeOptions) {\n          properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n\n          if (reset) {\n            properties.options.radius = 0;\n          }\n        }\n\n        this.updateElement(point, i, properties, mode);\n      }\n    }\n  }, {\n    key: \"resolveDataElementOptions\",\n    value: function resolveDataElementOptions(index, mode) {\n      var parsed = this.getParsed(index);\n\n      var values = _get(_getPrototypeOf(BubbleController.prototype), \"resolveDataElementOptions\", this).call(this, index, mode);\n\n      if (values.$shared) {\n        values = Object.assign({}, values, {\n          $shared: false\n        });\n      }\n\n      var radius = values.radius;\n\n      if (mode !== 'active') {\n        values.radius = 0;\n      }\n\n      values.radius += valueOrDefault(parsed && parsed._custom, radius);\n      return values;\n    }\n  }]);\n\n  return BubbleController;\n}(DatasetController);\n\n_defineProperty(BubbleController, \"id\", 'bubble');\n\n_defineProperty(BubbleController, \"defaults\", {\n  datasetElementType: false,\n  dataElementType: 'point',\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['x', 'y', 'borderWidth', 'radius']\n    }\n  }\n});\n\n_defineProperty(BubbleController, \"overrides\", {\n  scales: {\n    x: {\n      type: 'linear'\n    },\n    y: {\n      type: 'linear'\n    }\n  }\n});\n\nfunction getRatioAndOffset(rotation, circumference, cutout) {\n  var ratioX = 1;\n  var ratioY = 1;\n  var offsetX = 0;\n  var offsetY = 0;\n\n  if (circumference < TAU) {\n    var startAngle = rotation;\n    var endAngle = startAngle + circumference;\n    var startX = Math.cos(startAngle);\n    var startY = Math.sin(startAngle);\n    var endX = Math.cos(endAngle);\n    var endY = Math.sin(endAngle);\n\n    var calcMax = function calcMax(angle, a, b) {\n      return _angleBetween(angle, startAngle, endAngle, true) ? 1 : Math.max(a, a * cutout, b, b * cutout);\n    };\n\n    var calcMin = function calcMin(angle, a, b) {\n      return _angleBetween(angle, startAngle, endAngle, true) ? -1 : Math.min(a, a * cutout, b, b * cutout);\n    };\n\n    var maxX = calcMax(0, startX, endX);\n    var maxY = calcMax(HALF_PI, startY, endY);\n    var minX = calcMin(PI, startX, endX);\n    var minY = calcMin(PI + HALF_PI, startY, endY);\n    ratioX = (maxX - minX) / 2;\n    ratioY = (maxY - minY) / 2;\n    offsetX = -(maxX + minX) / 2;\n    offsetY = -(maxY + minY) / 2;\n  }\n\n  return {\n    ratioX: ratioX,\n    ratioY: ratioY,\n    offsetX: offsetX,\n    offsetY: offsetY\n  };\n}\n\nvar DoughnutController = /*#__PURE__*/function (_DatasetController3) {\n  _inherits(DoughnutController, _DatasetController3);\n\n  var _super3 = _createSuper(DoughnutController);\n\n  function DoughnutController(chart, datasetIndex) {\n    var _this4;\n\n    _classCallCheck(this, DoughnutController);\n\n    _this4 = _super3.call(this, chart, datasetIndex);\n    _this4.enableOptionSharing = true;\n    _this4.innerRadius = undefined;\n    _this4.outerRadius = undefined;\n    _this4.offsetX = undefined;\n    _this4.offsetY = undefined;\n    return _this4;\n  }\n\n  _createClass(DoughnutController, [{\n    key: \"linkScales\",\n    value: function linkScales() {}\n  }, {\n    key: \"parse\",\n    value: function parse(start, count) {\n      var data = this.getDataset().data;\n      var meta = this._cachedMeta;\n\n      if (this._parsing === false) {\n        meta._parsed = data;\n      } else {\n        var getter = function getter(i) {\n          return +data[i];\n        };\n\n        if (isObject(data[start])) {\n          var _this$_parsing$key = this._parsing.key,\n              key = _this$_parsing$key === void 0 ? 'value' : _this$_parsing$key;\n\n          getter = function getter(i) {\n            return +resolveObjectKey(data[i], key);\n          };\n        }\n\n        var i, ilen;\n\n        for (i = start, ilen = start + count; i < ilen; ++i) {\n          meta._parsed[i] = getter(i);\n        }\n      }\n    }\n  }, {\n    key: \"_getRotation\",\n    value: function _getRotation() {\n      return toRadians(this.options.rotation - 90);\n    }\n  }, {\n    key: \"_getCircumference\",\n    value: function _getCircumference() {\n      return toRadians(this.options.circumference);\n    }\n  }, {\n    key: \"_getRotationExtents\",\n    value: function _getRotationExtents() {\n      var min = TAU;\n      var max = -TAU;\n\n      for (var i = 0; i < this.chart.data.datasets.length; ++i) {\n        if (this.chart.isDatasetVisible(i) && this.chart.getDatasetMeta(i).type === this._type) {\n          var controller = this.chart.getDatasetMeta(i).controller;\n\n          var rotation = controller._getRotation();\n\n          var circumference = controller._getCircumference();\n\n          min = Math.min(min, rotation);\n          max = Math.max(max, rotation + circumference);\n        }\n      }\n\n      return {\n        rotation: min,\n        circumference: max - min\n      };\n    }\n  }, {\n    key: \"update\",\n    value: function update(mode) {\n      var chart = this.chart;\n      var chartArea = chart.chartArea;\n      var meta = this._cachedMeta;\n      var arcs = meta.data;\n      var spacing = this.getMaxBorderWidth() + this.getMaxOffset(arcs) + this.options.spacing;\n      var maxSize = Math.max((Math.min(chartArea.width, chartArea.height) - spacing) / 2, 0);\n      var cutout = Math.min(toPercentage(this.options.cutout, maxSize), 1);\n\n      var chartWeight = this._getRingWeight(this.index);\n\n      var _this$_getRotationExt = this._getRotationExtents(),\n          circumference = _this$_getRotationExt.circumference,\n          rotation = _this$_getRotationExt.rotation;\n\n      var _getRatioAndOffset = getRatioAndOffset(rotation, circumference, cutout),\n          ratioX = _getRatioAndOffset.ratioX,\n          ratioY = _getRatioAndOffset.ratioY,\n          offsetX = _getRatioAndOffset.offsetX,\n          offsetY = _getRatioAndOffset.offsetY;\n\n      var maxWidth = (chartArea.width - spacing) / ratioX;\n      var maxHeight = (chartArea.height - spacing) / ratioY;\n      var maxRadius = Math.max(Math.min(maxWidth, maxHeight) / 2, 0);\n      var outerRadius = toDimension(this.options.radius, maxRadius);\n      var innerRadius = Math.max(outerRadius * cutout, 0);\n\n      var radiusLength = (outerRadius - innerRadius) / this._getVisibleDatasetWeightTotal();\n\n      this.offsetX = offsetX * outerRadius;\n      this.offsetY = offsetY * outerRadius;\n      meta.total = this.calculateTotal();\n      this.outerRadius = outerRadius - radiusLength * this._getRingWeightOffset(this.index);\n      this.innerRadius = Math.max(this.outerRadius - radiusLength * chartWeight, 0);\n      this.updateElements(arcs, 0, arcs.length, mode);\n    }\n  }, {\n    key: \"_circumference\",\n    value: function _circumference(i, reset) {\n      var opts = this.options;\n      var meta = this._cachedMeta;\n\n      var circumference = this._getCircumference();\n\n      if (reset && opts.animation.animateRotate || !this.chart.getDataVisibility(i) || meta._parsed[i] === null || meta.data[i].hidden) {\n        return 0;\n      }\n\n      return this.calculateCircumference(meta._parsed[i] * circumference / TAU);\n    }\n  }, {\n    key: \"updateElements\",\n    value: function updateElements(arcs, start, count, mode) {\n      var reset = mode === 'reset';\n      var chart = this.chart;\n      var chartArea = chart.chartArea;\n      var opts = chart.options;\n      var animationOpts = opts.animation;\n      var centerX = (chartArea.left + chartArea.right) / 2;\n      var centerY = (chartArea.top + chartArea.bottom) / 2;\n      var animateScale = reset && animationOpts.animateScale;\n      var innerRadius = animateScale ? 0 : this.innerRadius;\n      var outerRadius = animateScale ? 0 : this.outerRadius;\n\n      var _this$_getSharedOptio3 = this._getSharedOptions(start, mode),\n          sharedOptions = _this$_getSharedOptio3.sharedOptions,\n          includeOptions = _this$_getSharedOptio3.includeOptions;\n\n      var startAngle = this._getRotation();\n\n      var i;\n\n      for (i = 0; i < start; ++i) {\n        startAngle += this._circumference(i, reset);\n      }\n\n      for (i = start; i < start + count; ++i) {\n        var circumference = this._circumference(i, reset);\n\n        var arc = arcs[i];\n        var properties = {\n          x: centerX + this.offsetX,\n          y: centerY + this.offsetY,\n          startAngle: startAngle,\n          endAngle: startAngle + circumference,\n          circumference: circumference,\n          outerRadius: outerRadius,\n          innerRadius: innerRadius\n        };\n\n        if (includeOptions) {\n          properties.options = sharedOptions || this.resolveDataElementOptions(i, arc.active ? 'active' : mode);\n        }\n\n        startAngle += circumference;\n        this.updateElement(arc, i, properties, mode);\n      }\n    }\n  }, {\n    key: \"calculateTotal\",\n    value: function calculateTotal() {\n      var meta = this._cachedMeta;\n      var metaData = meta.data;\n      var total = 0;\n      var i;\n\n      for (i = 0; i < metaData.length; i++) {\n        var value = meta._parsed[i];\n\n        if (value !== null && !isNaN(value) && this.chart.getDataVisibility(i) && !metaData[i].hidden) {\n          total += Math.abs(value);\n        }\n      }\n\n      return total;\n    }\n  }, {\n    key: \"calculateCircumference\",\n    value: function calculateCircumference(value) {\n      var total = this._cachedMeta.total;\n\n      if (total > 0 && !isNaN(value)) {\n        return TAU * (Math.abs(value) / total);\n      }\n\n      return 0;\n    }\n  }, {\n    key: \"getLabelAndValue\",\n    value: function getLabelAndValue(index) {\n      var meta = this._cachedMeta;\n      var chart = this.chart;\n      var labels = chart.data.labels || [];\n      var value = formatNumber(meta._parsed[index], chart.options.locale);\n      return {\n        label: labels[index] || '',\n        value: value\n      };\n    }\n  }, {\n    key: \"getMaxBorderWidth\",\n    value: function getMaxBorderWidth(arcs) {\n      var max = 0;\n      var chart = this.chart;\n      var i, ilen, meta, controller, options;\n\n      if (!arcs) {\n        for (i = 0, ilen = chart.data.datasets.length; i < ilen; ++i) {\n          if (chart.isDatasetVisible(i)) {\n            meta = chart.getDatasetMeta(i);\n            arcs = meta.data;\n            controller = meta.controller;\n            break;\n          }\n        }\n      }\n\n      if (!arcs) {\n        return 0;\n      }\n\n      for (i = 0, ilen = arcs.length; i < ilen; ++i) {\n        options = controller.resolveDataElementOptions(i);\n\n        if (options.borderAlign !== 'inner') {\n          max = Math.max(max, options.borderWidth || 0, options.hoverBorderWidth || 0);\n        }\n      }\n\n      return max;\n    }\n  }, {\n    key: \"getMaxOffset\",\n    value: function getMaxOffset(arcs) {\n      var max = 0;\n\n      for (var i = 0, ilen = arcs.length; i < ilen; ++i) {\n        var options = this.resolveDataElementOptions(i);\n        max = Math.max(max, options.offset || 0, options.hoverOffset || 0);\n      }\n\n      return max;\n    }\n  }, {\n    key: \"_getRingWeightOffset\",\n    value: function _getRingWeightOffset(datasetIndex) {\n      var ringWeightOffset = 0;\n\n      for (var i = 0; i < datasetIndex; ++i) {\n        if (this.chart.isDatasetVisible(i)) {\n          ringWeightOffset += this._getRingWeight(i);\n        }\n      }\n\n      return ringWeightOffset;\n    }\n  }, {\n    key: \"_getRingWeight\",\n    value: function _getRingWeight(datasetIndex) {\n      return Math.max(valueOrDefault(this.chart.data.datasets[datasetIndex].weight, 1), 0);\n    }\n  }, {\n    key: \"_getVisibleDatasetWeightTotal\",\n    value: function _getVisibleDatasetWeightTotal() {\n      return this._getRingWeightOffset(this.chart.data.datasets.length) || 1;\n    }\n  }]);\n\n  return DoughnutController;\n}(DatasetController);\n\n_defineProperty(DoughnutController, \"id\", 'doughnut');\n\n_defineProperty(DoughnutController, \"defaults\", {\n  datasetElementType: false,\n  dataElementType: 'arc',\n  animation: {\n    animateRotate: true,\n    animateScale: false\n  },\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['circumference', 'endAngle', 'innerRadius', 'outerRadius', 'startAngle', 'x', 'y', 'offset', 'borderWidth', 'spacing']\n    }\n  },\n  cutout: '50%',\n  rotation: 0,\n  circumference: 360,\n  radius: '100%',\n  spacing: 0,\n  indexAxis: 'r'\n});\n\n_defineProperty(DoughnutController, \"descriptors\", {\n  _scriptable: function _scriptable(name) {\n    return name !== 'spacing';\n  },\n  _indexable: function _indexable(name) {\n    return name !== 'spacing' && !name.startsWith('borderDash') && !name.startsWith('hoverBorderDash');\n  }\n});\n\n_defineProperty(DoughnutController, \"overrides\", {\n  aspectRatio: 1,\n  plugins: {\n    legend: {\n      labels: {\n        generateLabels: function generateLabels(chart) {\n          var data = chart.data;\n\n          if (data.labels.length && data.datasets.length) {\n            var _chart$legend$options2 = chart.legend.options.labels,\n                pointStyle = _chart$legend$options2.pointStyle,\n                color = _chart$legend$options2.color;\n            return data.labels.map(function (label, i) {\n              var meta = chart.getDatasetMeta(0);\n              var style = meta.controller.getStyle(i);\n              return {\n                text: label,\n                fillStyle: style.backgroundColor,\n                strokeStyle: style.borderColor,\n                fontColor: color,\n                lineWidth: style.borderWidth,\n                pointStyle: pointStyle,\n                hidden: !chart.getDataVisibility(i),\n                index: i\n              };\n            });\n          }\n\n          return [];\n        }\n      },\n      onClick: function onClick(e, legendItem, legend) {\n        legend.chart.toggleDataVisibility(legendItem.index);\n        legend.chart.update();\n      }\n    }\n  }\n});\n\nvar LineController = /*#__PURE__*/function (_DatasetController4) {\n  _inherits(LineController, _DatasetController4);\n\n  var _super4 = _createSuper(LineController);\n\n  function LineController() {\n    _classCallCheck(this, LineController);\n\n    return _super4.apply(this, arguments);\n  }\n\n  _createClass(LineController, [{\n    key: \"initialize\",\n    value: function initialize() {\n      this.enableOptionSharing = true;\n      this.supportsDecimation = true;\n\n      _get(_getPrototypeOf(LineController.prototype), \"initialize\", this).call(this);\n    }\n  }, {\n    key: \"update\",\n    value: function update(mode) {\n      var meta = this._cachedMeta;\n      var line = meta.dataset,\n          _meta$data = meta.data,\n          points = _meta$data === void 0 ? [] : _meta$data,\n          _dataset = meta._dataset;\n      var animationsDisabled = this.chart._animationsDisabled;\n\n      var _getStartAndCountOfVi = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled),\n          start = _getStartAndCountOfVi.start,\n          count = _getStartAndCountOfVi.count;\n\n      this._drawStart = start;\n      this._drawCount = count;\n\n      if (_scaleRangesChanged(meta)) {\n        start = 0;\n        count = points.length;\n      }\n\n      line._chart = this.chart;\n      line._datasetIndex = this.index;\n      line._decimated = !!_dataset._decimated;\n      line.points = points;\n      var options = this.resolveDatasetElementOptions(mode);\n\n      if (!this.options.showLine) {\n        options.borderWidth = 0;\n      }\n\n      options.segment = this.options.segment;\n      this.updateElement(line, undefined, {\n        animated: !animationsDisabled,\n        options: options\n      }, mode);\n      this.updateElements(points, start, count, mode);\n    }\n  }, {\n    key: \"updateElements\",\n    value: function updateElements(points, start, count, mode) {\n      var reset = mode === 'reset';\n      var _this$_cachedMeta3 = this._cachedMeta,\n          iScale = _this$_cachedMeta3.iScale,\n          vScale = _this$_cachedMeta3.vScale,\n          _stacked = _this$_cachedMeta3._stacked,\n          _dataset = _this$_cachedMeta3._dataset;\n\n      var _this$_getSharedOptio4 = this._getSharedOptions(start, mode),\n          sharedOptions = _this$_getSharedOptio4.sharedOptions,\n          includeOptions = _this$_getSharedOptio4.includeOptions;\n\n      var iAxis = iScale.axis;\n      var vAxis = vScale.axis;\n      var _this$options2 = this.options,\n          spanGaps = _this$options2.spanGaps,\n          segment = _this$options2.segment;\n      var maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n      var directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n      var end = start + count;\n      var pointsCount = points.length;\n      var prevParsed = start > 0 && this.getParsed(start - 1);\n\n      for (var i = 0; i < pointsCount; ++i) {\n        var point = points[i];\n        var properties = directUpdate ? point : {};\n\n        if (i < start || i >= end) {\n          properties.skip = true;\n          continue;\n        }\n\n        var parsed = this.getParsed(i);\n        var nullData = isNullOrUndef(parsed[vAxis]);\n        var iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n        var vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n        properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n        properties.stop = i > 0 && Math.abs(parsed[iAxis] - prevParsed[iAxis]) > maxGapLength;\n\n        if (segment) {\n          properties.parsed = parsed;\n          properties.raw = _dataset.data[i];\n        }\n\n        if (includeOptions) {\n          properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n        }\n\n        if (!directUpdate) {\n          this.updateElement(point, i, properties, mode);\n        }\n\n        prevParsed = parsed;\n      }\n    }\n  }, {\n    key: \"getMaxOverflow\",\n    value: function getMaxOverflow() {\n      var meta = this._cachedMeta;\n      var dataset = meta.dataset;\n      var border = dataset.options && dataset.options.borderWidth || 0;\n      var data = meta.data || [];\n\n      if (!data.length) {\n        return border;\n      }\n\n      var firstPoint = data[0].size(this.resolveDataElementOptions(0));\n      var lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n      return Math.max(border, firstPoint, lastPoint) / 2;\n    }\n  }, {\n    key: \"draw\",\n    value: function draw() {\n      var meta = this._cachedMeta;\n      meta.dataset.updateControlPoints(this.chart.chartArea, meta.iScale.axis);\n\n      _get(_getPrototypeOf(LineController.prototype), \"draw\", this).call(this);\n    }\n  }]);\n\n  return LineController;\n}(DatasetController);\n\n_defineProperty(LineController, \"id\", 'line');\n\n_defineProperty(LineController, \"defaults\", {\n  datasetElementType: 'line',\n  dataElementType: 'point',\n  showLine: true,\n  spanGaps: false\n});\n\n_defineProperty(LineController, \"overrides\", {\n  scales: {\n    _index_: {\n      type: 'category'\n    },\n    _value_: {\n      type: 'linear'\n    }\n  }\n});\n\nvar PolarAreaController = /*#__PURE__*/function (_DatasetController5) {\n  _inherits(PolarAreaController, _DatasetController5);\n\n  var _super5 = _createSuper(PolarAreaController);\n\n  function PolarAreaController(chart, datasetIndex) {\n    var _this5;\n\n    _classCallCheck(this, PolarAreaController);\n\n    _this5 = _super5.call(this, chart, datasetIndex);\n    _this5.innerRadius = undefined;\n    _this5.outerRadius = undefined;\n    return _this5;\n  }\n\n  _createClass(PolarAreaController, [{\n    key: \"getLabelAndValue\",\n    value: function getLabelAndValue(index) {\n      var meta = this._cachedMeta;\n      var chart = this.chart;\n      var labels = chart.data.labels || [];\n      var value = formatNumber(meta._parsed[index].r, chart.options.locale);\n      return {\n        label: labels[index] || '',\n        value: value\n      };\n    }\n  }, {\n    key: \"parseObjectData\",\n    value: function parseObjectData(meta, data, start, count) {\n      return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n    }\n  }, {\n    key: \"update\",\n    value: function update(mode) {\n      var arcs = this._cachedMeta.data;\n\n      this._updateRadius();\n\n      this.updateElements(arcs, 0, arcs.length, mode);\n    }\n  }, {\n    key: \"getMinMax\",\n    value: function getMinMax() {\n      var _this6 = this;\n\n      var meta = this._cachedMeta;\n      var range = {\n        min: Number.POSITIVE_INFINITY,\n        max: Number.NEGATIVE_INFINITY\n      };\n      meta.data.forEach(function (element, index) {\n        var parsed = _this6.getParsed(index).r;\n\n        if (!isNaN(parsed) && _this6.chart.getDataVisibility(index)) {\n          if (parsed < range.min) {\n            range.min = parsed;\n          }\n\n          if (parsed > range.max) {\n            range.max = parsed;\n          }\n        }\n      });\n      return range;\n    }\n  }, {\n    key: \"_updateRadius\",\n    value: function _updateRadius() {\n      var chart = this.chart;\n      var chartArea = chart.chartArea;\n      var opts = chart.options;\n      var minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\n      var outerRadius = Math.max(minSize / 2, 0);\n      var innerRadius = Math.max(opts.cutoutPercentage ? outerRadius / 100 * opts.cutoutPercentage : 1, 0);\n      var radiusLength = (outerRadius - innerRadius) / chart.getVisibleDatasetCount();\n      this.outerRadius = outerRadius - radiusLength * this.index;\n      this.innerRadius = this.outerRadius - radiusLength;\n    }\n  }, {\n    key: \"updateElements\",\n    value: function updateElements(arcs, start, count, mode) {\n      var reset = mode === 'reset';\n      var chart = this.chart;\n      var opts = chart.options;\n      var animationOpts = opts.animation;\n      var scale = this._cachedMeta.rScale;\n      var centerX = scale.xCenter;\n      var centerY = scale.yCenter;\n      var datasetStartAngle = scale.getIndexAngle(0) - 0.5 * PI;\n      var angle = datasetStartAngle;\n      var i;\n      var defaultAngle = 360 / this.countVisibleElements();\n\n      for (i = 0; i < start; ++i) {\n        angle += this._computeAngle(i, mode, defaultAngle);\n      }\n\n      for (i = start; i < start + count; i++) {\n        var arc = arcs[i];\n        var startAngle = angle;\n\n        var endAngle = angle + this._computeAngle(i, mode, defaultAngle);\n\n        var outerRadius = chart.getDataVisibility(i) ? scale.getDistanceFromCenterForValue(this.getParsed(i).r) : 0;\n        angle = endAngle;\n\n        if (reset) {\n          if (animationOpts.animateScale) {\n            outerRadius = 0;\n          }\n\n          if (animationOpts.animateRotate) {\n            startAngle = endAngle = datasetStartAngle;\n          }\n        }\n\n        var properties = {\n          x: centerX,\n          y: centerY,\n          innerRadius: 0,\n          outerRadius: outerRadius,\n          startAngle: startAngle,\n          endAngle: endAngle,\n          options: this.resolveDataElementOptions(i, arc.active ? 'active' : mode)\n        };\n        this.updateElement(arc, i, properties, mode);\n      }\n    }\n  }, {\n    key: \"countVisibleElements\",\n    value: function countVisibleElements() {\n      var _this7 = this;\n\n      var meta = this._cachedMeta;\n      var count = 0;\n      meta.data.forEach(function (element, index) {\n        if (!isNaN(_this7.getParsed(index).r) && _this7.chart.getDataVisibility(index)) {\n          count++;\n        }\n      });\n      return count;\n    }\n  }, {\n    key: \"_computeAngle\",\n    value: function _computeAngle(index, mode, defaultAngle) {\n      return this.chart.getDataVisibility(index) ? toRadians(this.resolveDataElementOptions(index, mode).angle || defaultAngle) : 0;\n    }\n  }]);\n\n  return PolarAreaController;\n}(DatasetController);\n\n_defineProperty(PolarAreaController, \"id\", 'polarArea');\n\n_defineProperty(PolarAreaController, \"defaults\", {\n  dataElementType: 'arc',\n  animation: {\n    animateRotate: true,\n    animateScale: true\n  },\n  animations: {\n    numbers: {\n      type: 'number',\n      properties: ['x', 'y', 'startAngle', 'endAngle', 'innerRadius', 'outerRadius']\n    }\n  },\n  indexAxis: 'r',\n  startAngle: 0\n});\n\n_defineProperty(PolarAreaController, \"overrides\", {\n  aspectRatio: 1,\n  plugins: {\n    legend: {\n      labels: {\n        generateLabels: function generateLabels(chart) {\n          var data = chart.data;\n\n          if (data.labels.length && data.datasets.length) {\n            var _chart$legend$options3 = chart.legend.options.labels,\n                pointStyle = _chart$legend$options3.pointStyle,\n                color = _chart$legend$options3.color;\n            return data.labels.map(function (label, i) {\n              var meta = chart.getDatasetMeta(0);\n              var style = meta.controller.getStyle(i);\n              return {\n                text: label,\n                fillStyle: style.backgroundColor,\n                strokeStyle: style.borderColor,\n                fontColor: color,\n                lineWidth: style.borderWidth,\n                pointStyle: pointStyle,\n                hidden: !chart.getDataVisibility(i),\n                index: i\n              };\n            });\n          }\n\n          return [];\n        }\n      },\n      onClick: function onClick(e, legendItem, legend) {\n        legend.chart.toggleDataVisibility(legendItem.index);\n        legend.chart.update();\n      }\n    }\n  },\n  scales: {\n    r: {\n      type: 'radialLinear',\n      angleLines: {\n        display: false\n      },\n      beginAtZero: true,\n      grid: {\n        circular: true\n      },\n      pointLabels: {\n        display: false\n      },\n      startAngle: 0\n    }\n  }\n});\n\nvar PieController = /*#__PURE__*/function (_DoughnutController) {\n  _inherits(PieController, _DoughnutController);\n\n  var _super6 = _createSuper(PieController);\n\n  function PieController() {\n    _classCallCheck(this, PieController);\n\n    return _super6.apply(this, arguments);\n  }\n\n  return _createClass(PieController);\n}(DoughnutController);\n\n_defineProperty(PieController, \"id\", 'pie');\n\n_defineProperty(PieController, \"defaults\", {\n  cutout: 0,\n  rotation: 0,\n  circumference: 360,\n  radius: '100%'\n});\n\nvar RadarController = /*#__PURE__*/function (_DatasetController6) {\n  _inherits(RadarController, _DatasetController6);\n\n  var _super7 = _createSuper(RadarController);\n\n  function RadarController() {\n    _classCallCheck(this, RadarController);\n\n    return _super7.apply(this, arguments);\n  }\n\n  _createClass(RadarController, [{\n    key: \"getLabelAndValue\",\n    value: function getLabelAndValue(index) {\n      var vScale = this._cachedMeta.vScale;\n      var parsed = this.getParsed(index);\n      return {\n        label: vScale.getLabels()[index],\n        value: '' + vScale.getLabelForValue(parsed[vScale.axis])\n      };\n    }\n  }, {\n    key: \"parseObjectData\",\n    value: function parseObjectData(meta, data, start, count) {\n      return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n    }\n  }, {\n    key: \"update\",\n    value: function update(mode) {\n      var meta = this._cachedMeta;\n      var line = meta.dataset;\n      var points = meta.data || [];\n      var labels = meta.iScale.getLabels();\n      line.points = points;\n\n      if (mode !== 'resize') {\n        var options = this.resolveDatasetElementOptions(mode);\n\n        if (!this.options.showLine) {\n          options.borderWidth = 0;\n        }\n\n        var properties = {\n          _loop: true,\n          _fullLoop: labels.length === points.length,\n          options: options\n        };\n        this.updateElement(line, undefined, properties, mode);\n      }\n\n      this.updateElements(points, 0, points.length, mode);\n    }\n  }, {\n    key: \"updateElements\",\n    value: function updateElements(points, start, count, mode) {\n      var scale = this._cachedMeta.rScale;\n      var reset = mode === 'reset';\n\n      for (var i = start; i < start + count; i++) {\n        var point = points[i];\n        var options = this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n        var pointPosition = scale.getPointPositionForValue(i, this.getParsed(i).r);\n        var x = reset ? scale.xCenter : pointPosition.x;\n        var y = reset ? scale.yCenter : pointPosition.y;\n        var properties = {\n          x: x,\n          y: y,\n          angle: pointPosition.angle,\n          skip: isNaN(x) || isNaN(y),\n          options: options\n        };\n        this.updateElement(point, i, properties, mode);\n      }\n    }\n  }]);\n\n  return RadarController;\n}(DatasetController);\n\n_defineProperty(RadarController, \"id\", 'radar');\n\n_defineProperty(RadarController, \"defaults\", {\n  datasetElementType: 'line',\n  dataElementType: 'point',\n  indexAxis: 'r',\n  showLine: true,\n  elements: {\n    line: {\n      fill: 'start'\n    }\n  }\n});\n\n_defineProperty(RadarController, \"overrides\", {\n  aspectRatio: 1,\n  scales: {\n    r: {\n      type: 'radialLinear'\n    }\n  }\n});\n\nvar ScatterController = /*#__PURE__*/function (_DatasetController7) {\n  _inherits(ScatterController, _DatasetController7);\n\n  var _super8 = _createSuper(ScatterController);\n\n  function ScatterController() {\n    _classCallCheck(this, ScatterController);\n\n    return _super8.apply(this, arguments);\n  }\n\n  _createClass(ScatterController, [{\n    key: \"getLabelAndValue\",\n    value: function getLabelAndValue(index) {\n      var meta = this._cachedMeta;\n      var labels = this.chart.data.labels || [];\n      var xScale = meta.xScale,\n          yScale = meta.yScale;\n      var parsed = this.getParsed(index);\n      var x = xScale.getLabelForValue(parsed.x);\n      var y = yScale.getLabelForValue(parsed.y);\n      return {\n        label: labels[index] || '',\n        value: '(' + x + ', ' + y + ')'\n      };\n    }\n  }, {\n    key: \"update\",\n    value: function update(mode) {\n      var meta = this._cachedMeta;\n      var _meta$data2 = meta.data,\n          points = _meta$data2 === void 0 ? [] : _meta$data2;\n      var animationsDisabled = this.chart._animationsDisabled;\n\n      var _getStartAndCountOfVi2 = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled),\n          start = _getStartAndCountOfVi2.start,\n          count = _getStartAndCountOfVi2.count;\n\n      this._drawStart = start;\n      this._drawCount = count;\n\n      if (_scaleRangesChanged(meta)) {\n        start = 0;\n        count = points.length;\n      }\n\n      if (this.options.showLine) {\n        if (!this.datasetElementType) {\n          this.addElements();\n        }\n\n        var line = meta.dataset,\n            _dataset = meta._dataset;\n        line._chart = this.chart;\n        line._datasetIndex = this.index;\n        line._decimated = !!_dataset._decimated;\n        line.points = points;\n        var options = this.resolveDatasetElementOptions(mode);\n        options.segment = this.options.segment;\n        this.updateElement(line, undefined, {\n          animated: !animationsDisabled,\n          options: options\n        }, mode);\n      } else if (this.datasetElementType) {\n        delete meta.dataset;\n        this.datasetElementType = false;\n      }\n\n      this.updateElements(points, start, count, mode);\n    }\n  }, {\n    key: \"addElements\",\n    value: function addElements() {\n      var showLine = this.options.showLine;\n\n      if (!this.datasetElementType && showLine) {\n        this.datasetElementType = this.chart.registry.getElement('line');\n      }\n\n      _get(_getPrototypeOf(ScatterController.prototype), \"addElements\", this).call(this);\n    }\n  }, {\n    key: \"updateElements\",\n    value: function updateElements(points, start, count, mode) {\n      var reset = mode === 'reset';\n      var _this$_cachedMeta4 = this._cachedMeta,\n          iScale = _this$_cachedMeta4.iScale,\n          vScale = _this$_cachedMeta4.vScale,\n          _stacked = _this$_cachedMeta4._stacked,\n          _dataset = _this$_cachedMeta4._dataset;\n      var firstOpts = this.resolveDataElementOptions(start, mode);\n      var sharedOptions = this.getSharedOptions(firstOpts);\n      var includeOptions = this.includeOptions(mode, sharedOptions);\n      var iAxis = iScale.axis;\n      var vAxis = vScale.axis;\n      var _this$options3 = this.options,\n          spanGaps = _this$options3.spanGaps,\n          segment = _this$options3.segment;\n      var maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n      var directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n      var prevParsed = start > 0 && this.getParsed(start - 1);\n\n      for (var i = start; i < start + count; ++i) {\n        var point = points[i];\n        var parsed = this.getParsed(i);\n        var properties = directUpdate ? point : {};\n        var nullData = isNullOrUndef(parsed[vAxis]);\n        var iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n        var vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n        properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n        properties.stop = i > 0 && Math.abs(parsed[iAxis] - prevParsed[iAxis]) > maxGapLength;\n\n        if (segment) {\n          properties.parsed = parsed;\n          properties.raw = _dataset.data[i];\n        }\n\n        if (includeOptions) {\n          properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n        }\n\n        if (!directUpdate) {\n          this.updateElement(point, i, properties, mode);\n        }\n\n        prevParsed = parsed;\n      }\n\n      this.updateSharedOptions(sharedOptions, mode, firstOpts);\n    }\n  }, {\n    key: \"getMaxOverflow\",\n    value: function getMaxOverflow() {\n      var meta = this._cachedMeta;\n      var data = meta.data || [];\n\n      if (!this.options.showLine) {\n        var max = 0;\n\n        for (var i = data.length - 1; i >= 0; --i) {\n          max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n        }\n\n        return max > 0 && max;\n      }\n\n      var dataset = meta.dataset;\n      var border = dataset.options && dataset.options.borderWidth || 0;\n\n      if (!data.length) {\n        return border;\n      }\n\n      var firstPoint = data[0].size(this.resolveDataElementOptions(0));\n      var lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n      return Math.max(border, firstPoint, lastPoint) / 2;\n    }\n  }]);\n\n  return ScatterController;\n}(DatasetController);\n\n_defineProperty(ScatterController, \"id\", 'scatter');\n\n_defineProperty(ScatterController, \"defaults\", {\n  datasetElementType: false,\n  dataElementType: 'point',\n  showLine: false,\n  fill: false\n});\n\n_defineProperty(ScatterController, \"overrides\", {\n  interaction: {\n    mode: 'point'\n  },\n  scales: {\n    x: {\n      type: 'linear'\n    },\n    y: {\n      type: 'linear'\n    }\n  }\n});\n\nvar controllers = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  BarController: BarController,\n  BubbleController: BubbleController,\n  DoughnutController: DoughnutController,\n  LineController: LineController,\n  PieController: PieController,\n  PolarAreaController: PolarAreaController,\n  RadarController: RadarController,\n  ScatterController: ScatterController\n});\n/**\n * @namespace Chart._adapters\n * @since 2.8.0\n * @private\n */\n\nfunction abstract() {\n  throw new Error('This method is not implemented: Check that a complete date adapter is provided.');\n}\n/**\n * Date adapter (current used by the time scale)\n * @namespace Chart._adapters._date\n * @memberof Chart._adapters\n * @private\n */\n\n\nvar DateAdapterBase = /*#__PURE__*/function () {\n  function DateAdapterBase(options) {\n    _classCallCheck(this, DateAdapterBase);\n\n    _defineProperty(this, \"options\", void 0);\n\n    this.options = options || {};\n  } // eslint-disable-next-line @typescript-eslint/no-empty-function\n\n\n  _createClass(DateAdapterBase, [{\n    key: \"init\",\n    value: function init() {}\n  }, {\n    key: \"formats\",\n    value: function formats() {\n      return abstract();\n    }\n  }, {\n    key: \"parse\",\n    value: function parse() {\n      return abstract();\n    }\n  }, {\n    key: \"format\",\n    value: function format() {\n      return abstract();\n    }\n  }, {\n    key: \"add\",\n    value: function add() {\n      return abstract();\n    }\n  }, {\n    key: \"diff\",\n    value: function diff() {\n      return abstract();\n    }\n  }, {\n    key: \"startOf\",\n    value: function startOf() {\n      return abstract();\n    }\n  }, {\n    key: \"endOf\",\n    value: function endOf() {\n      return abstract();\n    }\n  }], [{\n    key: \"override\",\n    value:\n    /**\n    * Override default date adapter methods.\n    * Accepts type parameter to define options type.\n    * @example\n    * Chart._adapters._date.override<{myAdapterOption: string}>({\n    *   init() {\n    *     console.log(this.options.myAdapterOption);\n    *   }\n    * })\n    */\n    function override(members) {\n      Object.assign(DateAdapterBase.prototype, members);\n    }\n  }]);\n\n  return DateAdapterBase;\n}();\n\nvar adapters = {\n  _date: DateAdapterBase\n};\n\nfunction binarySearch(metaset, axis, value, intersect) {\n  var controller = metaset.controller,\n      data = metaset.data,\n      _sorted = metaset._sorted;\n  var iScale = controller._cachedMeta.iScale;\n\n  if (iScale && axis === iScale.axis && axis !== 'r' && _sorted && data.length) {\n    var lookupMethod = iScale._reversePixels ? _rlookupByKey : _lookupByKey;\n\n    if (!intersect) {\n      return lookupMethod(data, axis, value);\n    } else if (controller._sharedOptions) {\n      var el = data[0];\n      var range = typeof el.getRange === 'function' && el.getRange(axis);\n\n      if (range) {\n        var start = lookupMethod(data, axis, value - range);\n        var end = lookupMethod(data, axis, value + range);\n        return {\n          lo: start.lo,\n          hi: end.hi\n        };\n      }\n    }\n  }\n\n  return {\n    lo: 0,\n    hi: data.length - 1\n  };\n}\n\nfunction evaluateInteractionItems(chart, axis, position, handler, intersect) {\n  var metasets = chart.getSortedVisibleDatasetMetas();\n  var value = position[axis];\n\n  for (var i = 0, ilen = metasets.length; i < ilen; ++i) {\n    var _metasets$i = metasets[i],\n        _index2 = _metasets$i.index,\n        data = _metasets$i.data;\n\n    var _binarySearch = binarySearch(metasets[i], axis, value, intersect),\n        lo = _binarySearch.lo,\n        hi = _binarySearch.hi;\n\n    for (var j = lo; j <= hi; ++j) {\n      var element = data[j];\n\n      if (!element.skip) {\n        handler(element, _index2, j);\n      }\n    }\n  }\n}\n\nfunction getDistanceMetricForAxis(axis) {\n  var useX = axis.indexOf('x') !== -1;\n  var useY = axis.indexOf('y') !== -1;\n  return function (pt1, pt2) {\n    var deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\n    var deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\n    return Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\n  };\n}\n\nfunction getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) {\n  var items = [];\n\n  if (!includeInvisible && !chart.isPointInArea(position)) {\n    return items;\n  }\n\n  var evaluationFunc = function evaluationFunc(element, datasetIndex, index) {\n    if (!includeInvisible && !_isPointInArea(element, chart.chartArea, 0)) {\n      return;\n    }\n\n    if (element.inRange(position.x, position.y, useFinalPosition)) {\n      items.push({\n        element: element,\n        datasetIndex: datasetIndex,\n        index: index\n      });\n    }\n  };\n\n  evaluateInteractionItems(chart, axis, position, evaluationFunc, true);\n  return items;\n}\n\nfunction getNearestRadialItems(chart, position, axis, useFinalPosition) {\n  var items = [];\n\n  function evaluationFunc(element, datasetIndex, index) {\n    var _element$getProps = element.getProps(['startAngle', 'endAngle'], useFinalPosition),\n        startAngle = _element$getProps.startAngle,\n        endAngle = _element$getProps.endAngle;\n\n    var _getAngleFromPoint = getAngleFromPoint(element, {\n      x: position.x,\n      y: position.y\n    }),\n        angle = _getAngleFromPoint.angle;\n\n    if (_angleBetween(angle, startAngle, endAngle)) {\n      items.push({\n        element: element,\n        datasetIndex: datasetIndex,\n        index: index\n      });\n    }\n  }\n\n  evaluateInteractionItems(chart, axis, position, evaluationFunc);\n  return items;\n}\n\nfunction getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n  var items = [];\n  var distanceMetric = getDistanceMetricForAxis(axis);\n  var minDistance = Number.POSITIVE_INFINITY;\n\n  function evaluationFunc(element, datasetIndex, index) {\n    var inRange = element.inRange(position.x, position.y, useFinalPosition);\n\n    if (intersect && !inRange) {\n      return;\n    }\n\n    var center = element.getCenterPoint(useFinalPosition);\n    var pointInArea = !!includeInvisible || chart.isPointInArea(center);\n\n    if (!pointInArea && !inRange) {\n      return;\n    }\n\n    var distance = distanceMetric(position, center);\n\n    if (distance < minDistance) {\n      items = [{\n        element: element,\n        datasetIndex: datasetIndex,\n        index: index\n      }];\n      minDistance = distance;\n    } else if (distance === minDistance) {\n      items.push({\n        element: element,\n        datasetIndex: datasetIndex,\n        index: index\n      });\n    }\n  }\n\n  evaluateInteractionItems(chart, axis, position, evaluationFunc);\n  return items;\n}\n\nfunction getNearestItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n  if (!includeInvisible && !chart.isPointInArea(position)) {\n    return [];\n  }\n\n  return axis === 'r' && !intersect ? getNearestRadialItems(chart, position, axis, useFinalPosition) : getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible);\n}\n\nfunction getAxisItems(chart, position, axis, intersect, useFinalPosition) {\n  var items = [];\n  var rangeMethod = axis === 'x' ? 'inXRange' : 'inYRange';\n  var intersectsItem = false;\n  evaluateInteractionItems(chart, axis, position, function (element, datasetIndex, index) {\n    if (element[rangeMethod] && element[rangeMethod](position[axis], useFinalPosition)) {\n      items.push({\n        element: element,\n        datasetIndex: datasetIndex,\n        index: index\n      });\n      intersectsItem = intersectsItem || element.inRange(position.x, position.y, useFinalPosition);\n    }\n  });\n\n  if (intersect && !intersectsItem) {\n    return [];\n  }\n\n  return items;\n}\n\nvar Interaction = {\n  evaluateInteractionItems: evaluateInteractionItems,\n  modes: {\n    index: function index(chart, e, options, useFinalPosition) {\n      var position = getRelativePosition(e, chart);\n      var axis = options.axis || 'x';\n      var includeInvisible = options.includeInvisible || false;\n      var items = options.intersect ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) : getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n      var elements = [];\n\n      if (!items.length) {\n        return [];\n      }\n\n      chart.getSortedVisibleDatasetMetas().forEach(function (meta) {\n        var index = items[0].index;\n        var element = meta.data[index];\n\n        if (element && !element.skip) {\n          elements.push({\n            element: element,\n            datasetIndex: meta.index,\n            index: index\n          });\n        }\n      });\n      return elements;\n    },\n    dataset: function dataset(chart, e, options, useFinalPosition) {\n      var position = getRelativePosition(e, chart);\n      var axis = options.axis || 'xy';\n      var includeInvisible = options.includeInvisible || false;\n      var items = options.intersect ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) : getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n\n      if (items.length > 0) {\n        var datasetIndex = items[0].datasetIndex;\n        var data = chart.getDatasetMeta(datasetIndex).data;\n        items = [];\n\n        for (var i = 0; i < data.length; ++i) {\n          items.push({\n            element: data[i],\n            datasetIndex: datasetIndex,\n            index: i\n          });\n        }\n      }\n\n      return items;\n    },\n    point: function point(chart, e, options, useFinalPosition) {\n      var position = getRelativePosition(e, chart);\n      var axis = options.axis || 'xy';\n      var includeInvisible = options.includeInvisible || false;\n      return getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible);\n    },\n    nearest: function nearest(chart, e, options, useFinalPosition) {\n      var position = getRelativePosition(e, chart);\n      var axis = options.axis || 'xy';\n      var includeInvisible = options.includeInvisible || false;\n      return getNearestItems(chart, position, axis, options.intersect, useFinalPosition, includeInvisible);\n    },\n    x: function x(chart, e, options, useFinalPosition) {\n      var position = getRelativePosition(e, chart);\n      return getAxisItems(chart, position, 'x', options.intersect, useFinalPosition);\n    },\n    y: function y(chart, e, options, useFinalPosition) {\n      var position = getRelativePosition(e, chart);\n      return getAxisItems(chart, position, 'y', options.intersect, useFinalPosition);\n    }\n  }\n};\nvar STATIC_POSITIONS = ['left', 'top', 'right', 'bottom'];\n\nfunction filterByPosition(array, position) {\n  return array.filter(function (v) {\n    return v.pos === position;\n  });\n}\n\nfunction filterDynamicPositionByAxis(array, axis) {\n  return array.filter(function (v) {\n    return STATIC_POSITIONS.indexOf(v.pos) === -1 && v.box.axis === axis;\n  });\n}\n\nfunction sortByWeight(array, reverse) {\n  return array.sort(function (a, b) {\n    var v0 = reverse ? b : a;\n    var v1 = reverse ? a : b;\n    return v0.weight === v1.weight ? v0.index - v1.index : v0.weight - v1.weight;\n  });\n}\n\nfunction wrapBoxes(boxes) {\n  var layoutBoxes = [];\n  var i, ilen, box, pos, stack, stackWeight;\n\n  for (i = 0, ilen = (boxes || []).length; i < ilen; ++i) {\n    box = boxes[i];\n    var _box = box;\n    pos = _box.position;\n    var _box$options = _box.options;\n    stack = _box$options.stack;\n    var _box$options$stackWei = _box$options.stackWeight;\n    stackWeight = _box$options$stackWei === void 0 ? 1 : _box$options$stackWei;\n    layoutBoxes.push({\n      index: i,\n      box: box,\n      pos: pos,\n      horizontal: box.isHorizontal(),\n      weight: box.weight,\n      stack: stack && pos + stack,\n      stackWeight: stackWeight\n    });\n  }\n\n  return layoutBoxes;\n}\n\nfunction buildStacks(layouts) {\n  var stacks = {};\n\n  var _iterator6 = _createForOfIteratorHelper(layouts),\n      _step6;\n\n  try {\n    for (_iterator6.s(); !(_step6 = _iterator6.n()).done;) {\n      var wrap = _step6.value;\n      var stack = wrap.stack,\n          pos = wrap.pos,\n          stackWeight = wrap.stackWeight;\n\n      if (!stack || !STATIC_POSITIONS.includes(pos)) {\n        continue;\n      }\n\n      var _stack = stacks[stack] || (stacks[stack] = {\n        count: 0,\n        placed: 0,\n        weight: 0,\n        size: 0\n      });\n\n      _stack.count++;\n      _stack.weight += stackWeight;\n    }\n  } catch (err) {\n    _iterator6.e(err);\n  } finally {\n    _iterator6.f();\n  }\n\n  return stacks;\n}\n\nfunction setLayoutDims(layouts, params) {\n  var stacks = buildStacks(layouts);\n  var vBoxMaxWidth = params.vBoxMaxWidth,\n      hBoxMaxHeight = params.hBoxMaxHeight;\n  var i, ilen, layout;\n\n  for (i = 0, ilen = layouts.length; i < ilen; ++i) {\n    layout = layouts[i];\n    var fullSize = layout.box.fullSize;\n    var stack = stacks[layout.stack];\n    var factor = stack && layout.stackWeight / stack.weight;\n\n    if (layout.horizontal) {\n      layout.width = factor ? factor * vBoxMaxWidth : fullSize && params.availableWidth;\n      layout.height = hBoxMaxHeight;\n    } else {\n      layout.width = vBoxMaxWidth;\n      layout.height = factor ? factor * hBoxMaxHeight : fullSize && params.availableHeight;\n    }\n  }\n\n  return stacks;\n}\n\nfunction buildLayoutBoxes(boxes) {\n  var layoutBoxes = wrapBoxes(boxes);\n  var fullSize = sortByWeight(layoutBoxes.filter(function (wrap) {\n    return wrap.box.fullSize;\n  }), true);\n  var left = sortByWeight(filterByPosition(layoutBoxes, 'left'), true);\n  var right = sortByWeight(filterByPosition(layoutBoxes, 'right'));\n  var top = sortByWeight(filterByPosition(layoutBoxes, 'top'), true);\n  var bottom = sortByWeight(filterByPosition(layoutBoxes, 'bottom'));\n  var centerHorizontal = filterDynamicPositionByAxis(layoutBoxes, 'x');\n  var centerVertical = filterDynamicPositionByAxis(layoutBoxes, 'y');\n  return {\n    fullSize: fullSize,\n    leftAndTop: left.concat(top),\n    rightAndBottom: right.concat(centerVertical).concat(bottom).concat(centerHorizontal),\n    chartArea: filterByPosition(layoutBoxes, 'chartArea'),\n    vertical: left.concat(right).concat(centerVertical),\n    horizontal: top.concat(bottom).concat(centerHorizontal)\n  };\n}\n\nfunction getCombinedMax(maxPadding, chartArea, a, b) {\n  return Math.max(maxPadding[a], chartArea[a]) + Math.max(maxPadding[b], chartArea[b]);\n}\n\nfunction updateMaxPadding(maxPadding, boxPadding) {\n  maxPadding.top = Math.max(maxPadding.top, boxPadding.top);\n  maxPadding.left = Math.max(maxPadding.left, boxPadding.left);\n  maxPadding.bottom = Math.max(maxPadding.bottom, boxPadding.bottom);\n  maxPadding.right = Math.max(maxPadding.right, boxPadding.right);\n}\n\nfunction updateDims(chartArea, params, layout, stacks) {\n  var pos = layout.pos,\n      box = layout.box;\n  var maxPadding = chartArea.maxPadding;\n\n  if (!isObject(pos)) {\n    if (layout.size) {\n      chartArea[pos] -= layout.size;\n    }\n\n    var stack = stacks[layout.stack] || {\n      size: 0,\n      count: 1\n    };\n    stack.size = Math.max(stack.size, layout.horizontal ? box.height : box.width);\n    layout.size = stack.size / stack.count;\n    chartArea[pos] += layout.size;\n  }\n\n  if (box.getPadding) {\n    updateMaxPadding(maxPadding, box.getPadding());\n  }\n\n  var newWidth = Math.max(0, params.outerWidth - getCombinedMax(maxPadding, chartArea, 'left', 'right'));\n  var newHeight = Math.max(0, params.outerHeight - getCombinedMax(maxPadding, chartArea, 'top', 'bottom'));\n  var widthChanged = newWidth !== chartArea.w;\n  var heightChanged = newHeight !== chartArea.h;\n  chartArea.w = newWidth;\n  chartArea.h = newHeight;\n  return layout.horizontal ? {\n    same: widthChanged,\n    other: heightChanged\n  } : {\n    same: heightChanged,\n    other: widthChanged\n  };\n}\n\nfunction handleMaxPadding(chartArea) {\n  var maxPadding = chartArea.maxPadding;\n\n  function updatePos(pos) {\n    var change = Math.max(maxPadding[pos] - chartArea[pos], 0);\n    chartArea[pos] += change;\n    return change;\n  }\n\n  chartArea.y += updatePos('top');\n  chartArea.x += updatePos('left');\n  updatePos('right');\n  updatePos('bottom');\n}\n\nfunction getMargins(horizontal, chartArea) {\n  var maxPadding = chartArea.maxPadding;\n\n  function marginForPositions(positions) {\n    var margin = {\n      left: 0,\n      top: 0,\n      right: 0,\n      bottom: 0\n    };\n    positions.forEach(function (pos) {\n      margin[pos] = Math.max(chartArea[pos], maxPadding[pos]);\n    });\n    return margin;\n  }\n\n  return horizontal ? marginForPositions(['left', 'right']) : marginForPositions(['top', 'bottom']);\n}\n\nfunction fitBoxes(boxes, chartArea, params, stacks) {\n  var refitBoxes = [];\n  var i, ilen, layout, box, refit, changed;\n\n  for (i = 0, ilen = boxes.length, refit = 0; i < ilen; ++i) {\n    layout = boxes[i];\n    box = layout.box;\n    box.update(layout.width || chartArea.w, layout.height || chartArea.h, getMargins(layout.horizontal, chartArea));\n\n    var _updateDims = updateDims(chartArea, params, layout, stacks),\n        same = _updateDims.same,\n        other = _updateDims.other;\n\n    refit |= same && refitBoxes.length;\n    changed = changed || other;\n\n    if (!box.fullSize) {\n      refitBoxes.push(layout);\n    }\n  }\n\n  return refit && fitBoxes(refitBoxes, chartArea, params, stacks) || changed;\n}\n\nfunction setBoxDims(box, left, top, width, height) {\n  box.top = top;\n  box.left = left;\n  box.right = left + width;\n  box.bottom = top + height;\n  box.width = width;\n  box.height = height;\n}\n\nfunction placeBoxes(boxes, chartArea, params, stacks) {\n  var userPadding = params.padding;\n  var x = chartArea.x,\n      y = chartArea.y;\n\n  var _iterator7 = _createForOfIteratorHelper(boxes),\n      _step7;\n\n  try {\n    for (_iterator7.s(); !(_step7 = _iterator7.n()).done;) {\n      var layout = _step7.value;\n      var box = layout.box;\n      var stack = stacks[layout.stack] || {\n        count: 1,\n        placed: 0,\n        weight: 1\n      };\n      var weight = layout.stackWeight / stack.weight || 1;\n\n      if (layout.horizontal) {\n        var width = chartArea.w * weight;\n        var height = stack.size || box.height;\n\n        if (defined(stack.start)) {\n          y = stack.start;\n        }\n\n        if (box.fullSize) {\n          setBoxDims(box, userPadding.left, y, params.outerWidth - userPadding.right - userPadding.left, height);\n        } else {\n          setBoxDims(box, chartArea.left + stack.placed, y, width, height);\n        }\n\n        stack.start = y;\n        stack.placed += width;\n        y = box.bottom;\n      } else {\n        var _height = chartArea.h * weight;\n\n        var _width = stack.size || box.width;\n\n        if (defined(stack.start)) {\n          x = stack.start;\n        }\n\n        if (box.fullSize) {\n          setBoxDims(box, x, userPadding.top, _width, params.outerHeight - userPadding.bottom - userPadding.top);\n        } else {\n          setBoxDims(box, x, chartArea.top + stack.placed, _width, _height);\n        }\n\n        stack.start = x;\n        stack.placed += _height;\n        x = box.right;\n      }\n    }\n  } catch (err) {\n    _iterator7.e(err);\n  } finally {\n    _iterator7.f();\n  }\n\n  chartArea.x = x;\n  chartArea.y = y;\n}\n\nvar layouts = {\n  addBox: function addBox(chart, item) {\n    if (!chart.boxes) {\n      chart.boxes = [];\n    }\n\n    item.fullSize = item.fullSize || false;\n    item.position = item.position || 'top';\n    item.weight = item.weight || 0;\n\n    item._layers = item._layers || function () {\n      return [{\n        z: 0,\n        draw: function draw(chartArea) {\n          item.draw(chartArea);\n        }\n      }];\n    };\n\n    chart.boxes.push(item);\n  },\n  removeBox: function removeBox(chart, layoutItem) {\n    var index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\n\n    if (index !== -1) {\n      chart.boxes.splice(index, 1);\n    }\n  },\n  configure: function configure(chart, item, options) {\n    item.fullSize = options.fullSize;\n    item.position = options.position;\n    item.weight = options.weight;\n  },\n  update: function update(chart, width, height, minPadding) {\n    if (!chart) {\n      return;\n    }\n\n    var padding = toPadding(chart.options.layout.padding);\n    var availableWidth = Math.max(width - padding.width, 0);\n    var availableHeight = Math.max(height - padding.height, 0);\n    var boxes = buildLayoutBoxes(chart.boxes);\n    var verticalBoxes = boxes.vertical;\n    var horizontalBoxes = boxes.horizontal;\n    each(chart.boxes, function (box) {\n      if (typeof box.beforeLayout === 'function') {\n        box.beforeLayout();\n      }\n    });\n    var visibleVerticalBoxCount = verticalBoxes.reduce(function (total, wrap) {\n      return wrap.box.options && wrap.box.options.display === false ? total : total + 1;\n    }, 0) || 1;\n    var params = Object.freeze({\n      outerWidth: width,\n      outerHeight: height,\n      padding: padding,\n      availableWidth: availableWidth,\n      availableHeight: availableHeight,\n      vBoxMaxWidth: availableWidth / 2 / visibleVerticalBoxCount,\n      hBoxMaxHeight: availableHeight / 2\n    });\n    var maxPadding = Object.assign({}, padding);\n    updateMaxPadding(maxPadding, toPadding(minPadding));\n    var chartArea = Object.assign({\n      maxPadding: maxPadding,\n      w: availableWidth,\n      h: availableHeight,\n      x: padding.left,\n      y: padding.top\n    }, padding);\n    var stacks = setLayoutDims(verticalBoxes.concat(horizontalBoxes), params);\n    fitBoxes(boxes.fullSize, chartArea, params, stacks);\n    fitBoxes(verticalBoxes, chartArea, params, stacks);\n\n    if (fitBoxes(horizontalBoxes, chartArea, params, stacks)) {\n      fitBoxes(verticalBoxes, chartArea, params, stacks);\n    }\n\n    handleMaxPadding(chartArea);\n    placeBoxes(boxes.leftAndTop, chartArea, params, stacks);\n    chartArea.x += chartArea.w;\n    chartArea.y += chartArea.h;\n    placeBoxes(boxes.rightAndBottom, chartArea, params, stacks);\n    chart.chartArea = {\n      left: chartArea.left,\n      top: chartArea.top,\n      right: chartArea.left + chartArea.w,\n      bottom: chartArea.top + chartArea.h,\n      height: chartArea.h,\n      width: chartArea.w\n    };\n    each(boxes.chartArea, function (layout) {\n      var box = layout.box;\n      Object.assign(box, chart.chartArea);\n      box.update(chartArea.w, chartArea.h, {\n        left: 0,\n        top: 0,\n        right: 0,\n        bottom: 0\n      });\n    });\n  }\n};\n\nvar BasePlatform = /*#__PURE__*/function () {\n  function BasePlatform() {\n    _classCallCheck(this, BasePlatform);\n  }\n\n  _createClass(BasePlatform, [{\n    key: \"acquireContext\",\n    value: function acquireContext(canvas, aspectRatio) {}\n  }, {\n    key: \"releaseContext\",\n    value: function releaseContext(context) {\n      return false;\n    }\n  }, {\n    key: \"addEventListener\",\n    value: function addEventListener(chart, type, listener) {}\n  }, {\n    key: \"removeEventListener\",\n    value: function removeEventListener(chart, type, listener) {}\n  }, {\n    key: \"getDevicePixelRatio\",\n    value: function getDevicePixelRatio() {\n      return 1;\n    }\n  }, {\n    key: \"getMaximumSize\",\n    value: function getMaximumSize(element, width, height, aspectRatio) {\n      width = Math.max(0, width || element.width);\n      height = height || element.height;\n      return {\n        width: width,\n        height: Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height)\n      };\n    }\n  }, {\n    key: \"isAttached\",\n    value: function isAttached(canvas) {\n      return true;\n    }\n  }, {\n    key: \"updateConfig\",\n    value: function updateConfig(config) {}\n  }]);\n\n  return BasePlatform;\n}();\n\nvar BasicPlatform = /*#__PURE__*/function (_BasePlatform) {\n  _inherits(BasicPlatform, _BasePlatform);\n\n  var _super9 = _createSuper(BasicPlatform);\n\n  function BasicPlatform() {\n    _classCallCheck(this, BasicPlatform);\n\n    return _super9.apply(this, arguments);\n  }\n\n  _createClass(BasicPlatform, [{\n    key: \"acquireContext\",\n    value: function acquireContext(item) {\n      return item && item.getContext && item.getContext('2d') || null;\n    }\n  }, {\n    key: \"updateConfig\",\n    value: function updateConfig(config) {\n      config.options.animation = false;\n    }\n  }]);\n\n  return BasicPlatform;\n}(BasePlatform);\n\nvar EXPANDO_KEY = '$chartjs';\nvar EVENT_TYPES = {\n  touchstart: 'mousedown',\n  touchmove: 'mousemove',\n  touchend: 'mouseup',\n  pointerenter: 'mouseenter',\n  pointerdown: 'mousedown',\n  pointermove: 'mousemove',\n  pointerup: 'mouseup',\n  pointerleave: 'mouseout',\n  pointerout: 'mouseout'\n};\n\nvar isNullOrEmpty = function isNullOrEmpty(value) {\n  return value === null || value === '';\n};\n\nfunction initCanvas(canvas, aspectRatio) {\n  var style = canvas.style;\n  var renderHeight = canvas.getAttribute('height');\n  var renderWidth = canvas.getAttribute('width');\n  canvas[EXPANDO_KEY] = {\n    initial: {\n      height: renderHeight,\n      width: renderWidth,\n      style: {\n        display: style.display,\n        height: style.height,\n        width: style.width\n      }\n    }\n  };\n  style.display = style.display || 'block';\n  style.boxSizing = style.boxSizing || 'border-box';\n\n  if (isNullOrEmpty(renderWidth)) {\n    var displayWidth = readUsedSize(canvas, 'width');\n\n    if (displayWidth !== undefined) {\n      canvas.width = displayWidth;\n    }\n  }\n\n  if (isNullOrEmpty(renderHeight)) {\n    if (canvas.style.height === '') {\n      canvas.height = canvas.width / (aspectRatio || 2);\n    } else {\n      var displayHeight = readUsedSize(canvas, 'height');\n\n      if (displayHeight !== undefined) {\n        canvas.height = displayHeight;\n      }\n    }\n  }\n\n  return canvas;\n}\n\nvar eventListenerOptions = supportsEventListenerOptions ? {\n  passive: true\n} : false;\n\nfunction addListener(node, type, listener) {\n  if (node) {\n    node.addEventListener(type, listener, eventListenerOptions);\n  }\n}\n\nfunction removeListener(chart, type, listener) {\n  if (chart && chart.canvas) {\n    chart.canvas.removeEventListener(type, listener, eventListenerOptions);\n  }\n}\n\nfunction fromNativeEvent(event, chart) {\n  var type = EVENT_TYPES[event.type] || event.type;\n\n  var _getRelativePosition = getRelativePosition(event, chart),\n      x = _getRelativePosition.x,\n      y = _getRelativePosition.y;\n\n  return {\n    type: type,\n    chart: chart,\n    native: event,\n    x: x !== undefined ? x : null,\n    y: y !== undefined ? y : null\n  };\n}\n\nfunction nodeListContains(nodeList, canvas) {\n  var _iterator8 = _createForOfIteratorHelper(nodeList),\n      _step8;\n\n  try {\n    for (_iterator8.s(); !(_step8 = _iterator8.n()).done;) {\n      var node = _step8.value;\n\n      if (node === canvas || node.contains(canvas)) {\n        return true;\n      }\n    }\n  } catch (err) {\n    _iterator8.e(err);\n  } finally {\n    _iterator8.f();\n  }\n}\n\nfunction createAttachObserver(chart, type, listener) {\n  var canvas = chart.canvas;\n  var observer = new MutationObserver(function (entries) {\n    var trigger = false;\n\n    var _iterator9 = _createForOfIteratorHelper(entries),\n        _step9;\n\n    try {\n      for (_iterator9.s(); !(_step9 = _iterator9.n()).done;) {\n        var entry = _step9.value;\n        trigger = trigger || nodeListContains(entry.addedNodes, canvas);\n        trigger = trigger && !nodeListContains(entry.removedNodes, canvas);\n      }\n    } catch (err) {\n      _iterator9.e(err);\n    } finally {\n      _iterator9.f();\n    }\n\n    if (trigger) {\n      listener();\n    }\n  });\n  observer.observe(document, {\n    childList: true,\n    subtree: true\n  });\n  return observer;\n}\n\nfunction createDetachObserver(chart, type, listener) {\n  var canvas = chart.canvas;\n  var observer = new MutationObserver(function (entries) {\n    var trigger = false;\n\n    var _iterator10 = _createForOfIteratorHelper(entries),\n        _step10;\n\n    try {\n      for (_iterator10.s(); !(_step10 = _iterator10.n()).done;) {\n        var entry = _step10.value;\n        trigger = trigger || nodeListContains(entry.removedNodes, canvas);\n        trigger = trigger && !nodeListContains(entry.addedNodes, canvas);\n      }\n    } catch (err) {\n      _iterator10.e(err);\n    } finally {\n      _iterator10.f();\n    }\n\n    if (trigger) {\n      listener();\n    }\n  });\n  observer.observe(document, {\n    childList: true,\n    subtree: true\n  });\n  return observer;\n}\n\nvar drpListeningCharts = new Map();\nvar oldDevicePixelRatio = 0;\n\nfunction onWindowResize() {\n  var dpr = window.devicePixelRatio;\n\n  if (dpr === oldDevicePixelRatio) {\n    return;\n  }\n\n  oldDevicePixelRatio = dpr;\n  drpListeningCharts.forEach(function (resize, chart) {\n    if (chart.currentDevicePixelRatio !== dpr) {\n      resize();\n    }\n  });\n}\n\nfunction listenDevicePixelRatioChanges(chart, resize) {\n  if (!drpListeningCharts.size) {\n    window.addEventListener('resize', onWindowResize);\n  }\n\n  drpListeningCharts.set(chart, resize);\n}\n\nfunction unlistenDevicePixelRatioChanges(chart) {\n  drpListeningCharts.delete(chart);\n\n  if (!drpListeningCharts.size) {\n    window.removeEventListener('resize', onWindowResize);\n  }\n}\n\nfunction createResizeObserver(chart, type, listener) {\n  var canvas = chart.canvas;\n\n  var container = canvas && _getParentNode(canvas);\n\n  if (!container) {\n    return;\n  }\n\n  var resize = throttled(function (width, height) {\n    var w = container.clientWidth;\n    listener(width, height);\n\n    if (w < container.clientWidth) {\n      listener();\n    }\n  }, window);\n  var observer = new ResizeObserver(function (entries) {\n    var entry = entries[0];\n    var width = entry.contentRect.width;\n    var height = entry.contentRect.height;\n\n    if (width === 0 && height === 0) {\n      return;\n    }\n\n    resize(width, height);\n  });\n  observer.observe(container);\n  listenDevicePixelRatioChanges(chart, resize);\n  return observer;\n}\n\nfunction releaseObserver(chart, type, observer) {\n  if (observer) {\n    observer.disconnect();\n  }\n\n  if (type === 'resize') {\n    unlistenDevicePixelRatioChanges(chart);\n  }\n}\n\nfunction createProxyAndListen(chart, type, listener) {\n  var canvas = chart.canvas;\n  var proxy = throttled(function (event) {\n    if (chart.ctx !== null) {\n      listener(fromNativeEvent(event, chart));\n    }\n  }, chart);\n  addListener(canvas, type, proxy);\n  return proxy;\n}\n\nvar DomPlatform = /*#__PURE__*/function (_BasePlatform2) {\n  _inherits(DomPlatform, _BasePlatform2);\n\n  var _super10 = _createSuper(DomPlatform);\n\n  function DomPlatform() {\n    _classCallCheck(this, DomPlatform);\n\n    return _super10.apply(this, arguments);\n  }\n\n  _createClass(DomPlatform, [{\n    key: \"acquireContext\",\n    value: function acquireContext(canvas, aspectRatio) {\n      var context = canvas && canvas.getContext && canvas.getContext('2d');\n\n      if (context && context.canvas === canvas) {\n        initCanvas(canvas, aspectRatio);\n        return context;\n      }\n\n      return null;\n    }\n  }, {\n    key: \"releaseContext\",\n    value: function releaseContext(context) {\n      var canvas = context.canvas;\n\n      if (!canvas[EXPANDO_KEY]) {\n        return false;\n      }\n\n      var initial = canvas[EXPANDO_KEY].initial;\n      ['height', 'width'].forEach(function (prop) {\n        var value = initial[prop];\n\n        if (isNullOrUndef(value)) {\n          canvas.removeAttribute(prop);\n        } else {\n          canvas.setAttribute(prop, value);\n        }\n      });\n      var style = initial.style || {};\n      Object.keys(style).forEach(function (key) {\n        canvas.style[key] = style[key];\n      });\n      canvas.width = canvas.width;\n      delete canvas[EXPANDO_KEY];\n      return true;\n    }\n  }, {\n    key: \"addEventListener\",\n    value: function addEventListener(chart, type, listener) {\n      this.removeEventListener(chart, type);\n      var proxies = chart.$proxies || (chart.$proxies = {});\n      var handlers = {\n        attach: createAttachObserver,\n        detach: createDetachObserver,\n        resize: createResizeObserver\n      };\n      var handler = handlers[type] || createProxyAndListen;\n      proxies[type] = handler(chart, type, listener);\n    }\n  }, {\n    key: \"removeEventListener\",\n    value: function removeEventListener(chart, type) {\n      var proxies = chart.$proxies || (chart.$proxies = {});\n      var proxy = proxies[type];\n\n      if (!proxy) {\n        return;\n      }\n\n      var handlers = {\n        attach: releaseObserver,\n        detach: releaseObserver,\n        resize: releaseObserver\n      };\n      var handler = handlers[type] || removeListener;\n      handler(chart, type, proxy);\n      proxies[type] = undefined;\n    }\n  }, {\n    key: \"getDevicePixelRatio\",\n    value: function getDevicePixelRatio() {\n      return window.devicePixelRatio;\n    }\n  }, {\n    key: \"getMaximumSize\",\n    value: function getMaximumSize(canvas, width, height, aspectRatio) {\n      return _getMaximumSize(canvas, width, height, aspectRatio);\n    }\n  }, {\n    key: \"isAttached\",\n    value: function isAttached(canvas) {\n      var container = canvas && _getParentNode(canvas);\n\n      return !!(container && container.isConnected);\n    }\n  }]);\n\n  return DomPlatform;\n}(BasePlatform);\n\nfunction _detectPlatform(canvas) {\n  if (!_isDomSupported() || typeof OffscreenCanvas !== 'undefined' && canvas instanceof OffscreenCanvas) {\n    return BasicPlatform;\n  }\n\n  return DomPlatform;\n}\n\nvar Element = /*#__PURE__*/function () {\n  function Element() {\n    _classCallCheck(this, Element);\n\n    _defineProperty(this, \"x\", void 0);\n\n    _defineProperty(this, \"y\", void 0);\n\n    _defineProperty(this, \"active\", false);\n\n    _defineProperty(this, \"options\", void 0);\n\n    _defineProperty(this, \"$animations\", void 0);\n  }\n\n  _createClass(Element, [{\n    key: \"tooltipPosition\",\n    value: function tooltipPosition(useFinalPosition) {\n      var _this$getProps = this.getProps(['x', 'y'], useFinalPosition),\n          x = _this$getProps.x,\n          y = _this$getProps.y;\n\n      return {\n        x: x,\n        y: y\n      };\n    }\n  }, {\n    key: \"hasValue\",\n    value: function hasValue() {\n      return isNumber(this.x) && isNumber(this.y);\n    }\n  }, {\n    key: \"getProps\",\n    value: function getProps(props, final) {\n      var _this8 = this;\n\n      var anims = this.$animations;\n\n      if (!final || !anims) {\n        // let's not create an object, if not needed\n        return this;\n      }\n\n      var ret = {};\n      props.forEach(function (prop) {\n        ret[prop] = anims[prop] && anims[prop].active() ? anims[prop]._to : _this8[prop];\n      });\n      return ret;\n    }\n  }]);\n\n  return Element;\n}();\n\n_defineProperty(Element, \"defaults\", {});\n\n_defineProperty(Element, \"defaultRoutes\", undefined);\n\nfunction autoSkip(scale, ticks) {\n  var tickOpts = scale.options.ticks;\n  var determinedMaxTicks = determineMaxTicks(scale);\n  var ticksLimit = Math.min(tickOpts.maxTicksLimit || determinedMaxTicks, determinedMaxTicks);\n  var majorIndices = tickOpts.major.enabled ? getMajorIndices(ticks) : [];\n  var numMajorIndices = majorIndices.length;\n  var first = majorIndices[0];\n  var last = majorIndices[numMajorIndices - 1];\n  var newTicks = [];\n\n  if (numMajorIndices > ticksLimit) {\n    skipMajors(ticks, newTicks, majorIndices, numMajorIndices / ticksLimit);\n    return newTicks;\n  }\n\n  var spacing = calculateSpacing(majorIndices, ticks, ticksLimit);\n\n  if (numMajorIndices > 0) {\n    var i, ilen;\n    var avgMajorSpacing = numMajorIndices > 1 ? Math.round((last - first) / (numMajorIndices - 1)) : null;\n    skip(ticks, newTicks, spacing, isNullOrUndef(avgMajorSpacing) ? 0 : first - avgMajorSpacing, first);\n\n    for (i = 0, ilen = numMajorIndices - 1; i < ilen; i++) {\n      skip(ticks, newTicks, spacing, majorIndices[i], majorIndices[i + 1]);\n    }\n\n    skip(ticks, newTicks, spacing, last, isNullOrUndef(avgMajorSpacing) ? ticks.length : last + avgMajorSpacing);\n    return newTicks;\n  }\n\n  skip(ticks, newTicks, spacing);\n  return newTicks;\n}\n\nfunction determineMaxTicks(scale) {\n  var offset = scale.options.offset;\n\n  var tickLength = scale._tickSize();\n\n  var maxScale = scale._length / tickLength + (offset ? 0 : 1);\n  var maxChart = scale._maxLength / tickLength;\n  return Math.floor(Math.min(maxScale, maxChart));\n}\n\nfunction calculateSpacing(majorIndices, ticks, ticksLimit) {\n  var evenMajorSpacing = getEvenSpacing(majorIndices);\n  var spacing = ticks.length / ticksLimit;\n\n  if (!evenMajorSpacing) {\n    return Math.max(spacing, 1);\n  }\n\n  var factors = _factorize(evenMajorSpacing);\n\n  for (var i = 0, ilen = factors.length - 1; i < ilen; i++) {\n    var factor = factors[i];\n\n    if (factor > spacing) {\n      return factor;\n    }\n  }\n\n  return Math.max(spacing, 1);\n}\n\nfunction getMajorIndices(ticks) {\n  var result = [];\n  var i, ilen;\n\n  for (i = 0, ilen = ticks.length; i < ilen; i++) {\n    if (ticks[i].major) {\n      result.push(i);\n    }\n  }\n\n  return result;\n}\n\nfunction skipMajors(ticks, newTicks, majorIndices, spacing) {\n  var count = 0;\n  var next = majorIndices[0];\n  var i;\n  spacing = Math.ceil(spacing);\n\n  for (i = 0; i < ticks.length; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = majorIndices[count * spacing];\n    }\n  }\n}\n\nfunction skip(ticks, newTicks, spacing, majorStart, majorEnd) {\n  var start = valueOrDefault(majorStart, 0);\n  var end = Math.min(valueOrDefault(majorEnd, ticks.length), ticks.length);\n  var count = 0;\n  var length, i, next;\n  spacing = Math.ceil(spacing);\n\n  if (majorEnd) {\n    length = majorEnd - majorStart;\n    spacing = length / Math.floor(length / spacing);\n  }\n\n  next = start;\n\n  while (next < 0) {\n    count++;\n    next = Math.round(start + count * spacing);\n  }\n\n  for (i = Math.max(start, 0); i < end; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = Math.round(start + count * spacing);\n    }\n  }\n}\n\nfunction getEvenSpacing(arr) {\n  var len = arr.length;\n  var i, diff;\n\n  if (len < 2) {\n    return false;\n  }\n\n  for (diff = arr[0], i = 1; i < len; ++i) {\n    if (arr[i] - arr[i - 1] !== diff) {\n      return false;\n    }\n  }\n\n  return diff;\n}\n\nvar reverseAlign = function reverseAlign(align) {\n  return align === 'left' ? 'right' : align === 'right' ? 'left' : align;\n};\n\nvar offsetFromEdge = function offsetFromEdge(scale, edge, offset) {\n  return edge === 'top' || edge === 'left' ? scale[edge] + offset : scale[edge] - offset;\n};\n\nvar getTicksLimit = function getTicksLimit(ticksLength, maxTicksLimit) {\n  return Math.min(maxTicksLimit || ticksLength, ticksLength);\n};\n\nfunction sample(arr, numItems) {\n  var result = [];\n  var increment = arr.length / numItems;\n  var len = arr.length;\n  var i = 0;\n\n  for (; i < len; i += increment) {\n    result.push(arr[Math.floor(i)]);\n  }\n\n  return result;\n}\n\nfunction getPixelForGridLine(scale, index, offsetGridLines) {\n  var length = scale.ticks.length;\n  var validIndex = Math.min(index, length - 1);\n  var start = scale._startPixel;\n  var end = scale._endPixel;\n  var epsilon = 1e-6;\n  var lineValue = scale.getPixelForTick(validIndex);\n  var offset;\n\n  if (offsetGridLines) {\n    if (length === 1) {\n      offset = Math.max(lineValue - start, end - lineValue);\n    } else if (index === 0) {\n      offset = (scale.getPixelForTick(1) - lineValue) / 2;\n    } else {\n      offset = (lineValue - scale.getPixelForTick(validIndex - 1)) / 2;\n    }\n\n    lineValue += validIndex < index ? offset : -offset;\n\n    if (lineValue < start - epsilon || lineValue > end + epsilon) {\n      return;\n    }\n  }\n\n  return lineValue;\n}\n\nfunction garbageCollect(caches, length) {\n  each(caches, function (cache) {\n    var gc = cache.gc;\n    var gcLen = gc.length / 2;\n    var i;\n\n    if (gcLen > length) {\n      for (i = 0; i < gcLen; ++i) {\n        delete cache.data[gc[i]];\n      }\n\n      gc.splice(0, gcLen);\n    }\n  });\n}\n\nfunction getTickMarkLength(options) {\n  return options.drawTicks ? options.tickLength : 0;\n}\n\nfunction getTitleHeight(options, fallback) {\n  if (!options.display) {\n    return 0;\n  }\n\n  var font = toFont(options.font, fallback);\n  var padding = toPadding(options.padding);\n  var lines = isArray(options.text) ? options.text.length : 1;\n  return lines * font.lineHeight + padding.height;\n}\n\nfunction createScaleContext(parent, scale) {\n  return createContext(parent, {\n    scale: scale,\n    type: 'scale'\n  });\n}\n\nfunction createTickContext(parent, index, tick) {\n  return createContext(parent, {\n    tick: tick,\n    index: index,\n    type: 'tick'\n  });\n}\n\nfunction titleAlign(align, position, reverse) {\n  var ret = _toLeftRightCenter(align);\n\n  if (reverse && position !== 'right' || !reverse && position === 'right') {\n    ret = reverseAlign(ret);\n  }\n\n  return ret;\n}\n\nfunction titleArgs(scale, offset, position, align) {\n  var top = scale.top,\n      left = scale.left,\n      bottom = scale.bottom,\n      right = scale.right,\n      chart = scale.chart;\n  var chartArea = chart.chartArea,\n      scales = chart.scales;\n  var rotation = 0;\n  var maxWidth, titleX, titleY;\n  var height = bottom - top;\n  var width = right - left;\n\n  if (scale.isHorizontal()) {\n    titleX = _alignStartEnd(align, left, right);\n\n    if (isObject(position)) {\n      var positionAxisID = Object.keys(position)[0];\n      var value = position[positionAxisID];\n      titleY = scales[positionAxisID].getPixelForValue(value) + height - offset;\n    } else if (position === 'center') {\n      titleY = (chartArea.bottom + chartArea.top) / 2 + height - offset;\n    } else {\n      titleY = offsetFromEdge(scale, position, offset);\n    }\n\n    maxWidth = right - left;\n  } else {\n    if (isObject(position)) {\n      var _positionAxisID = Object.keys(position)[0];\n      var _value = position[_positionAxisID];\n      titleX = scales[_positionAxisID].getPixelForValue(_value) - width + offset;\n    } else if (position === 'center') {\n      titleX = (chartArea.left + chartArea.right) / 2 - width + offset;\n    } else {\n      titleX = offsetFromEdge(scale, position, offset);\n    }\n\n    titleY = _alignStartEnd(align, bottom, top);\n    rotation = position === 'left' ? -HALF_PI : HALF_PI;\n  }\n\n  return {\n    titleX: titleX,\n    titleY: titleY,\n    maxWidth: maxWidth,\n    rotation: rotation\n  };\n}\n\nvar Scale = /*#__PURE__*/function (_Element) {\n  _inherits(Scale, _Element);\n\n  var _super11 = _createSuper(Scale);\n\n  function Scale(cfg) {\n    var _this9;\n\n    _classCallCheck(this, Scale);\n\n    _this9 = _super11.call(this);\n    _this9.id = cfg.id;\n    _this9.type = cfg.type;\n    _this9.options = undefined;\n    _this9.ctx = cfg.ctx;\n    _this9.chart = cfg.chart;\n    _this9.top = undefined;\n    _this9.bottom = undefined;\n    _this9.left = undefined;\n    _this9.right = undefined;\n    _this9.width = undefined;\n    _this9.height = undefined;\n    _this9._margins = {\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    };\n    _this9.maxWidth = undefined;\n    _this9.maxHeight = undefined;\n    _this9.paddingTop = undefined;\n    _this9.paddingBottom = undefined;\n    _this9.paddingLeft = undefined;\n    _this9.paddingRight = undefined;\n    _this9.axis = undefined;\n    _this9.labelRotation = undefined;\n    _this9.min = undefined;\n    _this9.max = undefined;\n    _this9._range = undefined;\n    _this9.ticks = [];\n    _this9._gridLineItems = null;\n    _this9._labelItems = null;\n    _this9._labelSizes = null;\n    _this9._length = 0;\n    _this9._maxLength = 0;\n    _this9._longestTextCache = {};\n    _this9._startPixel = undefined;\n    _this9._endPixel = undefined;\n    _this9._reversePixels = false;\n    _this9._userMax = undefined;\n    _this9._userMin = undefined;\n    _this9._suggestedMax = undefined;\n    _this9._suggestedMin = undefined;\n    _this9._ticksLength = 0;\n    _this9._borderValue = 0;\n    _this9._cache = {};\n    _this9._dataLimitsCached = false;\n    _this9.$context = undefined;\n    return _this9;\n  }\n\n  _createClass(Scale, [{\n    key: \"init\",\n    value: function init(options) {\n      this.options = options.setContext(this.getContext());\n      this.axis = options.axis;\n      this._userMin = this.parse(options.min);\n      this._userMax = this.parse(options.max);\n      this._suggestedMin = this.parse(options.suggestedMin);\n      this._suggestedMax = this.parse(options.suggestedMax);\n    }\n  }, {\n    key: \"parse\",\n    value: function parse(raw, index) {\n      return raw;\n    }\n  }, {\n    key: \"getUserBounds\",\n    value: function getUserBounds() {\n      var _userMin = this._userMin,\n          _userMax = this._userMax,\n          _suggestedMin = this._suggestedMin,\n          _suggestedMax = this._suggestedMax;\n      _userMin = finiteOrDefault(_userMin, Number.POSITIVE_INFINITY);\n      _userMax = finiteOrDefault(_userMax, Number.NEGATIVE_INFINITY);\n      _suggestedMin = finiteOrDefault(_suggestedMin, Number.POSITIVE_INFINITY);\n      _suggestedMax = finiteOrDefault(_suggestedMax, Number.NEGATIVE_INFINITY);\n      return {\n        min: finiteOrDefault(_userMin, _suggestedMin),\n        max: finiteOrDefault(_userMax, _suggestedMax),\n        minDefined: isNumberFinite(_userMin),\n        maxDefined: isNumberFinite(_userMax)\n      };\n    }\n  }, {\n    key: \"getMinMax\",\n    value: function getMinMax(canStack) {\n      var _this$getUserBounds = this.getUserBounds(),\n          min = _this$getUserBounds.min,\n          max = _this$getUserBounds.max,\n          minDefined = _this$getUserBounds.minDefined,\n          maxDefined = _this$getUserBounds.maxDefined;\n\n      var range;\n\n      if (minDefined && maxDefined) {\n        return {\n          min: min,\n          max: max\n        };\n      }\n\n      var metas = this.getMatchingVisibleMetas();\n\n      for (var i = 0, ilen = metas.length; i < ilen; ++i) {\n        range = metas[i].controller.getMinMax(this, canStack);\n\n        if (!minDefined) {\n          min = Math.min(min, range.min);\n        }\n\n        if (!maxDefined) {\n          max = Math.max(max, range.max);\n        }\n      }\n\n      min = maxDefined && min > max ? max : min;\n      max = minDefined && min > max ? min : max;\n      return {\n        min: finiteOrDefault(min, finiteOrDefault(max, min)),\n        max: finiteOrDefault(max, finiteOrDefault(min, max))\n      };\n    }\n  }, {\n    key: \"getPadding\",\n    value: function getPadding() {\n      return {\n        left: this.paddingLeft || 0,\n        top: this.paddingTop || 0,\n        right: this.paddingRight || 0,\n        bottom: this.paddingBottom || 0\n      };\n    }\n  }, {\n    key: \"getTicks\",\n    value: function getTicks() {\n      return this.ticks;\n    }\n  }, {\n    key: \"getLabels\",\n    value: function getLabels() {\n      var data = this.chart.data;\n      return this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels || [];\n    }\n  }, {\n    key: \"getLabelItems\",\n    value: function getLabelItems() {\n      var chartArea = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.chart.chartArea;\n\n      var items = this._labelItems || (this._labelItems = this._computeLabelItems(chartArea));\n\n      return items;\n    }\n  }, {\n    key: \"beforeLayout\",\n    value: function beforeLayout() {\n      this._cache = {};\n      this._dataLimitsCached = false;\n    }\n  }, {\n    key: \"beforeUpdate\",\n    value: function beforeUpdate() {\n      callback(this.options.beforeUpdate, [this]);\n    }\n  }, {\n    key: \"update\",\n    value: function update(maxWidth, maxHeight, margins) {\n      var _this$options4 = this.options,\n          beginAtZero = _this$options4.beginAtZero,\n          grace = _this$options4.grace,\n          tickOpts = _this$options4.ticks;\n      var sampleSize = tickOpts.sampleSize;\n      this.beforeUpdate();\n      this.maxWidth = maxWidth;\n      this.maxHeight = maxHeight;\n      this._margins = margins = Object.assign({\n        left: 0,\n        right: 0,\n        top: 0,\n        bottom: 0\n      }, margins);\n      this.ticks = null;\n      this._labelSizes = null;\n      this._gridLineItems = null;\n      this._labelItems = null;\n      this.beforeSetDimensions();\n      this.setDimensions();\n      this.afterSetDimensions();\n      this._maxLength = this.isHorizontal() ? this.width + margins.left + margins.right : this.height + margins.top + margins.bottom;\n\n      if (!this._dataLimitsCached) {\n        this.beforeDataLimits();\n        this.determineDataLimits();\n        this.afterDataLimits();\n        this._range = _addGrace(this, grace, beginAtZero);\n        this._dataLimitsCached = true;\n      }\n\n      this.beforeBuildTicks();\n      this.ticks = this.buildTicks() || [];\n      this.afterBuildTicks();\n      var samplingEnabled = sampleSize < this.ticks.length;\n\n      this._convertTicksToLabels(samplingEnabled ? sample(this.ticks, sampleSize) : this.ticks);\n\n      this.configure();\n      this.beforeCalculateLabelRotation();\n      this.calculateLabelRotation();\n      this.afterCalculateLabelRotation();\n\n      if (tickOpts.display && (tickOpts.autoSkip || tickOpts.source === 'auto')) {\n        this.ticks = autoSkip(this, this.ticks);\n        this._labelSizes = null;\n        this.afterAutoSkip();\n      }\n\n      if (samplingEnabled) {\n        this._convertTicksToLabels(this.ticks);\n      }\n\n      this.beforeFit();\n      this.fit();\n      this.afterFit();\n      this.afterUpdate();\n    }\n  }, {\n    key: \"configure\",\n    value: function configure() {\n      var reversePixels = this.options.reverse;\n      var startPixel, endPixel;\n\n      if (this.isHorizontal()) {\n        startPixel = this.left;\n        endPixel = this.right;\n      } else {\n        startPixel = this.top;\n        endPixel = this.bottom;\n        reversePixels = !reversePixels;\n      }\n\n      this._startPixel = startPixel;\n      this._endPixel = endPixel;\n      this._reversePixels = reversePixels;\n      this._length = endPixel - startPixel;\n      this._alignToPixels = this.options.alignToPixels;\n    }\n  }, {\n    key: \"afterUpdate\",\n    value: function afterUpdate() {\n      callback(this.options.afterUpdate, [this]);\n    }\n  }, {\n    key: \"beforeSetDimensions\",\n    value: function beforeSetDimensions() {\n      callback(this.options.beforeSetDimensions, [this]);\n    }\n  }, {\n    key: \"setDimensions\",\n    value: function setDimensions() {\n      if (this.isHorizontal()) {\n        this.width = this.maxWidth;\n        this.left = 0;\n        this.right = this.width;\n      } else {\n        this.height = this.maxHeight;\n        this.top = 0;\n        this.bottom = this.height;\n      }\n\n      this.paddingLeft = 0;\n      this.paddingTop = 0;\n      this.paddingRight = 0;\n      this.paddingBottom = 0;\n    }\n  }, {\n    key: \"afterSetDimensions\",\n    value: function afterSetDimensions() {\n      callback(this.options.afterSetDimensions, [this]);\n    }\n  }, {\n    key: \"_callHooks\",\n    value: function _callHooks(name) {\n      this.chart.notifyPlugins(name, this.getContext());\n      callback(this.options[name], [this]);\n    }\n  }, {\n    key: \"beforeDataLimits\",\n    value: function beforeDataLimits() {\n      this._callHooks('beforeDataLimits');\n    }\n  }, {\n    key: \"determineDataLimits\",\n    value: function determineDataLimits() {}\n  }, {\n    key: \"afterDataLimits\",\n    value: function afterDataLimits() {\n      this._callHooks('afterDataLimits');\n    }\n  }, {\n    key: \"beforeBuildTicks\",\n    value: function beforeBuildTicks() {\n      this._callHooks('beforeBuildTicks');\n    }\n  }, {\n    key: \"buildTicks\",\n    value: function buildTicks() {\n      return [];\n    }\n  }, {\n    key: \"afterBuildTicks\",\n    value: function afterBuildTicks() {\n      this._callHooks('afterBuildTicks');\n    }\n  }, {\n    key: \"beforeTickToLabelConversion\",\n    value: function beforeTickToLabelConversion() {\n      callback(this.options.beforeTickToLabelConversion, [this]);\n    }\n  }, {\n    key: \"generateTickLabels\",\n    value: function generateTickLabels(ticks) {\n      var tickOpts = this.options.ticks;\n      var i, ilen, tick;\n\n      for (i = 0, ilen = ticks.length; i < ilen; i++) {\n        tick = ticks[i];\n        tick.label = callback(tickOpts.callback, [tick.value, i, ticks], this);\n      }\n    }\n  }, {\n    key: \"afterTickToLabelConversion\",\n    value: function afterTickToLabelConversion() {\n      callback(this.options.afterTickToLabelConversion, [this]);\n    }\n  }, {\n    key: \"beforeCalculateLabelRotation\",\n    value: function beforeCalculateLabelRotation() {\n      callback(this.options.beforeCalculateLabelRotation, [this]);\n    }\n  }, {\n    key: \"calculateLabelRotation\",\n    value: function calculateLabelRotation() {\n      var options = this.options;\n      var tickOpts = options.ticks;\n      var numTicks = getTicksLimit(this.ticks.length, options.ticks.maxTicksLimit);\n      var minRotation = tickOpts.minRotation || 0;\n      var maxRotation = tickOpts.maxRotation;\n      var labelRotation = minRotation;\n      var tickWidth, maxHeight, maxLabelDiagonal;\n\n      if (!this._isVisible() || !tickOpts.display || minRotation >= maxRotation || numTicks <= 1 || !this.isHorizontal()) {\n        this.labelRotation = minRotation;\n        return;\n      }\n\n      var labelSizes = this._getLabelSizes();\n\n      var maxLabelWidth = labelSizes.widest.width;\n      var maxLabelHeight = labelSizes.highest.height;\n\n      var maxWidth = _limitValue(this.chart.width - maxLabelWidth, 0, this.maxWidth);\n\n      tickWidth = options.offset ? this.maxWidth / numTicks : maxWidth / (numTicks - 1);\n\n      if (maxLabelWidth + 6 > tickWidth) {\n        tickWidth = maxWidth / (numTicks - (options.offset ? 0.5 : 1));\n        maxHeight = this.maxHeight - getTickMarkLength(options.grid) - tickOpts.padding - getTitleHeight(options.title, this.chart.options.font);\n        maxLabelDiagonal = Math.sqrt(maxLabelWidth * maxLabelWidth + maxLabelHeight * maxLabelHeight);\n        labelRotation = toDegrees(Math.min(Math.asin(_limitValue((labelSizes.highest.height + 6) / tickWidth, -1, 1)), Math.asin(_limitValue(maxHeight / maxLabelDiagonal, -1, 1)) - Math.asin(_limitValue(maxLabelHeight / maxLabelDiagonal, -1, 1))));\n        labelRotation = Math.max(minRotation, Math.min(maxRotation, labelRotation));\n      }\n\n      this.labelRotation = labelRotation;\n    }\n  }, {\n    key: \"afterCalculateLabelRotation\",\n    value: function afterCalculateLabelRotation() {\n      callback(this.options.afterCalculateLabelRotation, [this]);\n    }\n  }, {\n    key: \"afterAutoSkip\",\n    value: function afterAutoSkip() {}\n  }, {\n    key: \"beforeFit\",\n    value: function beforeFit() {\n      callback(this.options.beforeFit, [this]);\n    }\n  }, {\n    key: \"fit\",\n    value: function fit() {\n      var minSize = {\n        width: 0,\n        height: 0\n      };\n      var chart = this.chart,\n          _this$options5 = this.options,\n          tickOpts = _this$options5.ticks,\n          titleOpts = _this$options5.title,\n          gridOpts = _this$options5.grid;\n\n      var display = this._isVisible();\n\n      var isHorizontal = this.isHorizontal();\n\n      if (display) {\n        var titleHeight = getTitleHeight(titleOpts, chart.options.font);\n\n        if (isHorizontal) {\n          minSize.width = this.maxWidth;\n          minSize.height = getTickMarkLength(gridOpts) + titleHeight;\n        } else {\n          minSize.height = this.maxHeight;\n          minSize.width = getTickMarkLength(gridOpts) + titleHeight;\n        }\n\n        if (tickOpts.display && this.ticks.length) {\n          var _this$_getLabelSizes = this._getLabelSizes(),\n              first = _this$_getLabelSizes.first,\n              last = _this$_getLabelSizes.last,\n              widest = _this$_getLabelSizes.widest,\n              highest = _this$_getLabelSizes.highest;\n\n          var tickPadding = tickOpts.padding * 2;\n          var angleRadians = toRadians(this.labelRotation);\n          var cos = Math.cos(angleRadians);\n          var sin = Math.sin(angleRadians);\n\n          if (isHorizontal) {\n            var labelHeight = tickOpts.mirror ? 0 : sin * widest.width + cos * highest.height;\n            minSize.height = Math.min(this.maxHeight, minSize.height + labelHeight + tickPadding);\n          } else {\n            var labelWidth = tickOpts.mirror ? 0 : cos * widest.width + sin * highest.height;\n            minSize.width = Math.min(this.maxWidth, minSize.width + labelWidth + tickPadding);\n          }\n\n          this._calculatePadding(first, last, sin, cos);\n        }\n      }\n\n      this._handleMargins();\n\n      if (isHorizontal) {\n        this.width = this._length = chart.width - this._margins.left - this._margins.right;\n        this.height = minSize.height;\n      } else {\n        this.width = minSize.width;\n        this.height = this._length = chart.height - this._margins.top - this._margins.bottom;\n      }\n    }\n  }, {\n    key: \"_calculatePadding\",\n    value: function _calculatePadding(first, last, sin, cos) {\n      var _this$options6 = this.options,\n          _this$options6$ticks = _this$options6.ticks,\n          align = _this$options6$ticks.align,\n          padding = _this$options6$ticks.padding,\n          position = _this$options6.position;\n      var isRotated = this.labelRotation !== 0;\n      var labelsBelowTicks = position !== 'top' && this.axis === 'x';\n\n      if (this.isHorizontal()) {\n        var offsetLeft = this.getPixelForTick(0) - this.left;\n        var offsetRight = this.right - this.getPixelForTick(this.ticks.length - 1);\n        var paddingLeft = 0;\n        var paddingRight = 0;\n\n        if (isRotated) {\n          if (labelsBelowTicks) {\n            paddingLeft = cos * first.width;\n            paddingRight = sin * last.height;\n          } else {\n            paddingLeft = sin * first.height;\n            paddingRight = cos * last.width;\n          }\n        } else if (align === 'start') {\n          paddingRight = last.width;\n        } else if (align === 'end') {\n          paddingLeft = first.width;\n        } else if (align !== 'inner') {\n          paddingLeft = first.width / 2;\n          paddingRight = last.width / 2;\n        }\n\n        this.paddingLeft = Math.max((paddingLeft - offsetLeft + padding) * this.width / (this.width - offsetLeft), 0);\n        this.paddingRight = Math.max((paddingRight - offsetRight + padding) * this.width / (this.width - offsetRight), 0);\n      } else {\n        var paddingTop = last.height / 2;\n        var paddingBottom = first.height / 2;\n\n        if (align === 'start') {\n          paddingTop = 0;\n          paddingBottom = first.height;\n        } else if (align === 'end') {\n          paddingTop = last.height;\n          paddingBottom = 0;\n        }\n\n        this.paddingTop = paddingTop + padding;\n        this.paddingBottom = paddingBottom + padding;\n      }\n    }\n  }, {\n    key: \"_handleMargins\",\n    value: function _handleMargins() {\n      if (this._margins) {\n        this._margins.left = Math.max(this.paddingLeft, this._margins.left);\n        this._margins.top = Math.max(this.paddingTop, this._margins.top);\n        this._margins.right = Math.max(this.paddingRight, this._margins.right);\n        this._margins.bottom = Math.max(this.paddingBottom, this._margins.bottom);\n      }\n    }\n  }, {\n    key: \"afterFit\",\n    value: function afterFit() {\n      callback(this.options.afterFit, [this]);\n    }\n  }, {\n    key: \"isHorizontal\",\n    value: function isHorizontal() {\n      var _this$options7 = this.options,\n          axis = _this$options7.axis,\n          position = _this$options7.position;\n      return position === 'top' || position === 'bottom' || axis === 'x';\n    }\n  }, {\n    key: \"isFullSize\",\n    value: function isFullSize() {\n      return this.options.fullSize;\n    }\n  }, {\n    key: \"_convertTicksToLabels\",\n    value: function _convertTicksToLabels(ticks) {\n      this.beforeTickToLabelConversion();\n      this.generateTickLabels(ticks);\n      var i, ilen;\n\n      for (i = 0, ilen = ticks.length; i < ilen; i++) {\n        if (isNullOrUndef(ticks[i].label)) {\n          ticks.splice(i, 1);\n          ilen--;\n          i--;\n        }\n      }\n\n      this.afterTickToLabelConversion();\n    }\n  }, {\n    key: \"_getLabelSizes\",\n    value: function _getLabelSizes() {\n      var labelSizes = this._labelSizes;\n\n      if (!labelSizes) {\n        var sampleSize = this.options.ticks.sampleSize;\n        var ticks = this.ticks;\n\n        if (sampleSize < ticks.length) {\n          ticks = sample(ticks, sampleSize);\n        }\n\n        this._labelSizes = labelSizes = this._computeLabelSizes(ticks, ticks.length, this.options.ticks.maxTicksLimit);\n      }\n\n      return labelSizes;\n    }\n  }, {\n    key: \"_computeLabelSizes\",\n    value: function _computeLabelSizes(ticks, length, maxTicksLimit) {\n      var ctx = this.ctx,\n          caches = this._longestTextCache;\n      var widths = [];\n      var heights = [];\n      var increment = Math.floor(length / getTicksLimit(length, maxTicksLimit));\n      var widestLabelSize = 0;\n      var highestLabelSize = 0;\n      var i, j, jlen, label, tickFont, fontString, cache, lineHeight, width, height, nestedLabel;\n\n      for (i = 0; i < length; i += increment) {\n        label = ticks[i].label;\n        tickFont = this._resolveTickFontOptions(i);\n        ctx.font = fontString = tickFont.string;\n        cache = caches[fontString] = caches[fontString] || {\n          data: {},\n          gc: []\n        };\n        lineHeight = tickFont.lineHeight;\n        width = height = 0;\n\n        if (!isNullOrUndef(label) && !isArray(label)) {\n          width = _measureText(ctx, cache.data, cache.gc, width, label);\n          height = lineHeight;\n        } else if (isArray(label)) {\n          for (j = 0, jlen = label.length; j < jlen; ++j) {\n            nestedLabel = label[j];\n\n            if (!isNullOrUndef(nestedLabel) && !isArray(nestedLabel)) {\n              width = _measureText(ctx, cache.data, cache.gc, width, nestedLabel);\n              height += lineHeight;\n            }\n          }\n        }\n\n        widths.push(width);\n        heights.push(height);\n        widestLabelSize = Math.max(width, widestLabelSize);\n        highestLabelSize = Math.max(height, highestLabelSize);\n      }\n\n      garbageCollect(caches, length);\n      var widest = widths.indexOf(widestLabelSize);\n      var highest = heights.indexOf(highestLabelSize);\n\n      var valueAt = function valueAt(idx) {\n        return {\n          width: widths[idx] || 0,\n          height: heights[idx] || 0\n        };\n      };\n\n      return {\n        first: valueAt(0),\n        last: valueAt(length - 1),\n        widest: valueAt(widest),\n        highest: valueAt(highest),\n        widths: widths,\n        heights: heights\n      };\n    }\n  }, {\n    key: \"getLabelForValue\",\n    value: function getLabelForValue(value) {\n      return value;\n    }\n  }, {\n    key: \"getPixelForValue\",\n    value: function getPixelForValue(value, index) {\n      return NaN;\n    }\n  }, {\n    key: \"getValueForPixel\",\n    value: function getValueForPixel(pixel) {}\n  }, {\n    key: \"getPixelForTick\",\n    value: function getPixelForTick(index) {\n      var ticks = this.ticks;\n\n      if (index < 0 || index > ticks.length - 1) {\n        return null;\n      }\n\n      return this.getPixelForValue(ticks[index].value);\n    }\n  }, {\n    key: \"getPixelForDecimal\",\n    value: function getPixelForDecimal(decimal) {\n      if (this._reversePixels) {\n        decimal = 1 - decimal;\n      }\n\n      var pixel = this._startPixel + decimal * this._length;\n      return _int16Range(this._alignToPixels ? _alignPixel(this.chart, pixel, 0) : pixel);\n    }\n  }, {\n    key: \"getDecimalForPixel\",\n    value: function getDecimalForPixel(pixel) {\n      var decimal = (pixel - this._startPixel) / this._length;\n      return this._reversePixels ? 1 - decimal : decimal;\n    }\n  }, {\n    key: \"getBasePixel\",\n    value: function getBasePixel() {\n      return this.getPixelForValue(this.getBaseValue());\n    }\n  }, {\n    key: \"getBaseValue\",\n    value: function getBaseValue() {\n      var min = this.min,\n          max = this.max;\n      return min < 0 && max < 0 ? max : min > 0 && max > 0 ? min : 0;\n    }\n  }, {\n    key: \"getContext\",\n    value: function getContext(index) {\n      var ticks = this.ticks || [];\n\n      if (index >= 0 && index < ticks.length) {\n        var tick = ticks[index];\n        return tick.$context || (tick.$context = createTickContext(this.getContext(), index, tick));\n      }\n\n      return this.$context || (this.$context = createScaleContext(this.chart.getContext(), this));\n    }\n  }, {\n    key: \"_tickSize\",\n    value: function _tickSize() {\n      var optionTicks = this.options.ticks;\n      var rot = toRadians(this.labelRotation);\n      var cos = Math.abs(Math.cos(rot));\n      var sin = Math.abs(Math.sin(rot));\n\n      var labelSizes = this._getLabelSizes();\n\n      var padding = optionTicks.autoSkipPadding || 0;\n      var w = labelSizes ? labelSizes.widest.width + padding : 0;\n      var h = labelSizes ? labelSizes.highest.height + padding : 0;\n      return this.isHorizontal() ? h * cos > w * sin ? w / cos : h / sin : h * sin < w * cos ? h / cos : w / sin;\n    }\n  }, {\n    key: \"_isVisible\",\n    value: function _isVisible() {\n      var display = this.options.display;\n\n      if (display !== 'auto') {\n        return !!display;\n      }\n\n      return this.getMatchingVisibleMetas().length > 0;\n    }\n  }, {\n    key: \"_computeGridLineItems\",\n    value: function _computeGridLineItems(chartArea) {\n      var axis = this.axis;\n      var chart = this.chart;\n      var options = this.options;\n      var grid = options.grid,\n          position = options.position,\n          border = options.border;\n      var offset = grid.offset;\n      var isHorizontal = this.isHorizontal();\n      var ticks = this.ticks;\n      var ticksLength = ticks.length + (offset ? 1 : 0);\n      var tl = getTickMarkLength(grid);\n      var items = [];\n      var borderOpts = border.setContext(this.getContext());\n      var axisWidth = borderOpts.display ? borderOpts.width : 0;\n      var axisHalfWidth = axisWidth / 2;\n\n      var alignBorderValue = function alignBorderValue(pixel) {\n        return _alignPixel(chart, pixel, axisWidth);\n      };\n\n      var borderValue, i, lineValue, alignedLineValue;\n      var tx1, ty1, tx2, ty2, x1, y1, x2, y2;\n\n      if (position === 'top') {\n        borderValue = alignBorderValue(this.bottom);\n        ty1 = this.bottom - tl;\n        ty2 = borderValue - axisHalfWidth;\n        y1 = alignBorderValue(chartArea.top) + axisHalfWidth;\n        y2 = chartArea.bottom;\n      } else if (position === 'bottom') {\n        borderValue = alignBorderValue(this.top);\n        y1 = chartArea.top;\n        y2 = alignBorderValue(chartArea.bottom) - axisHalfWidth;\n        ty1 = borderValue + axisHalfWidth;\n        ty2 = this.top + tl;\n      } else if (position === 'left') {\n        borderValue = alignBorderValue(this.right);\n        tx1 = this.right - tl;\n        tx2 = borderValue - axisHalfWidth;\n        x1 = alignBorderValue(chartArea.left) + axisHalfWidth;\n        x2 = chartArea.right;\n      } else if (position === 'right') {\n        borderValue = alignBorderValue(this.left);\n        x1 = chartArea.left;\n        x2 = alignBorderValue(chartArea.right) - axisHalfWidth;\n        tx1 = borderValue + axisHalfWidth;\n        tx2 = this.left + tl;\n      } else if (axis === 'x') {\n        if (position === 'center') {\n          borderValue = alignBorderValue((chartArea.top + chartArea.bottom) / 2 + 0.5);\n        } else if (isObject(position)) {\n          var positionAxisID = Object.keys(position)[0];\n          var value = position[positionAxisID];\n          borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n        }\n\n        y1 = chartArea.top;\n        y2 = chartArea.bottom;\n        ty1 = borderValue + axisHalfWidth;\n        ty2 = ty1 + tl;\n      } else if (axis === 'y') {\n        if (position === 'center') {\n          borderValue = alignBorderValue((chartArea.left + chartArea.right) / 2);\n        } else if (isObject(position)) {\n          var _positionAxisID2 = Object.keys(position)[0];\n          var _value2 = position[_positionAxisID2];\n          borderValue = alignBorderValue(this.chart.scales[_positionAxisID2].getPixelForValue(_value2));\n        }\n\n        tx1 = borderValue - axisHalfWidth;\n        tx2 = tx1 - tl;\n        x1 = chartArea.left;\n        x2 = chartArea.right;\n      }\n\n      var limit = valueOrDefault(options.ticks.maxTicksLimit, ticksLength);\n      var step = Math.max(1, Math.ceil(ticksLength / limit));\n\n      for (i = 0; i < ticksLength; i += step) {\n        var context = this.getContext(i);\n        var optsAtIndex = grid.setContext(context);\n        var optsAtIndexBorder = border.setContext(context);\n        var lineWidth = optsAtIndex.lineWidth;\n        var lineColor = optsAtIndex.color;\n        var borderDash = optsAtIndexBorder.dash || [];\n        var borderDashOffset = optsAtIndexBorder.dashOffset;\n        var tickWidth = optsAtIndex.tickWidth;\n        var tickColor = optsAtIndex.tickColor;\n        var tickBorderDash = optsAtIndex.tickBorderDash || [];\n        var tickBorderDashOffset = optsAtIndex.tickBorderDashOffset;\n        lineValue = getPixelForGridLine(this, i, offset);\n\n        if (lineValue === undefined) {\n          continue;\n        }\n\n        alignedLineValue = _alignPixel(chart, lineValue, lineWidth);\n\n        if (isHorizontal) {\n          tx1 = tx2 = x1 = x2 = alignedLineValue;\n        } else {\n          ty1 = ty2 = y1 = y2 = alignedLineValue;\n        }\n\n        items.push({\n          tx1: tx1,\n          ty1: ty1,\n          tx2: tx2,\n          ty2: ty2,\n          x1: x1,\n          y1: y1,\n          x2: x2,\n          y2: y2,\n          width: lineWidth,\n          color: lineColor,\n          borderDash: borderDash,\n          borderDashOffset: borderDashOffset,\n          tickWidth: tickWidth,\n          tickColor: tickColor,\n          tickBorderDash: tickBorderDash,\n          tickBorderDashOffset: tickBorderDashOffset\n        });\n      }\n\n      this._ticksLength = ticksLength;\n      this._borderValue = borderValue;\n      return items;\n    }\n  }, {\n    key: \"_computeLabelItems\",\n    value: function _computeLabelItems(chartArea) {\n      var axis = this.axis;\n      var options = this.options;\n      var position = options.position,\n          optionTicks = options.ticks;\n      var isHorizontal = this.isHorizontal();\n      var ticks = this.ticks;\n      var align = optionTicks.align,\n          crossAlign = optionTicks.crossAlign,\n          padding = optionTicks.padding,\n          mirror = optionTicks.mirror;\n      var tl = getTickMarkLength(options.grid);\n      var tickAndPadding = tl + padding;\n      var hTickAndPadding = mirror ? -padding : tickAndPadding;\n      var rotation = -toRadians(this.labelRotation);\n      var items = [];\n      var i, ilen, tick, label, x, y, textAlign, pixel, font, lineHeight, lineCount, textOffset;\n      var textBaseline = 'middle';\n\n      if (position === 'top') {\n        y = this.bottom - hTickAndPadding;\n        textAlign = this._getXAxisLabelAlignment();\n      } else if (position === 'bottom') {\n        y = this.top + hTickAndPadding;\n        textAlign = this._getXAxisLabelAlignment();\n      } else if (position === 'left') {\n        var ret = this._getYAxisLabelAlignment(tl);\n\n        textAlign = ret.textAlign;\n        x = ret.x;\n      } else if (position === 'right') {\n        var _ret = this._getYAxisLabelAlignment(tl);\n\n        textAlign = _ret.textAlign;\n        x = _ret.x;\n      } else if (axis === 'x') {\n        if (position === 'center') {\n          y = (chartArea.top + chartArea.bottom) / 2 + tickAndPadding;\n        } else if (isObject(position)) {\n          var positionAxisID = Object.keys(position)[0];\n          var value = position[positionAxisID];\n          y = this.chart.scales[positionAxisID].getPixelForValue(value) + tickAndPadding;\n        }\n\n        textAlign = this._getXAxisLabelAlignment();\n      } else if (axis === 'y') {\n        if (position === 'center') {\n          x = (chartArea.left + chartArea.right) / 2 - tickAndPadding;\n        } else if (isObject(position)) {\n          var _positionAxisID3 = Object.keys(position)[0];\n          var _value3 = position[_positionAxisID3];\n          x = this.chart.scales[_positionAxisID3].getPixelForValue(_value3);\n        }\n\n        textAlign = this._getYAxisLabelAlignment(tl).textAlign;\n      }\n\n      if (axis === 'y') {\n        if (align === 'start') {\n          textBaseline = 'top';\n        } else if (align === 'end') {\n          textBaseline = 'bottom';\n        }\n      }\n\n      var labelSizes = this._getLabelSizes();\n\n      for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n        tick = ticks[i];\n        label = tick.label;\n        var optsAtIndex = optionTicks.setContext(this.getContext(i));\n        pixel = this.getPixelForTick(i) + optionTicks.labelOffset;\n        font = this._resolveTickFontOptions(i);\n        lineHeight = font.lineHeight;\n        lineCount = isArray(label) ? label.length : 1;\n        var halfCount = lineCount / 2;\n        var color = optsAtIndex.color;\n        var strokeColor = optsAtIndex.textStrokeColor;\n        var strokeWidth = optsAtIndex.textStrokeWidth;\n        var tickTextAlign = textAlign;\n\n        if (isHorizontal) {\n          x = pixel;\n\n          if (textAlign === 'inner') {\n            if (i === ilen - 1) {\n              tickTextAlign = !this.options.reverse ? 'right' : 'left';\n            } else if (i === 0) {\n              tickTextAlign = !this.options.reverse ? 'left' : 'right';\n            } else {\n              tickTextAlign = 'center';\n            }\n          }\n\n          if (position === 'top') {\n            if (crossAlign === 'near' || rotation !== 0) {\n              textOffset = -lineCount * lineHeight + lineHeight / 2;\n            } else if (crossAlign === 'center') {\n              textOffset = -labelSizes.highest.height / 2 - halfCount * lineHeight + lineHeight;\n            } else {\n              textOffset = -labelSizes.highest.height + lineHeight / 2;\n            }\n          } else {\n            if (crossAlign === 'near' || rotation !== 0) {\n              textOffset = lineHeight / 2;\n            } else if (crossAlign === 'center') {\n              textOffset = labelSizes.highest.height / 2 - halfCount * lineHeight;\n            } else {\n              textOffset = labelSizes.highest.height - lineCount * lineHeight;\n            }\n          }\n\n          if (mirror) {\n            textOffset *= -1;\n          }\n\n          if (rotation !== 0 && !optsAtIndex.showLabelBackdrop) {\n            x += lineHeight / 2 * Math.sin(rotation);\n          }\n        } else {\n          y = pixel;\n          textOffset = (1 - lineCount) * lineHeight / 2;\n        }\n\n        var backdrop = void 0;\n\n        if (optsAtIndex.showLabelBackdrop) {\n          var labelPadding = toPadding(optsAtIndex.backdropPadding);\n          var height = labelSizes.heights[i];\n          var width = labelSizes.widths[i];\n          var top = textOffset - labelPadding.top;\n          var left = 0 - labelPadding.left;\n\n          switch (textBaseline) {\n            case 'middle':\n              top -= height / 2;\n              break;\n\n            case 'bottom':\n              top -= height;\n              break;\n          }\n\n          switch (textAlign) {\n            case 'center':\n              left -= width / 2;\n              break;\n\n            case 'right':\n              left -= width;\n              break;\n\n            case 'inner':\n              if (i === ilen - 1) {\n                left -= width;\n              } else if (i > 0) {\n                left -= width / 2;\n              }\n\n              break;\n          }\n\n          backdrop = {\n            left: left,\n            top: top,\n            width: width + labelPadding.width,\n            height: height + labelPadding.height,\n            color: optsAtIndex.backdropColor\n          };\n        }\n\n        items.push({\n          label: label,\n          font: font,\n          textOffset: textOffset,\n          options: {\n            rotation: rotation,\n            color: color,\n            strokeColor: strokeColor,\n            strokeWidth: strokeWidth,\n            textAlign: tickTextAlign,\n            textBaseline: textBaseline,\n            translation: [x, y],\n            backdrop: backdrop\n          }\n        });\n      }\n\n      return items;\n    }\n  }, {\n    key: \"_getXAxisLabelAlignment\",\n    value: function _getXAxisLabelAlignment() {\n      var _this$options8 = this.options,\n          position = _this$options8.position,\n          ticks = _this$options8.ticks;\n      var rotation = -toRadians(this.labelRotation);\n\n      if (rotation) {\n        return position === 'top' ? 'left' : 'right';\n      }\n\n      var align = 'center';\n\n      if (ticks.align === 'start') {\n        align = 'left';\n      } else if (ticks.align === 'end') {\n        align = 'right';\n      } else if (ticks.align === 'inner') {\n        align = 'inner';\n      }\n\n      return align;\n    }\n  }, {\n    key: \"_getYAxisLabelAlignment\",\n    value: function _getYAxisLabelAlignment(tl) {\n      var _this$options9 = this.options,\n          position = _this$options9.position,\n          _this$options9$ticks = _this$options9.ticks,\n          crossAlign = _this$options9$ticks.crossAlign,\n          mirror = _this$options9$ticks.mirror,\n          padding = _this$options9$ticks.padding;\n\n      var labelSizes = this._getLabelSizes();\n\n      var tickAndPadding = tl + padding;\n      var widest = labelSizes.widest.width;\n      var textAlign;\n      var x;\n\n      if (position === 'left') {\n        if (mirror) {\n          x = this.right + padding;\n\n          if (crossAlign === 'near') {\n            textAlign = 'left';\n          } else if (crossAlign === 'center') {\n            textAlign = 'center';\n            x += widest / 2;\n          } else {\n            textAlign = 'right';\n            x += widest;\n          }\n        } else {\n          x = this.right - tickAndPadding;\n\n          if (crossAlign === 'near') {\n            textAlign = 'right';\n          } else if (crossAlign === 'center') {\n            textAlign = 'center';\n            x -= widest / 2;\n          } else {\n            textAlign = 'left';\n            x = this.left;\n          }\n        }\n      } else if (position === 'right') {\n        if (mirror) {\n          x = this.left + padding;\n\n          if (crossAlign === 'near') {\n            textAlign = 'right';\n          } else if (crossAlign === 'center') {\n            textAlign = 'center';\n            x -= widest / 2;\n          } else {\n            textAlign = 'left';\n            x -= widest;\n          }\n        } else {\n          x = this.left + tickAndPadding;\n\n          if (crossAlign === 'near') {\n            textAlign = 'left';\n          } else if (crossAlign === 'center') {\n            textAlign = 'center';\n            x += widest / 2;\n          } else {\n            textAlign = 'right';\n            x = this.right;\n          }\n        }\n      } else {\n        textAlign = 'right';\n      }\n\n      return {\n        textAlign: textAlign,\n        x: x\n      };\n    }\n  }, {\n    key: \"_computeLabelArea\",\n    value: function _computeLabelArea() {\n      if (this.options.ticks.mirror) {\n        return;\n      }\n\n      var chart = this.chart;\n      var position = this.options.position;\n\n      if (position === 'left' || position === 'right') {\n        return {\n          top: 0,\n          left: this.left,\n          bottom: chart.height,\n          right: this.right\n        };\n      }\n\n      if (position === 'top' || position === 'bottom') {\n        return {\n          top: this.top,\n          left: 0,\n          bottom: this.bottom,\n          right: chart.width\n        };\n      }\n    }\n  }, {\n    key: \"drawBackground\",\n    value: function drawBackground() {\n      var ctx = this.ctx,\n          backgroundColor = this.options.backgroundColor,\n          left = this.left,\n          top = this.top,\n          width = this.width,\n          height = this.height;\n\n      if (backgroundColor) {\n        ctx.save();\n        ctx.fillStyle = backgroundColor;\n        ctx.fillRect(left, top, width, height);\n        ctx.restore();\n      }\n    }\n  }, {\n    key: \"getLineWidthForValue\",\n    value: function getLineWidthForValue(value) {\n      var grid = this.options.grid;\n\n      if (!this._isVisible() || !grid.display) {\n        return 0;\n      }\n\n      var ticks = this.ticks;\n      var index = ticks.findIndex(function (t) {\n        return t.value === value;\n      });\n\n      if (index >= 0) {\n        var opts = grid.setContext(this.getContext(index));\n        return opts.lineWidth;\n      }\n\n      return 0;\n    }\n  }, {\n    key: \"drawGrid\",\n    value: function drawGrid(chartArea) {\n      var grid = this.options.grid;\n      var ctx = this.ctx;\n\n      var items = this._gridLineItems || (this._gridLineItems = this._computeGridLineItems(chartArea));\n\n      var i, ilen;\n\n      var drawLine = function drawLine(p1, p2, style) {\n        if (!style.width || !style.color) {\n          return;\n        }\n\n        ctx.save();\n        ctx.lineWidth = style.width;\n        ctx.strokeStyle = style.color;\n        ctx.setLineDash(style.borderDash || []);\n        ctx.lineDashOffset = style.borderDashOffset;\n        ctx.beginPath();\n        ctx.moveTo(p1.x, p1.y);\n        ctx.lineTo(p2.x, p2.y);\n        ctx.stroke();\n        ctx.restore();\n      };\n\n      if (grid.display) {\n        for (i = 0, ilen = items.length; i < ilen; ++i) {\n          var item = items[i];\n\n          if (grid.drawOnChartArea) {\n            drawLine({\n              x: item.x1,\n              y: item.y1\n            }, {\n              x: item.x2,\n              y: item.y2\n            }, item);\n          }\n\n          if (grid.drawTicks) {\n            drawLine({\n              x: item.tx1,\n              y: item.ty1\n            }, {\n              x: item.tx2,\n              y: item.ty2\n            }, {\n              color: item.tickColor,\n              width: item.tickWidth,\n              borderDash: item.tickBorderDash,\n              borderDashOffset: item.tickBorderDashOffset\n            });\n          }\n        }\n      }\n    }\n  }, {\n    key: \"drawBorder\",\n    value: function drawBorder() {\n      var chart = this.chart,\n          ctx = this.ctx,\n          _this$options10 = this.options,\n          border = _this$options10.border,\n          grid = _this$options10.grid;\n      var borderOpts = border.setContext(this.getContext());\n      var axisWidth = border.display ? borderOpts.width : 0;\n\n      if (!axisWidth) {\n        return;\n      }\n\n      var lastLineWidth = grid.setContext(this.getContext(0)).lineWidth;\n      var borderValue = this._borderValue;\n      var x1, x2, y1, y2;\n\n      if (this.isHorizontal()) {\n        x1 = _alignPixel(chart, this.left, axisWidth) - axisWidth / 2;\n        x2 = _alignPixel(chart, this.right, lastLineWidth) + lastLineWidth / 2;\n        y1 = y2 = borderValue;\n      } else {\n        y1 = _alignPixel(chart, this.top, axisWidth) - axisWidth / 2;\n        y2 = _alignPixel(chart, this.bottom, lastLineWidth) + lastLineWidth / 2;\n        x1 = x2 = borderValue;\n      }\n\n      ctx.save();\n      ctx.lineWidth = borderOpts.width;\n      ctx.strokeStyle = borderOpts.color;\n      ctx.beginPath();\n      ctx.moveTo(x1, y1);\n      ctx.lineTo(x2, y2);\n      ctx.stroke();\n      ctx.restore();\n    }\n  }, {\n    key: \"drawLabels\",\n    value: function drawLabels(chartArea) {\n      var optionTicks = this.options.ticks;\n\n      if (!optionTicks.display) {\n        return;\n      }\n\n      var ctx = this.ctx;\n\n      var area = this._computeLabelArea();\n\n      if (area) {\n        clipArea(ctx, area);\n      }\n\n      var items = this.getLabelItems(chartArea);\n\n      var _iterator11 = _createForOfIteratorHelper(items),\n          _step11;\n\n      try {\n        for (_iterator11.s(); !(_step11 = _iterator11.n()).done;) {\n          var item = _step11.value;\n          var renderTextOptions = item.options;\n          var tickFont = item.font;\n          var label = item.label;\n          var y = item.textOffset;\n          renderText(ctx, label, 0, y, tickFont, renderTextOptions);\n        }\n      } catch (err) {\n        _iterator11.e(err);\n      } finally {\n        _iterator11.f();\n      }\n\n      if (area) {\n        unclipArea(ctx);\n      }\n    }\n  }, {\n    key: \"drawTitle\",\n    value: function drawTitle() {\n      var ctx = this.ctx,\n          _this$options11 = this.options,\n          position = _this$options11.position,\n          title = _this$options11.title,\n          reverse = _this$options11.reverse;\n\n      if (!title.display) {\n        return;\n      }\n\n      var font = toFont(title.font);\n      var padding = toPadding(title.padding);\n      var align = title.align;\n      var offset = font.lineHeight / 2;\n\n      if (position === 'bottom' || position === 'center' || isObject(position)) {\n        offset += padding.bottom;\n\n        if (isArray(title.text)) {\n          offset += font.lineHeight * (title.text.length - 1);\n        }\n      } else {\n        offset += padding.top;\n      }\n\n      var _titleArgs = titleArgs(this, offset, position, align),\n          titleX = _titleArgs.titleX,\n          titleY = _titleArgs.titleY,\n          maxWidth = _titleArgs.maxWidth,\n          rotation = _titleArgs.rotation;\n\n      renderText(ctx, title.text, 0, 0, font, {\n        color: title.color,\n        maxWidth: maxWidth,\n        rotation: rotation,\n        textAlign: titleAlign(align, position, reverse),\n        textBaseline: 'middle',\n        translation: [titleX, titleY]\n      });\n    }\n  }, {\n    key: \"draw\",\n    value: function draw(chartArea) {\n      if (!this._isVisible()) {\n        return;\n      }\n\n      this.drawBackground();\n      this.drawGrid(chartArea);\n      this.drawBorder();\n      this.drawTitle();\n      this.drawLabels(chartArea);\n    }\n  }, {\n    key: \"_layers\",\n    value: function _layers() {\n      var _this10 = this;\n\n      var opts = this.options;\n      var tz = opts.ticks && opts.ticks.z || 0;\n      var gz = valueOrDefault(opts.grid && opts.grid.z, -1);\n      var bz = valueOrDefault(opts.border && opts.border.z, 0);\n\n      if (!this._isVisible() || this.draw !== Scale.prototype.draw) {\n        return [{\n          z: tz,\n          draw: function draw(chartArea) {\n            _this10.draw(chartArea);\n          }\n        }];\n      }\n\n      return [{\n        z: gz,\n        draw: function draw(chartArea) {\n          _this10.drawBackground();\n\n          _this10.drawGrid(chartArea);\n\n          _this10.drawTitle();\n        }\n      }, {\n        z: bz,\n        draw: function draw() {\n          _this10.drawBorder();\n        }\n      }, {\n        z: tz,\n        draw: function draw(chartArea) {\n          _this10.drawLabels(chartArea);\n        }\n      }];\n    }\n  }, {\n    key: \"getMatchingVisibleMetas\",\n    value: function getMatchingVisibleMetas(type) {\n      var metas = this.chart.getSortedVisibleDatasetMetas();\n      var axisID = this.axis + 'AxisID';\n      var result = [];\n      var i, ilen;\n\n      for (i = 0, ilen = metas.length; i < ilen; ++i) {\n        var meta = metas[i];\n\n        if (meta[axisID] === this.id && (!type || meta.type === type)) {\n          result.push(meta);\n        }\n      }\n\n      return result;\n    }\n  }, {\n    key: \"_resolveTickFontOptions\",\n    value: function _resolveTickFontOptions(index) {\n      var opts = this.options.ticks.setContext(this.getContext(index));\n      return toFont(opts.font);\n    }\n  }, {\n    key: \"_maxDigits\",\n    value: function _maxDigits() {\n      var fontSize = this._resolveTickFontOptions(0).lineHeight;\n\n      return (this.isHorizontal() ? this.width : this.height) / fontSize;\n    }\n  }]);\n\n  return Scale;\n}(Element);\n\nvar TypedRegistry = /*#__PURE__*/function () {\n  function TypedRegistry(type, scope, override) {\n    _classCallCheck(this, TypedRegistry);\n\n    this.type = type;\n    this.scope = scope;\n    this.override = override;\n    this.items = Object.create(null);\n  }\n\n  _createClass(TypedRegistry, [{\n    key: \"isForType\",\n    value: function isForType(type) {\n      return Object.prototype.isPrototypeOf.call(this.type.prototype, type.prototype);\n    }\n  }, {\n    key: \"register\",\n    value: function register(item) {\n      var proto = Object.getPrototypeOf(item);\n      var parentScope;\n\n      if (isIChartComponent(proto)) {\n        parentScope = this.register(proto);\n      }\n\n      var items = this.items;\n      var id = item.id;\n      var scope = this.scope + '.' + id;\n\n      if (!id) {\n        throw new Error('class does not have id: ' + item);\n      }\n\n      if (id in items) {\n        return scope;\n      }\n\n      items[id] = item;\n      registerDefaults(item, scope, parentScope);\n\n      if (this.override) {\n        defaults.override(item.id, item.overrides);\n      }\n\n      return scope;\n    }\n  }, {\n    key: \"get\",\n    value: function get(id) {\n      return this.items[id];\n    }\n  }, {\n    key: \"unregister\",\n    value: function unregister(item) {\n      var items = this.items;\n      var id = item.id;\n      var scope = this.scope;\n\n      if (id in items) {\n        delete items[id];\n      }\n\n      if (scope && id in defaults[scope]) {\n        delete defaults[scope][id];\n\n        if (this.override) {\n          delete overrides[id];\n        }\n      }\n    }\n  }]);\n\n  return TypedRegistry;\n}();\n\nfunction registerDefaults(item, scope, parentScope) {\n  var itemDefaults = merge(Object.create(null), [parentScope ? defaults.get(parentScope) : {}, defaults.get(scope), item.defaults]);\n  defaults.set(scope, itemDefaults);\n\n  if (item.defaultRoutes) {\n    routeDefaults(scope, item.defaultRoutes);\n  }\n\n  if (item.descriptors) {\n    defaults.describe(scope, item.descriptors);\n  }\n}\n\nfunction routeDefaults(scope, routes) {\n  Object.keys(routes).forEach(function (property) {\n    var propertyParts = property.split('.');\n    var sourceName = propertyParts.pop();\n    var sourceScope = [scope].concat(propertyParts).join('.');\n    var parts = routes[property].split('.');\n    var targetName = parts.pop();\n    var targetScope = parts.join('.');\n    defaults.route(sourceScope, sourceName, targetScope, targetName);\n  });\n}\n\nfunction isIChartComponent(proto) {\n  return 'id' in proto && 'defaults' in proto;\n}\n\nvar Registry = /*#__PURE__*/function () {\n  function Registry() {\n    _classCallCheck(this, Registry);\n\n    this.controllers = new TypedRegistry(DatasetController, 'datasets', true);\n    this.elements = new TypedRegistry(Element, 'elements');\n    this.plugins = new TypedRegistry(Object, 'plugins');\n    this.scales = new TypedRegistry(Scale, 'scales');\n    this._typedRegistries = [this.controllers, this.scales, this.elements];\n  }\n\n  _createClass(Registry, [{\n    key: \"add\",\n    value: function add() {\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      this._each('register', args);\n    }\n  }, {\n    key: \"remove\",\n    value: function remove() {\n      for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        args[_key2] = arguments[_key2];\n      }\n\n      this._each('unregister', args);\n    }\n  }, {\n    key: \"addControllers\",\n    value: function addControllers() {\n      for (var _len3 = arguments.length, args = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n        args[_key3] = arguments[_key3];\n      }\n\n      this._each('register', args, this.controllers);\n    }\n  }, {\n    key: \"addElements\",\n    value: function addElements() {\n      for (var _len4 = arguments.length, args = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {\n        args[_key4] = arguments[_key4];\n      }\n\n      this._each('register', args, this.elements);\n    }\n  }, {\n    key: \"addPlugins\",\n    value: function addPlugins() {\n      for (var _len5 = arguments.length, args = new Array(_len5), _key5 = 0; _key5 < _len5; _key5++) {\n        args[_key5] = arguments[_key5];\n      }\n\n      this._each('register', args, this.plugins);\n    }\n  }, {\n    key: \"addScales\",\n    value: function addScales() {\n      for (var _len6 = arguments.length, args = new Array(_len6), _key6 = 0; _key6 < _len6; _key6++) {\n        args[_key6] = arguments[_key6];\n      }\n\n      this._each('register', args, this.scales);\n    }\n  }, {\n    key: \"getController\",\n    value: function getController(id) {\n      return this._get(id, this.controllers, 'controller');\n    }\n  }, {\n    key: \"getElement\",\n    value: function getElement(id) {\n      return this._get(id, this.elements, 'element');\n    }\n  }, {\n    key: \"getPlugin\",\n    value: function getPlugin(id) {\n      return this._get(id, this.plugins, 'plugin');\n    }\n  }, {\n    key: \"getScale\",\n    value: function getScale(id) {\n      return this._get(id, this.scales, 'scale');\n    }\n  }, {\n    key: \"removeControllers\",\n    value: function removeControllers() {\n      for (var _len7 = arguments.length, args = new Array(_len7), _key7 = 0; _key7 < _len7; _key7++) {\n        args[_key7] = arguments[_key7];\n      }\n\n      this._each('unregister', args, this.controllers);\n    }\n  }, {\n    key: \"removeElements\",\n    value: function removeElements() {\n      for (var _len8 = arguments.length, args = new Array(_len8), _key8 = 0; _key8 < _len8; _key8++) {\n        args[_key8] = arguments[_key8];\n      }\n\n      this._each('unregister', args, this.elements);\n    }\n  }, {\n    key: \"removePlugins\",\n    value: function removePlugins() {\n      for (var _len9 = arguments.length, args = new Array(_len9), _key9 = 0; _key9 < _len9; _key9++) {\n        args[_key9] = arguments[_key9];\n      }\n\n      this._each('unregister', args, this.plugins);\n    }\n  }, {\n    key: \"removeScales\",\n    value: function removeScales() {\n      for (var _len10 = arguments.length, args = new Array(_len10), _key10 = 0; _key10 < _len10; _key10++) {\n        args[_key10] = arguments[_key10];\n      }\n\n      this._each('unregister', args, this.scales);\n    }\n  }, {\n    key: \"_each\",\n    value: function _each(method, args, typedRegistry) {\n      var _this11 = this;\n\n      _toConsumableArray(args).forEach(function (arg) {\n        var reg = typedRegistry || _this11._getRegistryForType(arg);\n\n        if (typedRegistry || reg.isForType(arg) || reg === _this11.plugins && arg.id) {\n          _this11._exec(method, reg, arg);\n        } else {\n          each(arg, function (item) {\n            var itemReg = typedRegistry || _this11._getRegistryForType(item);\n\n            _this11._exec(method, itemReg, item);\n          });\n        }\n      });\n    }\n  }, {\n    key: \"_exec\",\n    value: function _exec(method, registry, component) {\n      var camelMethod = _capitalize(method);\n\n      callback(component['before' + camelMethod], [], component);\n      registry[method](component);\n      callback(component['after' + camelMethod], [], component);\n    }\n  }, {\n    key: \"_getRegistryForType\",\n    value: function _getRegistryForType(type) {\n      for (var i = 0; i < this._typedRegistries.length; i++) {\n        var reg = this._typedRegistries[i];\n\n        if (reg.isForType(type)) {\n          return reg;\n        }\n      }\n\n      return this.plugins;\n    }\n  }, {\n    key: \"_get\",\n    value: function _get(id, typedRegistry, type) {\n      var item = typedRegistry.get(id);\n\n      if (item === undefined) {\n        throw new Error('\"' + id + '\" is not a registered ' + type + '.');\n      }\n\n      return item;\n    }\n  }]);\n\n  return Registry;\n}();\n\nvar registry = /* #__PURE__ */new Registry();\n\nvar PluginService = /*#__PURE__*/function () {\n  function PluginService() {\n    _classCallCheck(this, PluginService);\n\n    this._init = [];\n  }\n\n  _createClass(PluginService, [{\n    key: \"notify\",\n    value: function notify(chart, hook, args, filter) {\n      if (hook === 'beforeInit') {\n        this._init = this._createDescriptors(chart, true);\n\n        this._notify(this._init, chart, 'install');\n      }\n\n      var descriptors = filter ? this._descriptors(chart).filter(filter) : this._descriptors(chart);\n\n      var result = this._notify(descriptors, chart, hook, args);\n\n      if (hook === 'afterDestroy') {\n        this._notify(descriptors, chart, 'stop');\n\n        this._notify(this._init, chart, 'uninstall');\n      }\n\n      return result;\n    }\n  }, {\n    key: \"_notify\",\n    value: function _notify(descriptors, chart, hook, args) {\n      args = args || {};\n\n      var _iterator12 = _createForOfIteratorHelper(descriptors),\n          _step12;\n\n      try {\n        for (_iterator12.s(); !(_step12 = _iterator12.n()).done;) {\n          var descriptor = _step12.value;\n          var plugin = descriptor.plugin;\n          var method = plugin[hook];\n          var params = [chart, args, descriptor.options];\n\n          if (callback(method, params, plugin) === false && args.cancelable) {\n            return false;\n          }\n        }\n      } catch (err) {\n        _iterator12.e(err);\n      } finally {\n        _iterator12.f();\n      }\n\n      return true;\n    }\n  }, {\n    key: \"invalidate\",\n    value: function invalidate() {\n      if (!isNullOrUndef(this._cache)) {\n        this._oldCache = this._cache;\n        this._cache = undefined;\n      }\n    }\n  }, {\n    key: \"_descriptors\",\n    value: function _descriptors(chart) {\n      if (this._cache) {\n        return this._cache;\n      }\n\n      var descriptors = this._cache = this._createDescriptors(chart);\n\n      this._notifyStateChanges(chart);\n\n      return descriptors;\n    }\n  }, {\n    key: \"_createDescriptors\",\n    value: function _createDescriptors(chart, all) {\n      var config = chart && chart.config;\n      var options = valueOrDefault(config.options && config.options.plugins, {});\n      var plugins = allPlugins(config);\n      return options === false && !all ? [] : createDescriptors(chart, plugins, options, all);\n    }\n  }, {\n    key: \"_notifyStateChanges\",\n    value: function _notifyStateChanges(chart) {\n      var previousDescriptors = this._oldCache || [];\n      var descriptors = this._cache;\n\n      var diff = function diff(a, b) {\n        return a.filter(function (x) {\n          return !b.some(function (y) {\n            return x.plugin.id === y.plugin.id;\n          });\n        });\n      };\n\n      this._notify(diff(previousDescriptors, descriptors), chart, 'stop');\n\n      this._notify(diff(descriptors, previousDescriptors), chart, 'start');\n    }\n  }]);\n\n  return PluginService;\n}();\n\nfunction allPlugins(config) {\n  var localIds = {};\n  var plugins = [];\n  var keys = Object.keys(registry.plugins.items);\n\n  for (var i = 0; i < keys.length; i++) {\n    plugins.push(registry.getPlugin(keys[i]));\n  }\n\n  var local = config.plugins || [];\n\n  for (var _i = 0; _i < local.length; _i++) {\n    var plugin = local[_i];\n\n    if (plugins.indexOf(plugin) === -1) {\n      plugins.push(plugin);\n      localIds[plugin.id] = true;\n    }\n  }\n\n  return {\n    plugins: plugins,\n    localIds: localIds\n  };\n}\n\nfunction getOpts(options, all) {\n  if (!all && options === false) {\n    return null;\n  }\n\n  if (options === true) {\n    return {};\n  }\n\n  return options;\n}\n\nfunction createDescriptors(chart, _ref2, options, all) {\n  var plugins = _ref2.plugins,\n      localIds = _ref2.localIds;\n  var result = [];\n  var context = chart.getContext();\n\n  var _iterator13 = _createForOfIteratorHelper(plugins),\n      _step13;\n\n  try {\n    for (_iterator13.s(); !(_step13 = _iterator13.n()).done;) {\n      var plugin = _step13.value;\n      var id = plugin.id;\n      var opts = getOpts(options[id], all);\n\n      if (opts === null) {\n        continue;\n      }\n\n      result.push({\n        plugin: plugin,\n        options: pluginOpts(chart.config, {\n          plugin: plugin,\n          local: localIds[id]\n        }, opts, context)\n      });\n    }\n  } catch (err) {\n    _iterator13.e(err);\n  } finally {\n    _iterator13.f();\n  }\n\n  return result;\n}\n\nfunction pluginOpts(config, _ref3, opts, context) {\n  var plugin = _ref3.plugin,\n      local = _ref3.local;\n  var keys = config.pluginScopeKeys(plugin);\n  var scopes = config.getOptionScopes(opts, keys);\n\n  if (local && plugin.defaults) {\n    scopes.push(plugin.defaults);\n  }\n\n  return config.createResolver(scopes, context, [''], {\n    scriptable: false,\n    indexable: false,\n    allKeys: true\n  });\n}\n\nfunction getIndexAxis(type, options) {\n  var datasetDefaults = defaults.datasets[type] || {};\n  var datasetOptions = (options.datasets || {})[type] || {};\n  return datasetOptions.indexAxis || options.indexAxis || datasetDefaults.indexAxis || 'x';\n}\n\nfunction getAxisFromDefaultScaleID(id, indexAxis) {\n  var axis = id;\n\n  if (id === '_index_') {\n    axis = indexAxis;\n  } else if (id === '_value_') {\n    axis = indexAxis === 'x' ? 'y' : 'x';\n  }\n\n  return axis;\n}\n\nfunction getDefaultScaleIDFromAxis(axis, indexAxis) {\n  return axis === indexAxis ? '_index_' : '_value_';\n}\n\nfunction idMatchesAxis(id) {\n  if (id === 'x' || id === 'y' || id === 'r') {\n    return id;\n  }\n}\n\nfunction axisFromPosition(position) {\n  if (position === 'top' || position === 'bottom') {\n    return 'x';\n  }\n\n  if (position === 'left' || position === 'right') {\n    return 'y';\n  }\n}\n\nfunction determineAxis(id) {\n  if (idMatchesAxis(id)) {\n    return id;\n  }\n\n  for (var _len11 = arguments.length, scaleOptions = new Array(_len11 > 1 ? _len11 - 1 : 0), _key11 = 1; _key11 < _len11; _key11++) {\n    scaleOptions[_key11 - 1] = arguments[_key11];\n  }\n\n  for (var _i2 = 0, _scaleOptions = scaleOptions; _i2 < _scaleOptions.length; _i2++) {\n    var opts = _scaleOptions[_i2];\n    var axis = opts.axis || axisFromPosition(opts.position) || id.length > 1 && idMatchesAxis(id[0].toLowerCase());\n\n    if (axis) {\n      return axis;\n    }\n  }\n\n  throw new Error(\"Cannot determine type of '\".concat(id, \"' axis. Please provide 'axis' or 'position' option.\"));\n}\n\nfunction getAxisFromDataset(id, axis, dataset) {\n  if (dataset[axis + 'AxisID'] === id) {\n    return {\n      axis: axis\n    };\n  }\n}\n\nfunction retrieveAxisFromDatasets(id, config) {\n  if (config.data && config.data.datasets) {\n    var boundDs = config.data.datasets.filter(function (d) {\n      return d.xAxisID === id || d.yAxisID === id;\n    });\n\n    if (boundDs.length) {\n      return getAxisFromDataset(id, 'x', boundDs[0]) || getAxisFromDataset(id, 'y', boundDs[0]);\n    }\n  }\n\n  return {};\n}\n\nfunction mergeScaleConfig(config, options) {\n  var chartDefaults = overrides[config.type] || {\n    scales: {}\n  };\n  var configScales = options.scales || {};\n  var chartIndexAxis = getIndexAxis(config.type, options);\n  var scales = Object.create(null);\n  Object.keys(configScales).forEach(function (id) {\n    var scaleConf = configScales[id];\n\n    if (!isObject(scaleConf)) {\n      return console.error(\"Invalid scale configuration for scale: \".concat(id));\n    }\n\n    if (scaleConf._proxy) {\n      return console.warn(\"Ignoring resolver passed as options for scale: \".concat(id));\n    }\n\n    var axis = determineAxis(id, scaleConf, retrieveAxisFromDatasets(id, config), defaults.scales[scaleConf.type]);\n    var defaultId = getDefaultScaleIDFromAxis(axis, chartIndexAxis);\n    var defaultScaleOptions = chartDefaults.scales || {};\n    scales[id] = mergeIf(Object.create(null), [{\n      axis: axis\n    }, scaleConf, defaultScaleOptions[axis], defaultScaleOptions[defaultId]]);\n  });\n  config.data.datasets.forEach(function (dataset) {\n    var type = dataset.type || config.type;\n    var indexAxis = dataset.indexAxis || getIndexAxis(type, options);\n    var datasetDefaults = overrides[type] || {};\n    var defaultScaleOptions = datasetDefaults.scales || {};\n    Object.keys(defaultScaleOptions).forEach(function (defaultID) {\n      var axis = getAxisFromDefaultScaleID(defaultID, indexAxis);\n      var id = dataset[axis + 'AxisID'] || axis;\n      scales[id] = scales[id] || Object.create(null);\n      mergeIf(scales[id], [{\n        axis: axis\n      }, configScales[id], defaultScaleOptions[defaultID]]);\n    });\n  });\n  Object.keys(scales).forEach(function (key) {\n    var scale = scales[key];\n    mergeIf(scale, [defaults.scales[scale.type], defaults.scale]);\n  });\n  return scales;\n}\n\nfunction initOptions(config) {\n  var options = config.options || (config.options = {});\n  options.plugins = valueOrDefault(options.plugins, {});\n  options.scales = mergeScaleConfig(config, options);\n}\n\nfunction initData(data) {\n  data = data || {};\n  data.datasets = data.datasets || [];\n  data.labels = data.labels || [];\n  return data;\n}\n\nfunction initConfig(config) {\n  config = config || {};\n  config.data = initData(config.data);\n  initOptions(config);\n  return config;\n}\n\nvar keyCache = new Map();\nvar keysCached = new Set();\n\nfunction cachedKeys(cacheKey, generate) {\n  var keys = keyCache.get(cacheKey);\n\n  if (!keys) {\n    keys = generate();\n    keyCache.set(cacheKey, keys);\n    keysCached.add(keys);\n  }\n\n  return keys;\n}\n\nvar addIfFound = function addIfFound(set, obj, key) {\n  var opts = resolveObjectKey(obj, key);\n\n  if (opts !== undefined) {\n    set.add(opts);\n  }\n};\n\nvar Config = /*#__PURE__*/function () {\n  function Config(config) {\n    _classCallCheck(this, Config);\n\n    this._config = initConfig(config);\n    this._scopeCache = new Map();\n    this._resolverCache = new Map();\n  }\n\n  _createClass(Config, [{\n    key: \"platform\",\n    get: function get() {\n      return this._config.platform;\n    }\n  }, {\n    key: \"type\",\n    get: function get() {\n      return this._config.type;\n    },\n    set: function set(type) {\n      this._config.type = type;\n    }\n  }, {\n    key: \"data\",\n    get: function get() {\n      return this._config.data;\n    },\n    set: function set(data) {\n      this._config.data = initData(data);\n    }\n  }, {\n    key: \"options\",\n    get: function get() {\n      return this._config.options;\n    },\n    set: function set(options) {\n      this._config.options = options;\n    }\n  }, {\n    key: \"plugins\",\n    get: function get() {\n      return this._config.plugins;\n    }\n  }, {\n    key: \"update\",\n    value: function update() {\n      var config = this._config;\n      this.clearCache();\n      initOptions(config);\n    }\n  }, {\n    key: \"clearCache\",\n    value: function clearCache() {\n      this._scopeCache.clear();\n\n      this._resolverCache.clear();\n    }\n  }, {\n    key: \"datasetScopeKeys\",\n    value: function datasetScopeKeys(datasetType) {\n      return cachedKeys(datasetType, function () {\n        return [[\"datasets.\".concat(datasetType), '']];\n      });\n    }\n  }, {\n    key: \"datasetAnimationScopeKeys\",\n    value: function datasetAnimationScopeKeys(datasetType, transition) {\n      return cachedKeys(\"\".concat(datasetType, \".transition.\").concat(transition), function () {\n        return [[\"datasets.\".concat(datasetType, \".transitions.\").concat(transition), \"transitions.\".concat(transition)], [\"datasets.\".concat(datasetType), '']];\n      });\n    }\n  }, {\n    key: \"datasetElementScopeKeys\",\n    value: function datasetElementScopeKeys(datasetType, elementType) {\n      return cachedKeys(\"\".concat(datasetType, \"-\").concat(elementType), function () {\n        return [[\"datasets.\".concat(datasetType, \".elements.\").concat(elementType), \"datasets.\".concat(datasetType), \"elements.\".concat(elementType), '']];\n      });\n    }\n  }, {\n    key: \"pluginScopeKeys\",\n    value: function pluginScopeKeys(plugin) {\n      var id = plugin.id;\n      var type = this.type;\n      return cachedKeys(\"\".concat(type, \"-plugin-\").concat(id), function () {\n        return [[\"plugins.\".concat(id)].concat(_toConsumableArray(plugin.additionalOptionScopes || []))];\n      });\n    }\n  }, {\n    key: \"_cachedScopes\",\n    value: function _cachedScopes(mainScope, resetCache) {\n      var _scopeCache = this._scopeCache;\n\n      var cache = _scopeCache.get(mainScope);\n\n      if (!cache || resetCache) {\n        cache = new Map();\n\n        _scopeCache.set(mainScope, cache);\n      }\n\n      return cache;\n    }\n  }, {\n    key: \"getOptionScopes\",\n    value: function getOptionScopes(mainScope, keyLists, resetCache) {\n      var options = this.options,\n          type = this.type;\n\n      var cache = this._cachedScopes(mainScope, resetCache);\n\n      var cached = cache.get(keyLists);\n\n      if (cached) {\n        return cached;\n      }\n\n      var scopes = new Set();\n      keyLists.forEach(function (keys) {\n        if (mainScope) {\n          scopes.add(mainScope);\n          keys.forEach(function (key) {\n            return addIfFound(scopes, mainScope, key);\n          });\n        }\n\n        keys.forEach(function (key) {\n          return addIfFound(scopes, options, key);\n        });\n        keys.forEach(function (key) {\n          return addIfFound(scopes, overrides[type] || {}, key);\n        });\n        keys.forEach(function (key) {\n          return addIfFound(scopes, defaults, key);\n        });\n        keys.forEach(function (key) {\n          return addIfFound(scopes, descriptors, key);\n        });\n      });\n      var array = Array.from(scopes);\n\n      if (array.length === 0) {\n        array.push(Object.create(null));\n      }\n\n      if (keysCached.has(keyLists)) {\n        cache.set(keyLists, array);\n      }\n\n      return array;\n    }\n  }, {\n    key: \"chartOptionScopes\",\n    value: function chartOptionScopes() {\n      var options = this.options,\n          type = this.type;\n      return [options, overrides[type] || {}, defaults.datasets[type] || {}, {\n        type: type\n      }, defaults, descriptors];\n    }\n  }, {\n    key: \"resolveNamedOptions\",\n    value: function resolveNamedOptions(scopes, names, context) {\n      var prefixes = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : [''];\n      var result = {\n        $shared: true\n      };\n\n      var _getResolver = getResolver(this._resolverCache, scopes, prefixes),\n          resolver = _getResolver.resolver,\n          subPrefixes = _getResolver.subPrefixes;\n\n      var options = resolver;\n\n      if (needContext(resolver, names)) {\n        result.$shared = false;\n        context = isFunction(context) ? context() : context;\n        var subResolver = this.createResolver(scopes, context, subPrefixes);\n        options = _attachContext(resolver, context, subResolver);\n      }\n\n      var _iterator14 = _createForOfIteratorHelper(names),\n          _step14;\n\n      try {\n        for (_iterator14.s(); !(_step14 = _iterator14.n()).done;) {\n          var prop = _step14.value;\n          result[prop] = options[prop];\n        }\n      } catch (err) {\n        _iterator14.e(err);\n      } finally {\n        _iterator14.f();\n      }\n\n      return result;\n    }\n  }, {\n    key: \"createResolver\",\n    value: function createResolver(scopes, context) {\n      var prefixes = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [''];\n      var descriptorDefaults = arguments.length > 3 ? arguments[3] : undefined;\n\n      var _getResolver2 = getResolver(this._resolverCache, scopes, prefixes),\n          resolver = _getResolver2.resolver;\n\n      return isObject(context) ? _attachContext(resolver, context, undefined, descriptorDefaults) : resolver;\n    }\n  }]);\n\n  return Config;\n}();\n\nfunction getResolver(resolverCache, scopes, prefixes) {\n  var cache = resolverCache.get(scopes);\n\n  if (!cache) {\n    cache = new Map();\n    resolverCache.set(scopes, cache);\n  }\n\n  var cacheKey = prefixes.join();\n  var cached = cache.get(cacheKey);\n\n  if (!cached) {\n    var resolver = _createResolver(scopes, prefixes);\n\n    cached = {\n      resolver: resolver,\n      subPrefixes: prefixes.filter(function (p) {\n        return !p.toLowerCase().includes('hover');\n      })\n    };\n    cache.set(cacheKey, cached);\n  }\n\n  return cached;\n}\n\nvar hasFunction = function hasFunction(value) {\n  return isObject(value) && Object.getOwnPropertyNames(value).some(function (key) {\n    return isFunction(value[key]);\n  });\n};\n\nfunction needContext(proxy, names) {\n  var _descriptors2 = _descriptors(proxy),\n      isScriptable = _descriptors2.isScriptable,\n      isIndexable = _descriptors2.isIndexable;\n\n  var _iterator15 = _createForOfIteratorHelper(names),\n      _step15;\n\n  try {\n    for (_iterator15.s(); !(_step15 = _iterator15.n()).done;) {\n      var prop = _step15.value;\n      var scriptable = isScriptable(prop);\n      var indexable = isIndexable(prop);\n      var value = (indexable || scriptable) && proxy[prop];\n\n      if (scriptable && (isFunction(value) || hasFunction(value)) || indexable && isArray(value)) {\n        return true;\n      }\n    }\n  } catch (err) {\n    _iterator15.e(err);\n  } finally {\n    _iterator15.f();\n  }\n\n  return false;\n}\n\nvar version = \"4.4.4\";\nvar KNOWN_POSITIONS = ['top', 'bottom', 'left', 'right', 'chartArea'];\n\nfunction positionIsHorizontal(position, axis) {\n  return position === 'top' || position === 'bottom' || KNOWN_POSITIONS.indexOf(position) === -1 && axis === 'x';\n}\n\nfunction compare2Level(l1, l2) {\n  return function (a, b) {\n    return a[l1] === b[l1] ? a[l2] - b[l2] : a[l1] - b[l1];\n  };\n}\n\nfunction onAnimationsComplete(context) {\n  var chart = context.chart;\n  var animationOptions = chart.options.animation;\n  chart.notifyPlugins('afterRender');\n  callback(animationOptions && animationOptions.onComplete, [context], chart);\n}\n\nfunction onAnimationProgress(context) {\n  var chart = context.chart;\n  var animationOptions = chart.options.animation;\n  callback(animationOptions && animationOptions.onProgress, [context], chart);\n}\n\nfunction getCanvas(item) {\n  if (_isDomSupported() && typeof item === 'string') {\n    item = document.getElementById(item);\n  } else if (item && item.length) {\n    item = item[0];\n  }\n\n  if (item && item.canvas) {\n    item = item.canvas;\n  }\n\n  return item;\n}\n\nvar instances = {};\n\nvar getChart = function getChart(key) {\n  var canvas = getCanvas(key);\n  return Object.values(instances).filter(function (c) {\n    return c.canvas === canvas;\n  }).pop();\n};\n\nfunction moveNumericKeys(obj, start, move) {\n  var keys = Object.keys(obj);\n\n  for (var _i3 = 0, _keys = keys; _i3 < _keys.length; _i3++) {\n    var key = _keys[_i3];\n    var intKey = +key;\n\n    if (intKey >= start) {\n      var value = obj[key];\n      delete obj[key];\n\n      if (move > 0 || intKey > start) {\n        obj[intKey + move] = value;\n      }\n    }\n  }\n}\n\nfunction determineLastEvent(e, lastEvent, inChartArea, isClick) {\n  if (!inChartArea || e.type === 'mouseout') {\n    return null;\n  }\n\n  if (isClick) {\n    return lastEvent;\n  }\n\n  return e;\n}\n\nfunction getSizeForArea(scale, chartArea, field) {\n  return scale.options.clip ? scale[field] : chartArea[field];\n}\n\nfunction getDatasetArea(meta, chartArea) {\n  var xScale = meta.xScale,\n      yScale = meta.yScale;\n\n  if (xScale && yScale) {\n    return {\n      left: getSizeForArea(xScale, chartArea, 'left'),\n      right: getSizeForArea(xScale, chartArea, 'right'),\n      top: getSizeForArea(yScale, chartArea, 'top'),\n      bottom: getSizeForArea(yScale, chartArea, 'bottom')\n    };\n  }\n\n  return chartArea;\n}\n\nvar Chart = /*#__PURE__*/function () {\n  function Chart(item, userConfig) {\n    var _this12 = this;\n\n    _classCallCheck(this, Chart);\n\n    var config = this.config = new Config(userConfig);\n    var initialCanvas = getCanvas(item);\n    var existingChart = getChart(initialCanvas);\n\n    if (existingChart) {\n      throw new Error('Canvas is already in use. Chart with ID \\'' + existingChart.id + '\\'' + ' must be destroyed before the canvas with ID \\'' + existingChart.canvas.id + '\\' can be reused.');\n    }\n\n    var options = config.createResolver(config.chartOptionScopes(), this.getContext());\n    this.platform = new (config.platform || _detectPlatform(initialCanvas))();\n    this.platform.updateConfig(config);\n    var context = this.platform.acquireContext(initialCanvas, options.aspectRatio);\n    var canvas = context && context.canvas;\n    var height = canvas && canvas.height;\n    var width = canvas && canvas.width;\n    this.id = uid();\n    this.ctx = context;\n    this.canvas = canvas;\n    this.width = width;\n    this.height = height;\n    this._options = options;\n    this._aspectRatio = this.aspectRatio;\n    this._layers = [];\n    this._metasets = [];\n    this._stacks = undefined;\n    this.boxes = [];\n    this.currentDevicePixelRatio = undefined;\n    this.chartArea = undefined;\n    this._active = [];\n    this._lastEvent = undefined;\n    this._listeners = {};\n    this._responsiveListeners = undefined;\n    this._sortedMetasets = [];\n    this.scales = {};\n    this._plugins = new PluginService();\n    this.$proxies = {};\n    this._hiddenIndices = {};\n    this.attached = false;\n    this._animationsDisabled = undefined;\n    this.$context = undefined;\n    this._doResize = debounce(function (mode) {\n      return _this12.update(mode);\n    }, options.resizeDelay || 0);\n    this._dataChanges = [];\n    instances[this.id] = this;\n\n    if (!context || !canvas) {\n      console.error(\"Failed to create chart: can't acquire context from the given item\");\n      return;\n    }\n\n    animator.listen(this, 'complete', onAnimationsComplete);\n    animator.listen(this, 'progress', onAnimationProgress);\n\n    this._initialize();\n\n    if (this.attached) {\n      this.update();\n    }\n  }\n\n  _createClass(Chart, [{\n    key: \"aspectRatio\",\n    get: function get() {\n      var _this$options12 = this.options,\n          aspectRatio = _this$options12.aspectRatio,\n          maintainAspectRatio = _this$options12.maintainAspectRatio,\n          width = this.width,\n          height = this.height,\n          _aspectRatio = this._aspectRatio;\n\n      if (!isNullOrUndef(aspectRatio)) {\n        return aspectRatio;\n      }\n\n      if (maintainAspectRatio && _aspectRatio) {\n        return _aspectRatio;\n      }\n\n      return height ? width / height : null;\n    }\n  }, {\n    key: \"data\",\n    get: function get() {\n      return this.config.data;\n    },\n    set: function set(data) {\n      this.config.data = data;\n    }\n  }, {\n    key: \"options\",\n    get: function get() {\n      return this._options;\n    },\n    set: function set(options) {\n      this.config.options = options;\n    }\n  }, {\n    key: \"registry\",\n    get: function get() {\n      return registry;\n    }\n  }, {\n    key: \"_initialize\",\n    value: function _initialize() {\n      this.notifyPlugins('beforeInit');\n\n      if (this.options.responsive) {\n        this.resize();\n      } else {\n        retinaScale(this, this.options.devicePixelRatio);\n      }\n\n      this.bindEvents();\n      this.notifyPlugins('afterInit');\n      return this;\n    }\n  }, {\n    key: \"clear\",\n    value: function clear() {\n      clearCanvas(this.canvas, this.ctx);\n      return this;\n    }\n  }, {\n    key: \"stop\",\n    value: function stop() {\n      animator.stop(this);\n      return this;\n    }\n  }, {\n    key: \"resize\",\n    value: function resize(width, height) {\n      if (!animator.running(this)) {\n        this._resize(width, height);\n      } else {\n        this._resizeBeforeDraw = {\n          width: width,\n          height: height\n        };\n      }\n    }\n  }, {\n    key: \"_resize\",\n    value: function _resize(width, height) {\n      var options = this.options;\n      var canvas = this.canvas;\n      var aspectRatio = options.maintainAspectRatio && this.aspectRatio;\n      var newSize = this.platform.getMaximumSize(canvas, width, height, aspectRatio);\n      var newRatio = options.devicePixelRatio || this.platform.getDevicePixelRatio();\n      var mode = this.width ? 'resize' : 'attach';\n      this.width = newSize.width;\n      this.height = newSize.height;\n      this._aspectRatio = this.aspectRatio;\n\n      if (!retinaScale(this, newRatio, true)) {\n        return;\n      }\n\n      this.notifyPlugins('resize', {\n        size: newSize\n      });\n      callback(options.onResize, [this, newSize], this);\n\n      if (this.attached) {\n        if (this._doResize(mode)) {\n          this.render();\n        }\n      }\n    }\n  }, {\n    key: \"ensureScalesHaveIDs\",\n    value: function ensureScalesHaveIDs() {\n      var options = this.options;\n      var scalesOptions = options.scales || {};\n      each(scalesOptions, function (axisOptions, axisID) {\n        axisOptions.id = axisID;\n      });\n    }\n  }, {\n    key: \"buildOrUpdateScales\",\n    value: function buildOrUpdateScales() {\n      var _this13 = this;\n\n      var options = this.options;\n      var scaleOpts = options.scales;\n      var scales = this.scales;\n      var updated = Object.keys(scales).reduce(function (obj, id) {\n        obj[id] = false;\n        return obj;\n      }, {});\n      var items = [];\n\n      if (scaleOpts) {\n        items = items.concat(Object.keys(scaleOpts).map(function (id) {\n          var scaleOptions = scaleOpts[id];\n          var axis = determineAxis(id, scaleOptions);\n          var isRadial = axis === 'r';\n          var isHorizontal = axis === 'x';\n          return {\n            options: scaleOptions,\n            dposition: isRadial ? 'chartArea' : isHorizontal ? 'bottom' : 'left',\n            dtype: isRadial ? 'radialLinear' : isHorizontal ? 'category' : 'linear'\n          };\n        }));\n      }\n\n      each(items, function (item) {\n        var scaleOptions = item.options;\n        var id = scaleOptions.id;\n        var axis = determineAxis(id, scaleOptions);\n        var scaleType = valueOrDefault(scaleOptions.type, item.dtype);\n\n        if (scaleOptions.position === undefined || positionIsHorizontal(scaleOptions.position, axis) !== positionIsHorizontal(item.dposition)) {\n          scaleOptions.position = item.dposition;\n        }\n\n        updated[id] = true;\n        var scale = null;\n\n        if (id in scales && scales[id].type === scaleType) {\n          scale = scales[id];\n        } else {\n          var scaleClass = registry.getScale(scaleType);\n          scale = new scaleClass({\n            id: id,\n            type: scaleType,\n            ctx: _this13.ctx,\n            chart: _this13\n          });\n          scales[scale.id] = scale;\n        }\n\n        scale.init(scaleOptions, options);\n      });\n      each(updated, function (hasUpdated, id) {\n        if (!hasUpdated) {\n          delete scales[id];\n        }\n      });\n      each(scales, function (scale) {\n        layouts.configure(_this13, scale, scale.options);\n        layouts.addBox(_this13, scale);\n      });\n    }\n  }, {\n    key: \"_updateMetasets\",\n    value: function _updateMetasets() {\n      var metasets = this._metasets;\n      var numData = this.data.datasets.length;\n      var numMeta = metasets.length;\n      metasets.sort(function (a, b) {\n        return a.index - b.index;\n      });\n\n      if (numMeta > numData) {\n        for (var i = numData; i < numMeta; ++i) {\n          this._destroyDatasetMeta(i);\n        }\n\n        metasets.splice(numData, numMeta - numData);\n      }\n\n      this._sortedMetasets = metasets.slice(0).sort(compare2Level('order', 'index'));\n    }\n  }, {\n    key: \"_removeUnreferencedMetasets\",\n    value: function _removeUnreferencedMetasets() {\n      var _this14 = this;\n\n      var metasets = this._metasets,\n          datasets = this.data.datasets;\n\n      if (metasets.length > datasets.length) {\n        delete this._stacks;\n      }\n\n      metasets.forEach(function (meta, index) {\n        if (datasets.filter(function (x) {\n          return x === meta._dataset;\n        }).length === 0) {\n          _this14._destroyDatasetMeta(index);\n        }\n      });\n    }\n  }, {\n    key: \"buildOrUpdateControllers\",\n    value: function buildOrUpdateControllers() {\n      var newControllers = [];\n      var datasets = this.data.datasets;\n      var i, ilen;\n\n      this._removeUnreferencedMetasets();\n\n      for (i = 0, ilen = datasets.length; i < ilen; i++) {\n        var dataset = datasets[i];\n        var meta = this.getDatasetMeta(i);\n        var type = dataset.type || this.config.type;\n\n        if (meta.type && meta.type !== type) {\n          this._destroyDatasetMeta(i);\n\n          meta = this.getDatasetMeta(i);\n        }\n\n        meta.type = type;\n        meta.indexAxis = dataset.indexAxis || getIndexAxis(type, this.options);\n        meta.order = dataset.order || 0;\n        meta.index = i;\n        meta.label = '' + dataset.label;\n        meta.visible = this.isDatasetVisible(i);\n\n        if (meta.controller) {\n          meta.controller.updateIndex(i);\n          meta.controller.linkScales();\n        } else {\n          var ControllerClass = registry.getController(type);\n          var _defaults$datasets$ty = defaults.datasets[type],\n              datasetElementType = _defaults$datasets$ty.datasetElementType,\n              dataElementType = _defaults$datasets$ty.dataElementType;\n          Object.assign(ControllerClass, {\n            dataElementType: registry.getElement(dataElementType),\n            datasetElementType: datasetElementType && registry.getElement(datasetElementType)\n          });\n          meta.controller = new ControllerClass(this, i);\n          newControllers.push(meta.controller);\n        }\n      }\n\n      this._updateMetasets();\n\n      return newControllers;\n    }\n  }, {\n    key: \"_resetElements\",\n    value: function _resetElements() {\n      var _this15 = this;\n\n      each(this.data.datasets, function (dataset, datasetIndex) {\n        _this15.getDatasetMeta(datasetIndex).controller.reset();\n      }, this);\n    }\n  }, {\n    key: \"reset\",\n    value: function reset() {\n      this._resetElements();\n\n      this.notifyPlugins('reset');\n    }\n  }, {\n    key: \"update\",\n    value: function update(mode) {\n      var config = this.config;\n      config.update();\n      var options = this._options = config.createResolver(config.chartOptionScopes(), this.getContext());\n      var animsDisabled = this._animationsDisabled = !options.animation;\n\n      this._updateScales();\n\n      this._checkEventBindings();\n\n      this._updateHiddenIndices();\n\n      this._plugins.invalidate();\n\n      if (this.notifyPlugins('beforeUpdate', {\n        mode: mode,\n        cancelable: true\n      }) === false) {\n        return;\n      }\n\n      var newControllers = this.buildOrUpdateControllers();\n      this.notifyPlugins('beforeElementsUpdate');\n      var minPadding = 0;\n\n      for (var i = 0, ilen = this.data.datasets.length; i < ilen; i++) {\n        var _this$getDatasetMeta = this.getDatasetMeta(i),\n            controller = _this$getDatasetMeta.controller;\n\n        var reset = !animsDisabled && newControllers.indexOf(controller) === -1;\n        controller.buildOrUpdateElements(reset);\n        minPadding = Math.max(+controller.getMaxOverflow(), minPadding);\n      }\n\n      minPadding = this._minPadding = options.layout.autoPadding ? minPadding : 0;\n\n      this._updateLayout(minPadding);\n\n      if (!animsDisabled) {\n        each(newControllers, function (controller) {\n          controller.reset();\n        });\n      }\n\n      this._updateDatasets(mode);\n\n      this.notifyPlugins('afterUpdate', {\n        mode: mode\n      });\n\n      this._layers.sort(compare2Level('z', '_idx'));\n\n      var _active = this._active,\n          _lastEvent = this._lastEvent;\n\n      if (_lastEvent) {\n        this._eventHandler(_lastEvent, true);\n      } else if (_active.length) {\n        this._updateHoverStyles(_active, _active, true);\n      }\n\n      this.render();\n    }\n  }, {\n    key: \"_updateScales\",\n    value: function _updateScales() {\n      var _this16 = this;\n\n      each(this.scales, function (scale) {\n        layouts.removeBox(_this16, scale);\n      });\n      this.ensureScalesHaveIDs();\n      this.buildOrUpdateScales();\n    }\n  }, {\n    key: \"_checkEventBindings\",\n    value: function _checkEventBindings() {\n      var options = this.options;\n      var existingEvents = new Set(Object.keys(this._listeners));\n      var newEvents = new Set(options.events);\n\n      if (!setsEqual(existingEvents, newEvents) || !!this._responsiveListeners !== options.responsive) {\n        this.unbindEvents();\n        this.bindEvents();\n      }\n    }\n  }, {\n    key: \"_updateHiddenIndices\",\n    value: function _updateHiddenIndices() {\n      var _hiddenIndices = this._hiddenIndices;\n      var changes = this._getUniformDataChanges() || [];\n\n      var _iterator16 = _createForOfIteratorHelper(changes),\n          _step16;\n\n      try {\n        for (_iterator16.s(); !(_step16 = _iterator16.n()).done;) {\n          var _step16$value = _step16.value,\n              method = _step16$value.method,\n              start = _step16$value.start,\n              count = _step16$value.count;\n          var move = method === '_removeElements' ? -count : count;\n          moveNumericKeys(_hiddenIndices, start, move);\n        }\n      } catch (err) {\n        _iterator16.e(err);\n      } finally {\n        _iterator16.f();\n      }\n    }\n  }, {\n    key: \"_getUniformDataChanges\",\n    value: function _getUniformDataChanges() {\n      var _dataChanges = this._dataChanges;\n\n      if (!_dataChanges || !_dataChanges.length) {\n        return;\n      }\n\n      this._dataChanges = [];\n      var datasetCount = this.data.datasets.length;\n\n      var makeSet = function makeSet(idx) {\n        return new Set(_dataChanges.filter(function (c) {\n          return c[0] === idx;\n        }).map(function (c, i) {\n          return i + ',' + c.splice(1).join(',');\n        }));\n      };\n\n      var changeSet = makeSet(0);\n\n      for (var i = 1; i < datasetCount; i++) {\n        if (!setsEqual(changeSet, makeSet(i))) {\n          return;\n        }\n      }\n\n      return Array.from(changeSet).map(function (c) {\n        return c.split(',');\n      }).map(function (a) {\n        return {\n          method: a[1],\n          start: +a[2],\n          count: +a[3]\n        };\n      });\n    }\n  }, {\n    key: \"_updateLayout\",\n    value: function _updateLayout(minPadding) {\n      var _this17 = this;\n\n      if (this.notifyPlugins('beforeLayout', {\n        cancelable: true\n      }) === false) {\n        return;\n      }\n\n      layouts.update(this, this.width, this.height, minPadding);\n      var area = this.chartArea;\n      var noArea = area.width <= 0 || area.height <= 0;\n      this._layers = [];\n      each(this.boxes, function (box) {\n        var _this17$_layers;\n\n        if (noArea && box.position === 'chartArea') {\n          return;\n        }\n\n        if (box.configure) {\n          box.configure();\n        }\n\n        (_this17$_layers = _this17._layers).push.apply(_this17$_layers, _toConsumableArray(box._layers()));\n      }, this);\n\n      this._layers.forEach(function (item, index) {\n        item._idx = index;\n      });\n\n      this.notifyPlugins('afterLayout');\n    }\n  }, {\n    key: \"_updateDatasets\",\n    value: function _updateDatasets(mode) {\n      if (this.notifyPlugins('beforeDatasetsUpdate', {\n        mode: mode,\n        cancelable: true\n      }) === false) {\n        return;\n      }\n\n      for (var i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n        this.getDatasetMeta(i).controller.configure();\n      }\n\n      for (var _i4 = 0, _ilen = this.data.datasets.length; _i4 < _ilen; ++_i4) {\n        this._updateDataset(_i4, isFunction(mode) ? mode({\n          datasetIndex: _i4\n        }) : mode);\n      }\n\n      this.notifyPlugins('afterDatasetsUpdate', {\n        mode: mode\n      });\n    }\n  }, {\n    key: \"_updateDataset\",\n    value: function _updateDataset(index, mode) {\n      var meta = this.getDatasetMeta(index);\n      var args = {\n        meta: meta,\n        index: index,\n        mode: mode,\n        cancelable: true\n      };\n\n      if (this.notifyPlugins('beforeDatasetUpdate', args) === false) {\n        return;\n      }\n\n      meta.controller._update(mode);\n\n      args.cancelable = false;\n      this.notifyPlugins('afterDatasetUpdate', args);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      if (this.notifyPlugins('beforeRender', {\n        cancelable: true\n      }) === false) {\n        return;\n      }\n\n      if (animator.has(this)) {\n        if (this.attached && !animator.running(this)) {\n          animator.start(this);\n        }\n      } else {\n        this.draw();\n        onAnimationsComplete({\n          chart: this\n        });\n      }\n    }\n  }, {\n    key: \"draw\",\n    value: function draw() {\n      var i;\n\n      if (this._resizeBeforeDraw) {\n        var _this$_resizeBeforeDr = this._resizeBeforeDraw,\n            width = _this$_resizeBeforeDr.width,\n            height = _this$_resizeBeforeDr.height;\n        this._resizeBeforeDraw = null;\n\n        this._resize(width, height);\n      }\n\n      this.clear();\n\n      if (this.width <= 0 || this.height <= 0) {\n        return;\n      }\n\n      if (this.notifyPlugins('beforeDraw', {\n        cancelable: true\n      }) === false) {\n        return;\n      }\n\n      var layers = this._layers;\n\n      for (i = 0; i < layers.length && layers[i].z <= 0; ++i) {\n        layers[i].draw(this.chartArea);\n      }\n\n      this._drawDatasets();\n\n      for (; i < layers.length; ++i) {\n        layers[i].draw(this.chartArea);\n      }\n\n      this.notifyPlugins('afterDraw');\n    }\n  }, {\n    key: \"_getSortedDatasetMetas\",\n    value: function _getSortedDatasetMetas(filterVisible) {\n      var metasets = this._sortedMetasets;\n      var result = [];\n      var i, ilen;\n\n      for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n        var meta = metasets[i];\n\n        if (!filterVisible || meta.visible) {\n          result.push(meta);\n        }\n      }\n\n      return result;\n    }\n  }, {\n    key: \"getSortedVisibleDatasetMetas\",\n    value: function getSortedVisibleDatasetMetas() {\n      return this._getSortedDatasetMetas(true);\n    }\n  }, {\n    key: \"_drawDatasets\",\n    value: function _drawDatasets() {\n      if (this.notifyPlugins('beforeDatasetsDraw', {\n        cancelable: true\n      }) === false) {\n        return;\n      }\n\n      var metasets = this.getSortedVisibleDatasetMetas();\n\n      for (var i = metasets.length - 1; i >= 0; --i) {\n        this._drawDataset(metasets[i]);\n      }\n\n      this.notifyPlugins('afterDatasetsDraw');\n    }\n  }, {\n    key: \"_drawDataset\",\n    value: function _drawDataset(meta) {\n      var ctx = this.ctx;\n      var clip = meta._clip;\n      var useClip = !clip.disabled;\n      var area = getDatasetArea(meta, this.chartArea);\n      var args = {\n        meta: meta,\n        index: meta.index,\n        cancelable: true\n      };\n\n      if (this.notifyPlugins('beforeDatasetDraw', args) === false) {\n        return;\n      }\n\n      if (useClip) {\n        clipArea(ctx, {\n          left: clip.left === false ? 0 : area.left - clip.left,\n          right: clip.right === false ? this.width : area.right + clip.right,\n          top: clip.top === false ? 0 : area.top - clip.top,\n          bottom: clip.bottom === false ? this.height : area.bottom + clip.bottom\n        });\n      }\n\n      meta.controller.draw();\n\n      if (useClip) {\n        unclipArea(ctx);\n      }\n\n      args.cancelable = false;\n      this.notifyPlugins('afterDatasetDraw', args);\n    }\n  }, {\n    key: \"isPointInArea\",\n    value: function isPointInArea(point) {\n      return _isPointInArea(point, this.chartArea, this._minPadding);\n    }\n  }, {\n    key: \"getElementsAtEventForMode\",\n    value: function getElementsAtEventForMode(e, mode, options, useFinalPosition) {\n      var method = Interaction.modes[mode];\n\n      if (typeof method === 'function') {\n        return method(this, e, options, useFinalPosition);\n      }\n\n      return [];\n    }\n  }, {\n    key: \"getDatasetMeta\",\n    value: function getDatasetMeta(datasetIndex) {\n      var dataset = this.data.datasets[datasetIndex];\n      var metasets = this._metasets;\n      var meta = metasets.filter(function (x) {\n        return x && x._dataset === dataset;\n      }).pop();\n\n      if (!meta) {\n        meta = {\n          type: null,\n          data: [],\n          dataset: null,\n          controller: null,\n          hidden: null,\n          xAxisID: null,\n          yAxisID: null,\n          order: dataset && dataset.order || 0,\n          index: datasetIndex,\n          _dataset: dataset,\n          _parsed: [],\n          _sorted: false\n        };\n        metasets.push(meta);\n      }\n\n      return meta;\n    }\n  }, {\n    key: \"getContext\",\n    value: function getContext() {\n      return this.$context || (this.$context = createContext(null, {\n        chart: this,\n        type: 'chart'\n      }));\n    }\n  }, {\n    key: \"getVisibleDatasetCount\",\n    value: function getVisibleDatasetCount() {\n      return this.getSortedVisibleDatasetMetas().length;\n    }\n  }, {\n    key: \"isDatasetVisible\",\n    value: function isDatasetVisible(datasetIndex) {\n      var dataset = this.data.datasets[datasetIndex];\n\n      if (!dataset) {\n        return false;\n      }\n\n      var meta = this.getDatasetMeta(datasetIndex);\n      return typeof meta.hidden === 'boolean' ? !meta.hidden : !dataset.hidden;\n    }\n  }, {\n    key: \"setDatasetVisibility\",\n    value: function setDatasetVisibility(datasetIndex, visible) {\n      var meta = this.getDatasetMeta(datasetIndex);\n      meta.hidden = !visible;\n    }\n  }, {\n    key: \"toggleDataVisibility\",\n    value: function toggleDataVisibility(index) {\n      this._hiddenIndices[index] = !this._hiddenIndices[index];\n    }\n  }, {\n    key: \"getDataVisibility\",\n    value: function getDataVisibility(index) {\n      return !this._hiddenIndices[index];\n    }\n  }, {\n    key: \"_updateVisibility\",\n    value: function _updateVisibility(datasetIndex, dataIndex, visible) {\n      var mode = visible ? 'show' : 'hide';\n      var meta = this.getDatasetMeta(datasetIndex);\n\n      var anims = meta.controller._resolveAnimations(undefined, mode);\n\n      if (defined(dataIndex)) {\n        meta.data[dataIndex].hidden = !visible;\n        this.update();\n      } else {\n        this.setDatasetVisibility(datasetIndex, visible);\n        anims.update(meta, {\n          visible: visible\n        });\n        this.update(function (ctx) {\n          return ctx.datasetIndex === datasetIndex ? mode : undefined;\n        });\n      }\n    }\n  }, {\n    key: \"hide\",\n    value: function hide(datasetIndex, dataIndex) {\n      this._updateVisibility(datasetIndex, dataIndex, false);\n    }\n  }, {\n    key: \"show\",\n    value: function show(datasetIndex, dataIndex) {\n      this._updateVisibility(datasetIndex, dataIndex, true);\n    }\n  }, {\n    key: \"_destroyDatasetMeta\",\n    value: function _destroyDatasetMeta(datasetIndex) {\n      var meta = this._metasets[datasetIndex];\n\n      if (meta && meta.controller) {\n        meta.controller._destroy();\n      }\n\n      delete this._metasets[datasetIndex];\n    }\n  }, {\n    key: \"_stop\",\n    value: function _stop() {\n      var i, ilen;\n      this.stop();\n      animator.remove(this);\n\n      for (i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n        this._destroyDatasetMeta(i);\n      }\n    }\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      this.notifyPlugins('beforeDestroy');\n      var canvas = this.canvas,\n          ctx = this.ctx;\n\n      this._stop();\n\n      this.config.clearCache();\n\n      if (canvas) {\n        this.unbindEvents();\n        clearCanvas(canvas, ctx);\n        this.platform.releaseContext(ctx);\n        this.canvas = null;\n        this.ctx = null;\n      }\n\n      delete instances[this.id];\n      this.notifyPlugins('afterDestroy');\n    }\n  }, {\n    key: \"toBase64Image\",\n    value: function toBase64Image() {\n      var _this$canvas;\n\n      return (_this$canvas = this.canvas).toDataURL.apply(_this$canvas, arguments);\n    }\n  }, {\n    key: \"bindEvents\",\n    value: function bindEvents() {\n      this.bindUserEvents();\n\n      if (this.options.responsive) {\n        this.bindResponsiveEvents();\n      } else {\n        this.attached = true;\n      }\n    }\n  }, {\n    key: \"bindUserEvents\",\n    value: function bindUserEvents() {\n      var _this18 = this;\n\n      var listeners = this._listeners;\n      var platform = this.platform;\n\n      var _add = function _add(type, listener) {\n        platform.addEventListener(_this18, type, listener);\n        listeners[type] = listener;\n      };\n\n      var listener = function listener(e, x, y) {\n        e.offsetX = x;\n        e.offsetY = y;\n\n        _this18._eventHandler(e);\n      };\n\n      each(this.options.events, function (type) {\n        return _add(type, listener);\n      });\n    }\n  }, {\n    key: \"bindResponsiveEvents\",\n    value: function bindResponsiveEvents() {\n      var _this19 = this;\n\n      if (!this._responsiveListeners) {\n        this._responsiveListeners = {};\n      }\n\n      var listeners = this._responsiveListeners;\n      var platform = this.platform;\n\n      var _add = function _add(type, listener) {\n        platform.addEventListener(_this19, type, listener);\n        listeners[type] = listener;\n      };\n\n      var _remove = function _remove(type, listener) {\n        if (listeners[type]) {\n          platform.removeEventListener(_this19, type, listener);\n          delete listeners[type];\n        }\n      };\n\n      var listener = function listener(width, height) {\n        if (_this19.canvas) {\n          _this19.resize(width, height);\n        }\n      };\n\n      var detached;\n\n      var attached = function attached() {\n        _remove('attach', attached);\n\n        _this19.attached = true;\n\n        _this19.resize();\n\n        _add('resize', listener);\n\n        _add('detach', detached);\n      };\n\n      detached = function detached() {\n        _this19.attached = false;\n\n        _remove('resize', listener);\n\n        _this19._stop();\n\n        _this19._resize(0, 0);\n\n        _add('attach', attached);\n      };\n\n      if (platform.isAttached(this.canvas)) {\n        attached();\n      } else {\n        detached();\n      }\n    }\n  }, {\n    key: \"unbindEvents\",\n    value: function unbindEvents() {\n      var _this20 = this;\n\n      each(this._listeners, function (listener, type) {\n        _this20.platform.removeEventListener(_this20, type, listener);\n      });\n      this._listeners = {};\n      each(this._responsiveListeners, function (listener, type) {\n        _this20.platform.removeEventListener(_this20, type, listener);\n      });\n      this._responsiveListeners = undefined;\n    }\n  }, {\n    key: \"updateHoverStyle\",\n    value: function updateHoverStyle(items, mode, enabled) {\n      var prefix = enabled ? 'set' : 'remove';\n      var meta, item, i, ilen;\n\n      if (mode === 'dataset') {\n        meta = this.getDatasetMeta(items[0].datasetIndex);\n        meta.controller['_' + prefix + 'DatasetHoverStyle']();\n      }\n\n      for (i = 0, ilen = items.length; i < ilen; ++i) {\n        item = items[i];\n        var controller = item && this.getDatasetMeta(item.datasetIndex).controller;\n\n        if (controller) {\n          controller[prefix + 'HoverStyle'](item.element, item.datasetIndex, item.index);\n        }\n      }\n    }\n  }, {\n    key: \"getActiveElements\",\n    value: function getActiveElements() {\n      return this._active || [];\n    }\n  }, {\n    key: \"setActiveElements\",\n    value: function setActiveElements(activeElements) {\n      var _this21 = this;\n\n      var lastActive = this._active || [];\n      var active = activeElements.map(function (_ref4) {\n        var datasetIndex = _ref4.datasetIndex,\n            index = _ref4.index;\n\n        var meta = _this21.getDatasetMeta(datasetIndex);\n\n        if (!meta) {\n          throw new Error('No dataset found at index ' + datasetIndex);\n        }\n\n        return {\n          datasetIndex: datasetIndex,\n          element: meta.data[index],\n          index: index\n        };\n      });\n      var changed = !_elementsEqual(active, lastActive);\n\n      if (changed) {\n        this._active = active;\n        this._lastEvent = null;\n\n        this._updateHoverStyles(active, lastActive);\n      }\n    }\n  }, {\n    key: \"notifyPlugins\",\n    value: function notifyPlugins(hook, args, filter) {\n      return this._plugins.notify(this, hook, args, filter);\n    }\n  }, {\n    key: \"isPluginEnabled\",\n    value: function isPluginEnabled(pluginId) {\n      return this._plugins._cache.filter(function (p) {\n        return p.plugin.id === pluginId;\n      }).length === 1;\n    }\n  }, {\n    key: \"_updateHoverStyles\",\n    value: function _updateHoverStyles(active, lastActive, replay) {\n      var hoverOptions = this.options.hover;\n\n      var diff = function diff(a, b) {\n        return a.filter(function (x) {\n          return !b.some(function (y) {\n            return x.datasetIndex === y.datasetIndex && x.index === y.index;\n          });\n        });\n      };\n\n      var deactivated = diff(lastActive, active);\n      var activated = replay ? active : diff(active, lastActive);\n\n      if (deactivated.length) {\n        this.updateHoverStyle(deactivated, hoverOptions.mode, false);\n      }\n\n      if (activated.length && hoverOptions.mode) {\n        this.updateHoverStyle(activated, hoverOptions.mode, true);\n      }\n    }\n  }, {\n    key: \"_eventHandler\",\n    value: function _eventHandler(e, replay) {\n      var _this22 = this;\n\n      var args = {\n        event: e,\n        replay: replay,\n        cancelable: true,\n        inChartArea: this.isPointInArea(e)\n      };\n\n      var eventFilter = function eventFilter(plugin) {\n        return (plugin.options.events || _this22.options.events).includes(e.native.type);\n      };\n\n      if (this.notifyPlugins('beforeEvent', args, eventFilter) === false) {\n        return;\n      }\n\n      var changed = this._handleEvent(e, replay, args.inChartArea);\n\n      args.cancelable = false;\n      this.notifyPlugins('afterEvent', args, eventFilter);\n\n      if (changed || args.changed) {\n        this.render();\n      }\n\n      return this;\n    }\n  }, {\n    key: \"_handleEvent\",\n    value: function _handleEvent(e, replay, inChartArea) {\n      var _this$_active = this._active,\n          lastActive = _this$_active === void 0 ? [] : _this$_active,\n          options = this.options;\n      var useFinalPosition = replay;\n\n      var active = this._getActiveElements(e, lastActive, inChartArea, useFinalPosition);\n\n      var isClick = _isClickEvent(e);\n\n      var lastEvent = determineLastEvent(e, this._lastEvent, inChartArea, isClick);\n\n      if (inChartArea) {\n        this._lastEvent = null;\n        callback(options.onHover, [e, active, this], this);\n\n        if (isClick) {\n          callback(options.onClick, [e, active, this], this);\n        }\n      }\n\n      var changed = !_elementsEqual(active, lastActive);\n\n      if (changed || replay) {\n        this._active = active;\n\n        this._updateHoverStyles(active, lastActive, replay);\n      }\n\n      this._lastEvent = lastEvent;\n      return changed;\n    }\n  }, {\n    key: \"_getActiveElements\",\n    value: function _getActiveElements(e, lastActive, inChartArea, useFinalPosition) {\n      if (e.type === 'mouseout') {\n        return [];\n      }\n\n      if (!inChartArea) {\n        return lastActive;\n      }\n\n      var hoverOptions = this.options.hover;\n      return this.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions, useFinalPosition);\n    }\n  }], [{\n    key: \"register\",\n    value: function register() {\n      registry.add.apply(registry, arguments);\n      invalidatePlugins();\n    }\n  }, {\n    key: \"unregister\",\n    value: function unregister() {\n      registry.remove.apply(registry, arguments);\n      invalidatePlugins();\n    }\n  }]);\n\n  return Chart;\n}();\n\n_defineProperty(Chart, \"defaults\", defaults);\n\n_defineProperty(Chart, \"instances\", instances);\n\n_defineProperty(Chart, \"overrides\", overrides);\n\n_defineProperty(Chart, \"registry\", registry);\n\n_defineProperty(Chart, \"version\", version);\n\n_defineProperty(Chart, \"getChart\", getChart);\n\nfunction invalidatePlugins() {\n  return each(Chart.instances, function (chart) {\n    return chart._plugins.invalidate();\n  });\n}\n\nfunction clipArc(ctx, element, endAngle) {\n  var startAngle = element.startAngle,\n      pixelMargin = element.pixelMargin,\n      x = element.x,\n      y = element.y,\n      outerRadius = element.outerRadius,\n      innerRadius = element.innerRadius;\n  var angleMargin = pixelMargin / outerRadius; // Draw an inner border by clipping the arc and drawing a double-width border\n  // Enlarge the clipping arc by 0.33 pixels to eliminate glitches between borders\n\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, startAngle - angleMargin, endAngle + angleMargin);\n\n  if (innerRadius > pixelMargin) {\n    angleMargin = pixelMargin / innerRadius;\n    ctx.arc(x, y, innerRadius, endAngle + angleMargin, startAngle - angleMargin, true);\n  } else {\n    ctx.arc(x, y, pixelMargin, endAngle + HALF_PI, startAngle - HALF_PI);\n  }\n\n  ctx.closePath();\n  ctx.clip();\n}\n\nfunction toRadiusCorners(value) {\n  return _readValueToProps(value, ['outerStart', 'outerEnd', 'innerStart', 'innerEnd']);\n}\n/**\n * Parse border radius from the provided options\n */\n\n\nfunction parseBorderRadius$1(arc, innerRadius, outerRadius, angleDelta) {\n  var o = toRadiusCorners(arc.options.borderRadius);\n  var halfThickness = (outerRadius - innerRadius) / 2;\n  var innerLimit = Math.min(halfThickness, angleDelta * innerRadius / 2); // Outer limits are complicated. We want to compute the available angular distance at\n  // a radius of outerRadius - borderRadius because for small angular distances, this term limits.\n  // We compute at r = outerRadius - borderRadius because this circle defines the center of the border corners.\n  //\n  // If the borderRadius is large, that value can become negative.\n  // This causes the outer borders to lose their radius entirely, which is rather unexpected. To solve that, if borderRadius > outerRadius\n  // we know that the thickness term will dominate and compute the limits at that point\n\n  var computeOuterLimit = function computeOuterLimit(val) {\n    var outerArcLimit = (outerRadius - Math.min(halfThickness, val)) * angleDelta / 2;\n    return _limitValue(val, 0, Math.min(halfThickness, outerArcLimit));\n  };\n\n  return {\n    outerStart: computeOuterLimit(o.outerStart),\n    outerEnd: computeOuterLimit(o.outerEnd),\n    innerStart: _limitValue(o.innerStart, 0, innerLimit),\n    innerEnd: _limitValue(o.innerEnd, 0, innerLimit)\n  };\n}\n/**\n * Convert (r, 𝜃) to (x, y)\n */\n\n\nfunction rThetaToXY(r, theta, x, y) {\n  return {\n    x: x + r * Math.cos(theta),\n    y: y + r * Math.sin(theta)\n  };\n}\n/**\n * Path the arc, respecting border radius by separating into left and right halves.\n *\n *   Start      End\n *\n *    1--->a--->2    Outer\n *   /           \\\n *   8           3\n *   |           |\n *   |           |\n *   7           4\n *   \\           /\n *    6<---b<---5    Inner\n */\n\n\nfunction pathArc(ctx, element, offset, spacing, end, circular) {\n  var x = element.x,\n      y = element.y,\n      start = element.startAngle,\n      pixelMargin = element.pixelMargin,\n      innerR = element.innerRadius;\n  var outerRadius = Math.max(element.outerRadius + spacing + offset - pixelMargin, 0);\n  var innerRadius = innerR > 0 ? innerR + spacing + offset + pixelMargin : 0;\n  var spacingOffset = 0;\n  var alpha = end - start;\n\n  if (spacing) {\n    // When spacing is present, it is the same for all items\n    // So we adjust the start and end angle of the arc such that\n    // the distance is the same as it would be without the spacing\n    var noSpacingInnerRadius = innerR > 0 ? innerR - spacing : 0;\n    var noSpacingOuterRadius = outerRadius > 0 ? outerRadius - spacing : 0;\n    var avNogSpacingRadius = (noSpacingInnerRadius + noSpacingOuterRadius) / 2;\n    var adjustedAngle = avNogSpacingRadius !== 0 ? alpha * avNogSpacingRadius / (avNogSpacingRadius + spacing) : alpha;\n    spacingOffset = (alpha - adjustedAngle) / 2;\n  }\n\n  var beta = Math.max(0.001, alpha * outerRadius - offset / PI) / outerRadius;\n  var angleOffset = (alpha - beta) / 2;\n  var startAngle = start + angleOffset + spacingOffset;\n  var endAngle = end - angleOffset - spacingOffset;\n\n  var _parseBorderRadius$ = parseBorderRadius$1(element, innerRadius, outerRadius, endAngle - startAngle),\n      outerStart = _parseBorderRadius$.outerStart,\n      outerEnd = _parseBorderRadius$.outerEnd,\n      innerStart = _parseBorderRadius$.innerStart,\n      innerEnd = _parseBorderRadius$.innerEnd;\n\n  var outerStartAdjustedRadius = outerRadius - outerStart;\n  var outerEndAdjustedRadius = outerRadius - outerEnd;\n  var outerStartAdjustedAngle = startAngle + outerStart / outerStartAdjustedRadius;\n  var outerEndAdjustedAngle = endAngle - outerEnd / outerEndAdjustedRadius;\n  var innerStartAdjustedRadius = innerRadius + innerStart;\n  var innerEndAdjustedRadius = innerRadius + innerEnd;\n  var innerStartAdjustedAngle = startAngle + innerStart / innerStartAdjustedRadius;\n  var innerEndAdjustedAngle = endAngle - innerEnd / innerEndAdjustedRadius;\n  ctx.beginPath();\n\n  if (circular) {\n    // The first arc segments from point 1 to point a to point 2\n    var outerMidAdjustedAngle = (outerStartAdjustedAngle + outerEndAdjustedAngle) / 2;\n    ctx.arc(x, y, outerRadius, outerStartAdjustedAngle, outerMidAdjustedAngle);\n    ctx.arc(x, y, outerRadius, outerMidAdjustedAngle, outerEndAdjustedAngle); // The corner segment from point 2 to point 3\n\n    if (outerEnd > 0) {\n      var pCenter = rThetaToXY(outerEndAdjustedRadius, outerEndAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, outerEnd, outerEndAdjustedAngle, endAngle + HALF_PI);\n    } // The line from point 3 to point 4\n\n\n    var p4 = rThetaToXY(innerEndAdjustedRadius, endAngle, x, y);\n    ctx.lineTo(p4.x, p4.y); // The corner segment from point 4 to point 5\n\n    if (innerEnd > 0) {\n      var _pCenter = rThetaToXY(innerEndAdjustedRadius, innerEndAdjustedAngle, x, y);\n\n      ctx.arc(_pCenter.x, _pCenter.y, innerEnd, endAngle + HALF_PI, innerEndAdjustedAngle + Math.PI);\n    } // The inner arc from point 5 to point b to point 6\n\n\n    var innerMidAdjustedAngle = (endAngle - innerEnd / innerRadius + (startAngle + innerStart / innerRadius)) / 2;\n    ctx.arc(x, y, innerRadius, endAngle - innerEnd / innerRadius, innerMidAdjustedAngle, true);\n    ctx.arc(x, y, innerRadius, innerMidAdjustedAngle, startAngle + innerStart / innerRadius, true); // The corner segment from point 6 to point 7\n\n    if (innerStart > 0) {\n      var _pCenter2 = rThetaToXY(innerStartAdjustedRadius, innerStartAdjustedAngle, x, y);\n\n      ctx.arc(_pCenter2.x, _pCenter2.y, innerStart, innerStartAdjustedAngle + Math.PI, startAngle - HALF_PI);\n    } // The line from point 7 to point 8\n\n\n    var p8 = rThetaToXY(outerStartAdjustedRadius, startAngle, x, y);\n    ctx.lineTo(p8.x, p8.y); // The corner segment from point 8 to point 1\n\n    if (outerStart > 0) {\n      var _pCenter3 = rThetaToXY(outerStartAdjustedRadius, outerStartAdjustedAngle, x, y);\n\n      ctx.arc(_pCenter3.x, _pCenter3.y, outerStart, startAngle - HALF_PI, outerStartAdjustedAngle);\n    }\n  } else {\n    ctx.moveTo(x, y);\n    var outerStartX = Math.cos(outerStartAdjustedAngle) * outerRadius + x;\n    var outerStartY = Math.sin(outerStartAdjustedAngle) * outerRadius + y;\n    ctx.lineTo(outerStartX, outerStartY);\n    var outerEndX = Math.cos(outerEndAdjustedAngle) * outerRadius + x;\n    var outerEndY = Math.sin(outerEndAdjustedAngle) * outerRadius + y;\n    ctx.lineTo(outerEndX, outerEndY);\n  }\n\n  ctx.closePath();\n}\n\nfunction drawArc(ctx, element, offset, spacing, circular) {\n  var fullCircles = element.fullCircles,\n      startAngle = element.startAngle,\n      circumference = element.circumference;\n  var endAngle = element.endAngle;\n\n  if (fullCircles) {\n    pathArc(ctx, element, offset, spacing, endAngle, circular);\n\n    for (var i = 0; i < fullCircles; ++i) {\n      ctx.fill();\n    }\n\n    if (!isNaN(circumference)) {\n      endAngle = startAngle + (circumference % TAU || TAU);\n    }\n  }\n\n  pathArc(ctx, element, offset, spacing, endAngle, circular);\n  ctx.fill();\n  return endAngle;\n}\n\nfunction drawBorder(ctx, element, offset, spacing, circular) {\n  var fullCircles = element.fullCircles,\n      startAngle = element.startAngle,\n      circumference = element.circumference,\n      options = element.options;\n  var borderWidth = options.borderWidth,\n      borderJoinStyle = options.borderJoinStyle,\n      borderDash = options.borderDash,\n      borderDashOffset = options.borderDashOffset;\n  var inner = options.borderAlign === 'inner';\n\n  if (!borderWidth) {\n    return;\n  }\n\n  ctx.setLineDash(borderDash || []);\n  ctx.lineDashOffset = borderDashOffset;\n\n  if (inner) {\n    ctx.lineWidth = borderWidth * 2;\n    ctx.lineJoin = borderJoinStyle || 'round';\n  } else {\n    ctx.lineWidth = borderWidth;\n    ctx.lineJoin = borderJoinStyle || 'bevel';\n  }\n\n  var endAngle = element.endAngle;\n\n  if (fullCircles) {\n    pathArc(ctx, element, offset, spacing, endAngle, circular);\n\n    for (var i = 0; i < fullCircles; ++i) {\n      ctx.stroke();\n    }\n\n    if (!isNaN(circumference)) {\n      endAngle = startAngle + (circumference % TAU || TAU);\n    }\n  }\n\n  if (inner) {\n    clipArc(ctx, element, endAngle);\n  }\n\n  if (!fullCircles) {\n    pathArc(ctx, element, offset, spacing, endAngle, circular);\n    ctx.stroke();\n  }\n}\n\nvar ArcElement = /*#__PURE__*/function (_Element2) {\n  _inherits(ArcElement, _Element2);\n\n  var _super12 = _createSuper(ArcElement);\n\n  function ArcElement(cfg) {\n    var _this23;\n\n    _classCallCheck(this, ArcElement);\n\n    _this23 = _super12.call(this);\n\n    _defineProperty(_assertThisInitialized(_this23), \"circumference\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this23), \"endAngle\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this23), \"fullCircles\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this23), \"innerRadius\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this23), \"outerRadius\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this23), \"pixelMargin\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this23), \"startAngle\", void 0);\n\n    _this23.options = undefined;\n    _this23.circumference = undefined;\n    _this23.startAngle = undefined;\n    _this23.endAngle = undefined;\n    _this23.innerRadius = undefined;\n    _this23.outerRadius = undefined;\n    _this23.pixelMargin = 0;\n    _this23.fullCircles = 0;\n\n    if (cfg) {\n      Object.assign(_assertThisInitialized(_this23), cfg);\n    }\n\n    return _this23;\n  }\n\n  _createClass(ArcElement, [{\n    key: \"inRange\",\n    value: function inRange(chartX, chartY, useFinalPosition) {\n      var point = this.getProps(['x', 'y'], useFinalPosition);\n\n      var _getAngleFromPoint2 = getAngleFromPoint(point, {\n        x: chartX,\n        y: chartY\n      }),\n          angle = _getAngleFromPoint2.angle,\n          distance = _getAngleFromPoint2.distance;\n\n      var _this$getProps2 = this.getProps(['startAngle', 'endAngle', 'innerRadius', 'outerRadius', 'circumference'], useFinalPosition),\n          startAngle = _this$getProps2.startAngle,\n          endAngle = _this$getProps2.endAngle,\n          innerRadius = _this$getProps2.innerRadius,\n          outerRadius = _this$getProps2.outerRadius,\n          circumference = _this$getProps2.circumference;\n\n      var rAdjust = (this.options.spacing + this.options.borderWidth) / 2;\n\n      var _circumference = valueOrDefault(circumference, endAngle - startAngle);\n\n      var nonZeroBetween = _angleBetween(angle, startAngle, endAngle) && startAngle !== endAngle;\n      var betweenAngles = _circumference >= TAU || nonZeroBetween;\n\n      var withinRadius = _isBetween(distance, innerRadius + rAdjust, outerRadius + rAdjust);\n\n      return betweenAngles && withinRadius;\n    }\n  }, {\n    key: \"getCenterPoint\",\n    value: function getCenterPoint(useFinalPosition) {\n      var _this$getProps3 = this.getProps(['x', 'y', 'startAngle', 'endAngle', 'innerRadius', 'outerRadius'], useFinalPosition),\n          x = _this$getProps3.x,\n          y = _this$getProps3.y,\n          startAngle = _this$getProps3.startAngle,\n          endAngle = _this$getProps3.endAngle,\n          innerRadius = _this$getProps3.innerRadius,\n          outerRadius = _this$getProps3.outerRadius;\n\n      var _this$options13 = this.options,\n          offset = _this$options13.offset,\n          spacing = _this$options13.spacing;\n      var halfAngle = (startAngle + endAngle) / 2;\n      var halfRadius = (innerRadius + outerRadius + spacing + offset) / 2;\n      return {\n        x: x + Math.cos(halfAngle) * halfRadius,\n        y: y + Math.sin(halfAngle) * halfRadius\n      };\n    }\n  }, {\n    key: \"tooltipPosition\",\n    value: function tooltipPosition(useFinalPosition) {\n      return this.getCenterPoint(useFinalPosition);\n    }\n  }, {\n    key: \"draw\",\n    value: function draw(ctx) {\n      var options = this.options,\n          circumference = this.circumference;\n      var offset = (options.offset || 0) / 4;\n      var spacing = (options.spacing || 0) / 2;\n      var circular = options.circular;\n      this.pixelMargin = options.borderAlign === 'inner' ? 0.33 : 0;\n      this.fullCircles = circumference > TAU ? Math.floor(circumference / TAU) : 0;\n\n      if (circumference === 0 || this.innerRadius < 0 || this.outerRadius < 0) {\n        return;\n      }\n\n      ctx.save();\n      var halfAngle = (this.startAngle + this.endAngle) / 2;\n      ctx.translate(Math.cos(halfAngle) * offset, Math.sin(halfAngle) * offset);\n      var fix = 1 - Math.sin(Math.min(PI, circumference || 0));\n      var radiusOffset = offset * fix;\n      ctx.fillStyle = options.backgroundColor;\n      ctx.strokeStyle = options.borderColor;\n      drawArc(ctx, this, radiusOffset, spacing, circular);\n      drawBorder(ctx, this, radiusOffset, spacing, circular);\n      ctx.restore();\n    }\n  }]);\n\n  return ArcElement;\n}(Element);\n\n_defineProperty(ArcElement, \"id\", 'arc');\n\n_defineProperty(ArcElement, \"defaults\", {\n  borderAlign: 'center',\n  borderColor: '#fff',\n  borderDash: [],\n  borderDashOffset: 0,\n  borderJoinStyle: undefined,\n  borderRadius: 0,\n  borderWidth: 2,\n  offset: 0,\n  spacing: 0,\n  angle: undefined,\n  circular: true\n});\n\n_defineProperty(ArcElement, \"defaultRoutes\", {\n  backgroundColor: 'backgroundColor'\n});\n\n_defineProperty(ArcElement, \"descriptors\", {\n  _scriptable: true,\n  _indexable: function _indexable(name) {\n    return name !== 'borderDash';\n  }\n});\n\nfunction setStyle(ctx, options) {\n  var style = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : options;\n  ctx.lineCap = valueOrDefault(style.borderCapStyle, options.borderCapStyle);\n  ctx.setLineDash(valueOrDefault(style.borderDash, options.borderDash));\n  ctx.lineDashOffset = valueOrDefault(style.borderDashOffset, options.borderDashOffset);\n  ctx.lineJoin = valueOrDefault(style.borderJoinStyle, options.borderJoinStyle);\n  ctx.lineWidth = valueOrDefault(style.borderWidth, options.borderWidth);\n  ctx.strokeStyle = valueOrDefault(style.borderColor, options.borderColor);\n}\n\nfunction lineTo(ctx, previous, target) {\n  ctx.lineTo(target.x, target.y);\n}\n\nfunction getLineMethod(options) {\n  if (options.stepped) {\n    return _steppedLineTo;\n  }\n\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\n    return _bezierCurveTo;\n  }\n\n  return lineTo;\n}\n\nfunction pathVars(points, segment) {\n  var params = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  var count = points.length;\n  var _params$start = params.start,\n      paramsStart = _params$start === void 0 ? 0 : _params$start,\n      _params$end = params.end,\n      paramsEnd = _params$end === void 0 ? count - 1 : _params$end;\n  var segmentStart = segment.start,\n      segmentEnd = segment.end;\n  var start = Math.max(paramsStart, segmentStart);\n  var end = Math.min(paramsEnd, segmentEnd);\n  var outside = paramsStart < segmentStart && paramsEnd < segmentStart || paramsStart > segmentEnd && paramsEnd > segmentEnd;\n  return {\n    count: count,\n    start: start,\n    loop: segment.loop,\n    ilen: end < start && !outside ? count + end - start : end - start\n  };\n}\n\nfunction pathSegment(ctx, line, segment, params) {\n  var points = line.points,\n      options = line.options;\n\n  var _pathVars = pathVars(points, segment, params),\n      count = _pathVars.count,\n      start = _pathVars.start,\n      loop = _pathVars.loop,\n      ilen = _pathVars.ilen;\n\n  var lineMethod = getLineMethod(options);\n\n  var _ref5 = params || {},\n      _ref5$move = _ref5.move,\n      move = _ref5$move === void 0 ? true : _ref5$move,\n      reverse = _ref5.reverse;\n\n  var i, point, prev;\n\n  for (i = 0; i <= ilen; ++i) {\n    point = points[(start + (reverse ? ilen - i : i)) % count];\n\n    if (point.skip) {\n      continue;\n    } else if (move) {\n      ctx.moveTo(point.x, point.y);\n      move = false;\n    } else {\n      lineMethod(ctx, prev, point, reverse, options.stepped);\n    }\n\n    prev = point;\n  }\n\n  if (loop) {\n    point = points[(start + (reverse ? ilen : 0)) % count];\n    lineMethod(ctx, prev, point, reverse, options.stepped);\n  }\n\n  return !!loop;\n}\n\nfunction fastPathSegment(ctx, line, segment, params) {\n  var points = line.points;\n\n  var _pathVars2 = pathVars(points, segment, params),\n      count = _pathVars2.count,\n      start = _pathVars2.start,\n      ilen = _pathVars2.ilen;\n\n  var _ref6 = params || {},\n      _ref6$move = _ref6.move,\n      move = _ref6$move === void 0 ? true : _ref6$move,\n      reverse = _ref6.reverse;\n\n  var avgX = 0;\n  var countX = 0;\n  var i, point, prevX, minY, maxY, lastY;\n\n  var pointIndex = function pointIndex(index) {\n    return (start + (reverse ? ilen - index : index)) % count;\n  };\n\n  var drawX = function drawX() {\n    if (minY !== maxY) {\n      ctx.lineTo(avgX, maxY);\n      ctx.lineTo(avgX, minY);\n      ctx.lineTo(avgX, lastY);\n    }\n  };\n\n  if (move) {\n    point = points[pointIndex(0)];\n    ctx.moveTo(point.x, point.y);\n  }\n\n  for (i = 0; i <= ilen; ++i) {\n    point = points[pointIndex(i)];\n\n    if (point.skip) {\n      continue;\n    }\n\n    var x = point.x;\n    var y = point.y;\n    var truncX = x | 0;\n\n    if (truncX === prevX) {\n      if (y < minY) {\n        minY = y;\n      } else if (y > maxY) {\n        maxY = y;\n      }\n\n      avgX = (countX * avgX + x) / ++countX;\n    } else {\n      drawX();\n      ctx.lineTo(x, y);\n      prevX = truncX;\n      countX = 0;\n      minY = maxY = y;\n    }\n\n    lastY = y;\n  }\n\n  drawX();\n}\n\nfunction _getSegmentMethod(line) {\n  var opts = line.options;\n  var borderDash = opts.borderDash && opts.borderDash.length;\n  var useFastPath = !line._decimated && !line._loop && !opts.tension && opts.cubicInterpolationMode !== 'monotone' && !opts.stepped && !borderDash;\n  return useFastPath ? fastPathSegment : pathSegment;\n}\n\nfunction _getInterpolationMethod(options) {\n  if (options.stepped) {\n    return _steppedInterpolation;\n  }\n\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\n    return _bezierInterpolation;\n  }\n\n  return _pointInLine;\n}\n\nfunction strokePathWithCache(ctx, line, start, count) {\n  var path = line._path;\n\n  if (!path) {\n    path = line._path = new Path2D();\n\n    if (line.path(path, start, count)) {\n      path.closePath();\n    }\n  }\n\n  setStyle(ctx, line.options);\n  ctx.stroke(path);\n}\n\nfunction strokePathDirect(ctx, line, start, count) {\n  var segments = line.segments,\n      options = line.options;\n\n  var segmentMethod = _getSegmentMethod(line);\n\n  var _iterator17 = _createForOfIteratorHelper(segments),\n      _step17;\n\n  try {\n    for (_iterator17.s(); !(_step17 = _iterator17.n()).done;) {\n      var segment = _step17.value;\n      setStyle(ctx, options, segment.style);\n      ctx.beginPath();\n\n      if (segmentMethod(ctx, line, segment, {\n        start: start,\n        end: start + count - 1\n      })) {\n        ctx.closePath();\n      }\n\n      ctx.stroke();\n    }\n  } catch (err) {\n    _iterator17.e(err);\n  } finally {\n    _iterator17.f();\n  }\n}\n\nvar usePath2D = typeof Path2D === 'function';\n\nfunction _draw(ctx, line, start, count) {\n  if (usePath2D && !line.options.segment) {\n    strokePathWithCache(ctx, line, start, count);\n  } else {\n    strokePathDirect(ctx, line, start, count);\n  }\n}\n\nvar LineElement = /*#__PURE__*/function (_Element3) {\n  _inherits(LineElement, _Element3);\n\n  var _super13 = _createSuper(LineElement);\n\n  function LineElement(cfg) {\n    var _this24;\n\n    _classCallCheck(this, LineElement);\n\n    _this24 = _super13.call(this);\n    _this24.animated = true;\n    _this24.options = undefined;\n    _this24._chart = undefined;\n    _this24._loop = undefined;\n    _this24._fullLoop = undefined;\n    _this24._path = undefined;\n    _this24._points = undefined;\n    _this24._segments = undefined;\n    _this24._decimated = false;\n    _this24._pointsUpdated = false;\n    _this24._datasetIndex = undefined;\n\n    if (cfg) {\n      Object.assign(_assertThisInitialized(_this24), cfg);\n    }\n\n    return _this24;\n  }\n\n  _createClass(LineElement, [{\n    key: \"updateControlPoints\",\n    value: function updateControlPoints(chartArea, indexAxis) {\n      var options = this.options;\n\n      if ((options.tension || options.cubicInterpolationMode === 'monotone') && !options.stepped && !this._pointsUpdated) {\n        var loop = options.spanGaps ? this._loop : this._fullLoop;\n\n        _updateBezierControlPoints(this._points, options, chartArea, loop, indexAxis);\n\n        this._pointsUpdated = true;\n      }\n    }\n  }, {\n    key: \"points\",\n    get: function get() {\n      return this._points;\n    },\n    set: function set(points) {\n      this._points = points;\n      delete this._segments;\n      delete this._path;\n      this._pointsUpdated = false;\n    }\n  }, {\n    key: \"segments\",\n    get: function get() {\n      return this._segments || (this._segments = _computeSegments(this, this.options.segment));\n    }\n  }, {\n    key: \"first\",\n    value: function first() {\n      var segments = this.segments;\n      var points = this.points;\n      return segments.length && points[segments[0].start];\n    }\n  }, {\n    key: \"last\",\n    value: function last() {\n      var segments = this.segments;\n      var points = this.points;\n      var count = segments.length;\n      return count && points[segments[count - 1].end];\n    }\n  }, {\n    key: \"interpolate\",\n    value: function interpolate(point, property) {\n      var options = this.options;\n      var value = point[property];\n      var points = this.points;\n\n      var segments = _boundSegments(this, {\n        property: property,\n        start: value,\n        end: value\n      });\n\n      if (!segments.length) {\n        return;\n      }\n\n      var result = [];\n\n      var _interpolate = _getInterpolationMethod(options);\n\n      var i, ilen;\n\n      for (i = 0, ilen = segments.length; i < ilen; ++i) {\n        var _segments$i = segments[i],\n            start = _segments$i.start,\n            end = _segments$i.end;\n        var p1 = points[start];\n        var p2 = points[end];\n\n        if (p1 === p2) {\n          result.push(p1);\n          continue;\n        }\n\n        var t = Math.abs((value - p1[property]) / (p2[property] - p1[property]));\n\n        var interpolated = _interpolate(p1, p2, t, options.stepped);\n\n        interpolated[property] = point[property];\n        result.push(interpolated);\n      }\n\n      return result.length === 1 ? result[0] : result;\n    }\n  }, {\n    key: \"pathSegment\",\n    value: function pathSegment(ctx, segment, params) {\n      var segmentMethod = _getSegmentMethod(this);\n\n      return segmentMethod(ctx, this, segment, params);\n    }\n  }, {\n    key: \"path\",\n    value: function path(ctx, start, count) {\n      var segments = this.segments;\n\n      var segmentMethod = _getSegmentMethod(this);\n\n      var loop = this._loop;\n      start = start || 0;\n      count = count || this.points.length - start;\n\n      var _iterator18 = _createForOfIteratorHelper(segments),\n          _step18;\n\n      try {\n        for (_iterator18.s(); !(_step18 = _iterator18.n()).done;) {\n          var segment = _step18.value;\n          loop &= segmentMethod(ctx, this, segment, {\n            start: start,\n            end: start + count - 1\n          });\n        }\n      } catch (err) {\n        _iterator18.e(err);\n      } finally {\n        _iterator18.f();\n      }\n\n      return !!loop;\n    }\n  }, {\n    key: \"draw\",\n    value: function draw(ctx, chartArea, start, count) {\n      var options = this.options || {};\n      var points = this.points || [];\n\n      if (points.length && options.borderWidth) {\n        ctx.save();\n\n        _draw(ctx, this, start, count);\n\n        ctx.restore();\n      }\n\n      if (this.animated) {\n        this._pointsUpdated = false;\n        this._path = undefined;\n      }\n    }\n  }]);\n\n  return LineElement;\n}(Element);\n\n_defineProperty(LineElement, \"id\", 'line');\n\n_defineProperty(LineElement, \"defaults\", {\n  borderCapStyle: 'butt',\n  borderDash: [],\n  borderDashOffset: 0,\n  borderJoinStyle: 'miter',\n  borderWidth: 3,\n  capBezierPoints: true,\n  cubicInterpolationMode: 'default',\n  fill: false,\n  spanGaps: false,\n  stepped: false,\n  tension: 0\n});\n\n_defineProperty(LineElement, \"defaultRoutes\", {\n  backgroundColor: 'backgroundColor',\n  borderColor: 'borderColor'\n});\n\n_defineProperty(LineElement, \"descriptors\", {\n  _scriptable: true,\n  _indexable: function _indexable(name) {\n    return name !== 'borderDash' && name !== 'fill';\n  }\n});\n\nfunction inRange$1(el, pos, axis, useFinalPosition) {\n  var options = el.options;\n\n  var _el$getProps = el.getProps([axis], useFinalPosition),\n      value = _el$getProps[axis];\n\n  return Math.abs(pos - value) < options.radius + options.hitRadius;\n}\n\nvar PointElement = /*#__PURE__*/function (_Element4) {\n  _inherits(PointElement, _Element4);\n\n  var _super14 = _createSuper(PointElement);\n\n  /**\n  * @type {any}\n  */\n\n  /**\n  * @type {any}\n  */\n  function PointElement(cfg) {\n    var _this25;\n\n    _classCallCheck(this, PointElement);\n\n    _this25 = _super14.call(this);\n\n    _defineProperty(_assertThisInitialized(_this25), \"parsed\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this25), \"skip\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this25), \"stop\", void 0);\n\n    _this25.options = undefined;\n    _this25.parsed = undefined;\n    _this25.skip = undefined;\n    _this25.stop = undefined;\n\n    if (cfg) {\n      Object.assign(_assertThisInitialized(_this25), cfg);\n    }\n\n    return _this25;\n  }\n\n  _createClass(PointElement, [{\n    key: \"inRange\",\n    value: function inRange(mouseX, mouseY, useFinalPosition) {\n      var options = this.options;\n\n      var _this$getProps4 = this.getProps(['x', 'y'], useFinalPosition),\n          x = _this$getProps4.x,\n          y = _this$getProps4.y;\n\n      return Math.pow(mouseX - x, 2) + Math.pow(mouseY - y, 2) < Math.pow(options.hitRadius + options.radius, 2);\n    }\n  }, {\n    key: \"inXRange\",\n    value: function inXRange(mouseX, useFinalPosition) {\n      return inRange$1(this, mouseX, 'x', useFinalPosition);\n    }\n  }, {\n    key: \"inYRange\",\n    value: function inYRange(mouseY, useFinalPosition) {\n      return inRange$1(this, mouseY, 'y', useFinalPosition);\n    }\n  }, {\n    key: \"getCenterPoint\",\n    value: function getCenterPoint(useFinalPosition) {\n      var _this$getProps5 = this.getProps(['x', 'y'], useFinalPosition),\n          x = _this$getProps5.x,\n          y = _this$getProps5.y;\n\n      return {\n        x: x,\n        y: y\n      };\n    }\n  }, {\n    key: \"size\",\n    value: function size(options) {\n      options = options || this.options || {};\n      var radius = options.radius || 0;\n      radius = Math.max(radius, radius && options.hoverRadius || 0);\n      var borderWidth = radius && options.borderWidth || 0;\n      return (radius + borderWidth) * 2;\n    }\n  }, {\n    key: \"draw\",\n    value: function draw(ctx, area) {\n      var options = this.options;\n\n      if (this.skip || options.radius < 0.1 || !_isPointInArea(this, area, this.size(options) / 2)) {\n        return;\n      }\n\n      ctx.strokeStyle = options.borderColor;\n      ctx.lineWidth = options.borderWidth;\n      ctx.fillStyle = options.backgroundColor;\n      drawPoint(ctx, options, this.x, this.y);\n    }\n  }, {\n    key: \"getRange\",\n    value: function getRange() {\n      var options = this.options || {}; // @ts-expect-error Fallbacks should never be hit in practice\n\n      return options.radius + options.hitRadius;\n    }\n  }]);\n\n  return PointElement;\n}(Element);\n\n_defineProperty(PointElement, \"id\", 'point');\n\n_defineProperty(PointElement, \"defaults\", {\n  borderWidth: 1,\n  hitRadius: 1,\n  hoverBorderWidth: 1,\n  hoverRadius: 4,\n  pointStyle: 'circle',\n  radius: 3,\n  rotation: 0\n});\n\n_defineProperty(PointElement, \"defaultRoutes\", {\n  backgroundColor: 'backgroundColor',\n  borderColor: 'borderColor'\n});\n\nfunction getBarBounds(bar, useFinalPosition) {\n  var _bar$getProps = bar.getProps(['x', 'y', 'base', 'width', 'height'], useFinalPosition),\n      x = _bar$getProps.x,\n      y = _bar$getProps.y,\n      base = _bar$getProps.base,\n      width = _bar$getProps.width,\n      height = _bar$getProps.height;\n\n  var left, right, top, bottom, half;\n\n  if (bar.horizontal) {\n    half = height / 2;\n    left = Math.min(x, base);\n    right = Math.max(x, base);\n    top = y - half;\n    bottom = y + half;\n  } else {\n    half = width / 2;\n    left = x - half;\n    right = x + half;\n    top = Math.min(y, base);\n    bottom = Math.max(y, base);\n  }\n\n  return {\n    left: left,\n    top: top,\n    right: right,\n    bottom: bottom\n  };\n}\n\nfunction skipOrLimit(skip, value, min, max) {\n  return skip ? 0 : _limitValue(value, min, max);\n}\n\nfunction parseBorderWidth(bar, maxW, maxH) {\n  var value = bar.options.borderWidth;\n  var skip = bar.borderSkipped;\n  var o = toTRBL(value);\n  return {\n    t: skipOrLimit(skip.top, o.top, 0, maxH),\n    r: skipOrLimit(skip.right, o.right, 0, maxW),\n    b: skipOrLimit(skip.bottom, o.bottom, 0, maxH),\n    l: skipOrLimit(skip.left, o.left, 0, maxW)\n  };\n}\n\nfunction parseBorderRadius(bar, maxW, maxH) {\n  var _bar$getProps2 = bar.getProps(['enableBorderRadius']),\n      enableBorderRadius = _bar$getProps2.enableBorderRadius;\n\n  var value = bar.options.borderRadius;\n  var o = toTRBLCorners(value);\n  var maxR = Math.min(maxW, maxH);\n  var skip = bar.borderSkipped;\n  var enableBorder = enableBorderRadius || isObject(value);\n  return {\n    topLeft: skipOrLimit(!enableBorder || skip.top || skip.left, o.topLeft, 0, maxR),\n    topRight: skipOrLimit(!enableBorder || skip.top || skip.right, o.topRight, 0, maxR),\n    bottomLeft: skipOrLimit(!enableBorder || skip.bottom || skip.left, o.bottomLeft, 0, maxR),\n    bottomRight: skipOrLimit(!enableBorder || skip.bottom || skip.right, o.bottomRight, 0, maxR)\n  };\n}\n\nfunction boundingRects(bar) {\n  var bounds = getBarBounds(bar);\n  var width = bounds.right - bounds.left;\n  var height = bounds.bottom - bounds.top;\n  var border = parseBorderWidth(bar, width / 2, height / 2);\n  var radius = parseBorderRadius(bar, width / 2, height / 2);\n  return {\n    outer: {\n      x: bounds.left,\n      y: bounds.top,\n      w: width,\n      h: height,\n      radius: radius\n    },\n    inner: {\n      x: bounds.left + border.l,\n      y: bounds.top + border.t,\n      w: width - border.l - border.r,\n      h: height - border.t - border.b,\n      radius: {\n        topLeft: Math.max(0, radius.topLeft - Math.max(border.t, border.l)),\n        topRight: Math.max(0, radius.topRight - Math.max(border.t, border.r)),\n        bottomLeft: Math.max(0, radius.bottomLeft - Math.max(border.b, border.l)),\n        bottomRight: Math.max(0, radius.bottomRight - Math.max(border.b, border.r))\n      }\n    }\n  };\n}\n\nfunction _inRange(bar, x, y, useFinalPosition) {\n  var skipX = x === null;\n  var skipY = y === null;\n  var skipBoth = skipX && skipY;\n  var bounds = bar && !skipBoth && getBarBounds(bar, useFinalPosition);\n  return bounds && (skipX || _isBetween(x, bounds.left, bounds.right)) && (skipY || _isBetween(y, bounds.top, bounds.bottom));\n}\n\nfunction hasRadius(radius) {\n  return radius.topLeft || radius.topRight || radius.bottomLeft || radius.bottomRight;\n}\n\nfunction addNormalRectPath(ctx, rect) {\n  ctx.rect(rect.x, rect.y, rect.w, rect.h);\n}\n\nfunction inflateRect(rect, amount) {\n  var refRect = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  var x = rect.x !== refRect.x ? -amount : 0;\n  var y = rect.y !== refRect.y ? -amount : 0;\n  var w = (rect.x + rect.w !== refRect.x + refRect.w ? amount : 0) - x;\n  var h = (rect.y + rect.h !== refRect.y + refRect.h ? amount : 0) - y;\n  return {\n    x: rect.x + x,\n    y: rect.y + y,\n    w: rect.w + w,\n    h: rect.h + h,\n    radius: rect.radius\n  };\n}\n\nvar BarElement = /*#__PURE__*/function (_Element5) {\n  _inherits(BarElement, _Element5);\n\n  var _super15 = _createSuper(BarElement);\n\n  function BarElement(cfg) {\n    var _this26;\n\n    _classCallCheck(this, BarElement);\n\n    _this26 = _super15.call(this);\n    _this26.options = undefined;\n    _this26.horizontal = undefined;\n    _this26.base = undefined;\n    _this26.width = undefined;\n    _this26.height = undefined;\n    _this26.inflateAmount = undefined;\n\n    if (cfg) {\n      Object.assign(_assertThisInitialized(_this26), cfg);\n    }\n\n    return _this26;\n  }\n\n  _createClass(BarElement, [{\n    key: \"draw\",\n    value: function draw(ctx) {\n      var inflateAmount = this.inflateAmount,\n          _this$options14 = this.options,\n          borderColor = _this$options14.borderColor,\n          backgroundColor = _this$options14.backgroundColor;\n\n      var _boundingRects = boundingRects(this),\n          inner = _boundingRects.inner,\n          outer = _boundingRects.outer;\n\n      var addRectPath = hasRadius(outer.radius) ? addRoundedRectPath : addNormalRectPath;\n      ctx.save();\n\n      if (outer.w !== inner.w || outer.h !== inner.h) {\n        ctx.beginPath();\n        addRectPath(ctx, inflateRect(outer, inflateAmount, inner));\n        ctx.clip();\n        addRectPath(ctx, inflateRect(inner, -inflateAmount, outer));\n        ctx.fillStyle = borderColor;\n        ctx.fill('evenodd');\n      }\n\n      ctx.beginPath();\n      addRectPath(ctx, inflateRect(inner, inflateAmount));\n      ctx.fillStyle = backgroundColor;\n      ctx.fill();\n      ctx.restore();\n    }\n  }, {\n    key: \"inRange\",\n    value: function inRange(mouseX, mouseY, useFinalPosition) {\n      return _inRange(this, mouseX, mouseY, useFinalPosition);\n    }\n  }, {\n    key: \"inXRange\",\n    value: function inXRange(mouseX, useFinalPosition) {\n      return _inRange(this, mouseX, null, useFinalPosition);\n    }\n  }, {\n    key: \"inYRange\",\n    value: function inYRange(mouseY, useFinalPosition) {\n      return _inRange(this, null, mouseY, useFinalPosition);\n    }\n  }, {\n    key: \"getCenterPoint\",\n    value: function getCenterPoint(useFinalPosition) {\n      var _this$getProps6 = this.getProps(['x', 'y', 'base', 'horizontal'], useFinalPosition),\n          x = _this$getProps6.x,\n          y = _this$getProps6.y,\n          base = _this$getProps6.base,\n          horizontal = _this$getProps6.horizontal;\n\n      return {\n        x: horizontal ? (x + base) / 2 : x,\n        y: horizontal ? y : (y + base) / 2\n      };\n    }\n  }, {\n    key: \"getRange\",\n    value: function getRange(axis) {\n      return axis === 'x' ? this.width / 2 : this.height / 2;\n    }\n  }]);\n\n  return BarElement;\n}(Element);\n\n_defineProperty(BarElement, \"id\", 'bar');\n\n_defineProperty(BarElement, \"defaults\", {\n  borderSkipped: 'start',\n  borderWidth: 0,\n  borderRadius: 0,\n  inflateAmount: 'auto',\n  pointStyle: undefined\n});\n\n_defineProperty(BarElement, \"defaultRoutes\", {\n  backgroundColor: 'backgroundColor',\n  borderColor: 'borderColor'\n});\n\nvar elements = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  ArcElement: ArcElement,\n  BarElement: BarElement,\n  LineElement: LineElement,\n  PointElement: PointElement\n});\nvar BORDER_COLORS = ['rgb(54, 162, 235)', 'rgb(255, 99, 132)', 'rgb(255, 159, 64)', 'rgb(255, 205, 86)', 'rgb(75, 192, 192)', 'rgb(153, 102, 255)', 'rgb(201, 203, 207)' // grey\n]; // Border colors with 50% transparency\n\nvar BACKGROUND_COLORS = /* #__PURE__ */BORDER_COLORS.map(function (color) {\n  return color.replace('rgb(', 'rgba(').replace(')', ', 0.5)');\n});\n\nfunction getBorderColor(i) {\n  return BORDER_COLORS[i % BORDER_COLORS.length];\n}\n\nfunction getBackgroundColor(i) {\n  return BACKGROUND_COLORS[i % BACKGROUND_COLORS.length];\n}\n\nfunction colorizeDefaultDataset(dataset, i) {\n  dataset.borderColor = getBorderColor(i);\n  dataset.backgroundColor = getBackgroundColor(i);\n  return ++i;\n}\n\nfunction colorizeDoughnutDataset(dataset, i) {\n  dataset.backgroundColor = dataset.data.map(function () {\n    return getBorderColor(i++);\n  });\n  return i;\n}\n\nfunction colorizePolarAreaDataset(dataset, i) {\n  dataset.backgroundColor = dataset.data.map(function () {\n    return getBackgroundColor(i++);\n  });\n  return i;\n}\n\nfunction getColorizer(chart) {\n  var i = 0;\n  return function (dataset, datasetIndex) {\n    var controller = chart.getDatasetMeta(datasetIndex).controller;\n\n    if (controller instanceof DoughnutController) {\n      i = colorizeDoughnutDataset(dataset, i);\n    } else if (controller instanceof PolarAreaController) {\n      i = colorizePolarAreaDataset(dataset, i);\n    } else if (controller) {\n      i = colorizeDefaultDataset(dataset, i);\n    }\n  };\n}\n\nfunction containsColorsDefinitions(descriptors) {\n  var k;\n\n  for (k in descriptors) {\n    if (descriptors[k].borderColor || descriptors[k].backgroundColor) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nfunction containsColorsDefinition(descriptor) {\n  return descriptor && (descriptor.borderColor || descriptor.backgroundColor);\n}\n\nvar plugin_colors = {\n  id: 'colors',\n  defaults: {\n    enabled: true,\n    forceOverride: false\n  },\n  beforeLayout: function beforeLayout(chart, _args, options) {\n    if (!options.enabled) {\n      return;\n    }\n\n    var _chart$config = chart.config,\n        datasets = _chart$config.data.datasets,\n        chartOptions = _chart$config.options;\n    var elements = chartOptions.elements;\n\n    if (!options.forceOverride && (containsColorsDefinitions(datasets) || containsColorsDefinition(chartOptions) || elements && containsColorsDefinitions(elements))) {\n      return;\n    }\n\n    var colorizer = getColorizer(chart);\n    datasets.forEach(colorizer);\n  }\n};\n\nfunction lttbDecimation(data, start, count, availableWidth, options) {\n  var samples = options.samples || availableWidth;\n\n  if (samples >= count) {\n    return data.slice(start, start + count);\n  }\n\n  var decimated = [];\n  var bucketWidth = (count - 2) / (samples - 2);\n  var sampledIndex = 0;\n  var endIndex = start + count - 1;\n  var a = start;\n  var i, maxAreaPoint, maxArea, area, nextA;\n  decimated[sampledIndex++] = data[a];\n\n  for (i = 0; i < samples - 2; i++) {\n    var avgX = 0;\n    var avgY = 0;\n    var j = void 0;\n    var avgRangeStart = Math.floor((i + 1) * bucketWidth) + 1 + start;\n    var avgRangeEnd = Math.min(Math.floor((i + 2) * bucketWidth) + 1, count) + start;\n    var avgRangeLength = avgRangeEnd - avgRangeStart;\n\n    for (j = avgRangeStart; j < avgRangeEnd; j++) {\n      avgX += data[j].x;\n      avgY += data[j].y;\n    }\n\n    avgX /= avgRangeLength;\n    avgY /= avgRangeLength;\n    var rangeOffs = Math.floor(i * bucketWidth) + 1 + start;\n    var rangeTo = Math.min(Math.floor((i + 1) * bucketWidth) + 1, count) + start;\n    var _data$a = data[a],\n        pointAx = _data$a.x,\n        pointAy = _data$a.y;\n    maxArea = area = -1;\n\n    for (j = rangeOffs; j < rangeTo; j++) {\n      area = 0.5 * Math.abs((pointAx - avgX) * (data[j].y - pointAy) - (pointAx - data[j].x) * (avgY - pointAy));\n\n      if (area > maxArea) {\n        maxArea = area;\n        maxAreaPoint = data[j];\n        nextA = j;\n      }\n    }\n\n    decimated[sampledIndex++] = maxAreaPoint;\n    a = nextA;\n  }\n\n  decimated[sampledIndex++] = data[endIndex];\n  return decimated;\n}\n\nfunction minMaxDecimation(data, start, count, availableWidth) {\n  var avgX = 0;\n  var countX = 0;\n  var i, point, x, y, prevX, minIndex, maxIndex, startIndex, minY, maxY;\n  var decimated = [];\n  var endIndex = start + count - 1;\n  var xMin = data[start].x;\n  var xMax = data[endIndex].x;\n  var dx = xMax - xMin;\n\n  for (i = start; i < start + count; ++i) {\n    point = data[i];\n    x = (point.x - xMin) / dx * availableWidth;\n    y = point.y;\n    var truncX = x | 0;\n\n    if (truncX === prevX) {\n      if (y < minY) {\n        minY = y;\n        minIndex = i;\n      } else if (y > maxY) {\n        maxY = y;\n        maxIndex = i;\n      }\n\n      avgX = (countX * avgX + point.x) / ++countX;\n    } else {\n      var lastIndex = i - 1;\n\n      if (!isNullOrUndef(minIndex) && !isNullOrUndef(maxIndex)) {\n        var intermediateIndex1 = Math.min(minIndex, maxIndex);\n        var intermediateIndex2 = Math.max(minIndex, maxIndex);\n\n        if (intermediateIndex1 !== startIndex && intermediateIndex1 !== lastIndex) {\n          decimated.push(_objectSpread(_objectSpread({}, data[intermediateIndex1]), {}, {\n            x: avgX\n          }));\n        }\n\n        if (intermediateIndex2 !== startIndex && intermediateIndex2 !== lastIndex) {\n          decimated.push(_objectSpread(_objectSpread({}, data[intermediateIndex2]), {}, {\n            x: avgX\n          }));\n        }\n      }\n\n      if (i > 0 && lastIndex !== startIndex) {\n        decimated.push(data[lastIndex]);\n      }\n\n      decimated.push(point);\n      prevX = truncX;\n      countX = 0;\n      minY = maxY = y;\n      minIndex = maxIndex = startIndex = i;\n    }\n  }\n\n  return decimated;\n}\n\nfunction cleanDecimatedDataset(dataset) {\n  if (dataset._decimated) {\n    var data = dataset._data;\n    delete dataset._decimated;\n    delete dataset._data;\n    Object.defineProperty(dataset, 'data', {\n      configurable: true,\n      enumerable: true,\n      writable: true,\n      value: data\n    });\n  }\n}\n\nfunction cleanDecimatedData(chart) {\n  chart.data.datasets.forEach(function (dataset) {\n    cleanDecimatedDataset(dataset);\n  });\n}\n\nfunction getStartAndCountOfVisiblePointsSimplified(meta, points) {\n  var pointCount = points.length;\n  var start = 0;\n  var count;\n  var iScale = meta.iScale;\n\n  var _iScale$getUserBounds = iScale.getUserBounds(),\n      min = _iScale$getUserBounds.min,\n      max = _iScale$getUserBounds.max,\n      minDefined = _iScale$getUserBounds.minDefined,\n      maxDefined = _iScale$getUserBounds.maxDefined;\n\n  if (minDefined) {\n    start = _limitValue(_lookupByKey(points, iScale.axis, min).lo, 0, pointCount - 1);\n  }\n\n  if (maxDefined) {\n    count = _limitValue(_lookupByKey(points, iScale.axis, max).hi + 1, start, pointCount) - start;\n  } else {\n    count = pointCount - start;\n  }\n\n  return {\n    start: start,\n    count: count\n  };\n}\n\nvar plugin_decimation = {\n  id: 'decimation',\n  defaults: {\n    algorithm: 'min-max',\n    enabled: false\n  },\n  beforeElementsUpdate: function beforeElementsUpdate(chart, args, options) {\n    if (!options.enabled) {\n      cleanDecimatedData(chart);\n      return;\n    }\n\n    var availableWidth = chart.width;\n    chart.data.datasets.forEach(function (dataset, datasetIndex) {\n      var _data = dataset._data,\n          indexAxis = dataset.indexAxis;\n      var meta = chart.getDatasetMeta(datasetIndex);\n      var data = _data || dataset.data;\n\n      if (resolve([indexAxis, chart.options.indexAxis]) === 'y') {\n        return;\n      }\n\n      if (!meta.controller.supportsDecimation) {\n        return;\n      }\n\n      var xAxis = chart.scales[meta.xAxisID];\n\n      if (xAxis.type !== 'linear' && xAxis.type !== 'time') {\n        return;\n      }\n\n      if (chart.options.parsing) {\n        return;\n      }\n\n      var _getStartAndCountOfVi3 = getStartAndCountOfVisiblePointsSimplified(meta, data),\n          start = _getStartAndCountOfVi3.start,\n          count = _getStartAndCountOfVi3.count;\n\n      var threshold = options.threshold || 4 * availableWidth;\n\n      if (count <= threshold) {\n        cleanDecimatedDataset(dataset);\n        return;\n      }\n\n      if (isNullOrUndef(_data)) {\n        dataset._data = data;\n        delete dataset.data;\n        Object.defineProperty(dataset, 'data', {\n          configurable: true,\n          enumerable: true,\n          get: function get() {\n            return this._decimated;\n          },\n          set: function set(d) {\n            this._data = d;\n          }\n        });\n      }\n\n      var decimated;\n\n      switch (options.algorithm) {\n        case 'lttb':\n          decimated = lttbDecimation(data, start, count, availableWidth, options);\n          break;\n\n        case 'min-max':\n          decimated = minMaxDecimation(data, start, count, availableWidth);\n          break;\n\n        default:\n          throw new Error(\"Unsupported decimation algorithm '\".concat(options.algorithm, \"'\"));\n      }\n\n      dataset._decimated = decimated;\n    });\n  },\n  destroy: function destroy(chart) {\n    cleanDecimatedData(chart);\n  }\n};\n\nfunction _segments(line, target, property) {\n  var segments = line.segments;\n  var points = line.points;\n  var tpoints = target.points;\n  var parts = [];\n\n  var _iterator19 = _createForOfIteratorHelper(segments),\n      _step19;\n\n  try {\n    for (_iterator19.s(); !(_step19 = _iterator19.n()).done;) {\n      var segment = _step19.value;\n      var start = segment.start,\n          end = segment.end;\n      end = _findSegmentEnd(start, end, points);\n\n      var bounds = _getBounds(property, points[start], points[end], segment.loop);\n\n      if (!target.segments) {\n        parts.push({\n          source: segment,\n          target: bounds,\n          start: points[start],\n          end: points[end]\n        });\n        continue;\n      }\n\n      var targetSegments = _boundSegments(target, bounds);\n\n      var _iterator20 = _createForOfIteratorHelper(targetSegments),\n          _step20;\n\n      try {\n        for (_iterator20.s(); !(_step20 = _iterator20.n()).done;) {\n          var tgt = _step20.value;\n\n          var subBounds = _getBounds(property, tpoints[tgt.start], tpoints[tgt.end], tgt.loop);\n\n          var fillSources = _boundSegment(segment, points, subBounds);\n\n          var _iterator21 = _createForOfIteratorHelper(fillSources),\n              _step21;\n\n          try {\n            for (_iterator21.s(); !(_step21 = _iterator21.n()).done;) {\n              var fillSource = _step21.value;\n              parts.push({\n                source: fillSource,\n                target: tgt,\n                start: _defineProperty({}, property, _getEdge(bounds, subBounds, 'start', Math.max)),\n                end: _defineProperty({}, property, _getEdge(bounds, subBounds, 'end', Math.min))\n              });\n            }\n          } catch (err) {\n            _iterator21.e(err);\n          } finally {\n            _iterator21.f();\n          }\n        }\n      } catch (err) {\n        _iterator20.e(err);\n      } finally {\n        _iterator20.f();\n      }\n    }\n  } catch (err) {\n    _iterator19.e(err);\n  } finally {\n    _iterator19.f();\n  }\n\n  return parts;\n}\n\nfunction _getBounds(property, first, last, loop) {\n  if (loop) {\n    return;\n  }\n\n  var start = first[property];\n  var end = last[property];\n\n  if (property === 'angle') {\n    start = _normalizeAngle(start);\n    end = _normalizeAngle(end);\n  }\n\n  return {\n    property: property,\n    start: start,\n    end: end\n  };\n}\n\nfunction _pointsFromSegments(boundary, line) {\n  var _ref7 = boundary || {},\n      _ref7$x = _ref7.x,\n      x = _ref7$x === void 0 ? null : _ref7$x,\n      _ref7$y = _ref7.y,\n      y = _ref7$y === void 0 ? null : _ref7$y;\n\n  var linePoints = line.points;\n  var points = [];\n  line.segments.forEach(function (_ref8) {\n    var start = _ref8.start,\n        end = _ref8.end;\n    end = _findSegmentEnd(start, end, linePoints);\n    var first = linePoints[start];\n    var last = linePoints[end];\n\n    if (y !== null) {\n      points.push({\n        x: first.x,\n        y: y\n      });\n      points.push({\n        x: last.x,\n        y: y\n      });\n    } else if (x !== null) {\n      points.push({\n        x: x,\n        y: first.y\n      });\n      points.push({\n        x: x,\n        y: last.y\n      });\n    }\n  });\n  return points;\n}\n\nfunction _findSegmentEnd(start, end, points) {\n  for (; end > start; end--) {\n    var point = points[end];\n\n    if (!isNaN(point.x) && !isNaN(point.y)) {\n      break;\n    }\n  }\n\n  return end;\n}\n\nfunction _getEdge(a, b, prop, fn) {\n  if (a && b) {\n    return fn(a[prop], b[prop]);\n  }\n\n  return a ? a[prop] : b ? b[prop] : 0;\n}\n\nfunction _createBoundaryLine(boundary, line) {\n  var points = [];\n  var _loop = false;\n\n  if (isArray(boundary)) {\n    _loop = true;\n    points = boundary;\n  } else {\n    points = _pointsFromSegments(boundary, line);\n  }\n\n  return points.length ? new LineElement({\n    points: points,\n    options: {\n      tension: 0\n    },\n    _loop: _loop,\n    _fullLoop: _loop\n  }) : null;\n}\n\nfunction _shouldApplyFill(source) {\n  return source && source.fill !== false;\n}\n\nfunction _resolveTarget(sources, index, propagate) {\n  var source = sources[index];\n  var fill = source.fill;\n  var visited = [index];\n  var target;\n\n  if (!propagate) {\n    return fill;\n  }\n\n  while (fill !== false && visited.indexOf(fill) === -1) {\n    if (!isNumberFinite(fill)) {\n      return fill;\n    }\n\n    target = sources[fill];\n\n    if (!target) {\n      return false;\n    }\n\n    if (target.visible) {\n      return fill;\n    }\n\n    visited.push(fill);\n    fill = target.fill;\n  }\n\n  return false;\n}\n\nfunction _decodeFill(line, index, count) {\n  var fill = parseFillOption(line);\n\n  if (isObject(fill)) {\n    return isNaN(fill.value) ? false : fill;\n  }\n\n  var target = parseFloat(fill);\n\n  if (isNumberFinite(target) && Math.floor(target) === target) {\n    return decodeTargetIndex(fill[0], index, target, count);\n  }\n\n  return ['origin', 'start', 'end', 'stack', 'shape'].indexOf(fill) >= 0 && fill;\n}\n\nfunction decodeTargetIndex(firstCh, index, target, count) {\n  if (firstCh === '-' || firstCh === '+') {\n    target = index + target;\n  }\n\n  if (target === index || target < 0 || target >= count) {\n    return false;\n  }\n\n  return target;\n}\n\nfunction _getTargetPixel(fill, scale) {\n  var pixel = null;\n\n  if (fill === 'start') {\n    pixel = scale.bottom;\n  } else if (fill === 'end') {\n    pixel = scale.top;\n  } else if (isObject(fill)) {\n    pixel = scale.getPixelForValue(fill.value);\n  } else if (scale.getBasePixel) {\n    pixel = scale.getBasePixel();\n  }\n\n  return pixel;\n}\n\nfunction _getTargetValue(fill, scale, startValue) {\n  var value;\n\n  if (fill === 'start') {\n    value = startValue;\n  } else if (fill === 'end') {\n    value = scale.options.reverse ? scale.min : scale.max;\n  } else if (isObject(fill)) {\n    value = fill.value;\n  } else {\n    value = scale.getBaseValue();\n  }\n\n  return value;\n}\n\nfunction parseFillOption(line) {\n  var options = line.options;\n  var fillOption = options.fill;\n  var fill = valueOrDefault(fillOption && fillOption.target, fillOption);\n\n  if (fill === undefined) {\n    fill = !!options.backgroundColor;\n  }\n\n  if (fill === false || fill === null) {\n    return false;\n  }\n\n  if (fill === true) {\n    return 'origin';\n  }\n\n  return fill;\n}\n\nfunction _buildStackLine(source) {\n  var scale = source.scale,\n      index = source.index,\n      line = source.line;\n  var points = [];\n  var segments = line.segments;\n  var sourcePoints = line.points;\n  var linesBelow = getLinesBelow(scale, index);\n  linesBelow.push(_createBoundaryLine({\n    x: null,\n    y: scale.bottom\n  }, line));\n\n  for (var i = 0; i < segments.length; i++) {\n    var segment = segments[i];\n\n    for (var j = segment.start; j <= segment.end; j++) {\n      addPointsBelow(points, sourcePoints[j], linesBelow);\n    }\n  }\n\n  return new LineElement({\n    points: points,\n    options: {}\n  });\n}\n\nfunction getLinesBelow(scale, index) {\n  var below = [];\n  var metas = scale.getMatchingVisibleMetas('line');\n\n  for (var i = 0; i < metas.length; i++) {\n    var meta = metas[i];\n\n    if (meta.index === index) {\n      break;\n    }\n\n    if (!meta.hidden) {\n      below.unshift(meta.dataset);\n    }\n  }\n\n  return below;\n}\n\nfunction addPointsBelow(points, sourcePoint, linesBelow) {\n  var postponed = [];\n\n  for (var j = 0; j < linesBelow.length; j++) {\n    var line = linesBelow[j];\n\n    var _findPoint = findPoint(line, sourcePoint, 'x'),\n        first = _findPoint.first,\n        last = _findPoint.last,\n        point = _findPoint.point;\n\n    if (!point || first && last) {\n      continue;\n    }\n\n    if (first) {\n      postponed.unshift(point);\n    } else {\n      points.push(point);\n\n      if (!last) {\n        break;\n      }\n    }\n  }\n\n  points.push.apply(points, postponed);\n}\n\nfunction findPoint(line, sourcePoint, property) {\n  var point = line.interpolate(sourcePoint, property);\n\n  if (!point) {\n    return {};\n  }\n\n  var pointValue = point[property];\n  var segments = line.segments;\n  var linePoints = line.points;\n  var first = false;\n  var last = false;\n\n  for (var i = 0; i < segments.length; i++) {\n    var segment = segments[i];\n    var firstValue = linePoints[segment.start][property];\n    var lastValue = linePoints[segment.end][property];\n\n    if (_isBetween(pointValue, firstValue, lastValue)) {\n      first = pointValue === firstValue;\n      last = pointValue === lastValue;\n      break;\n    }\n  }\n\n  return {\n    first: first,\n    last: last,\n    point: point\n  };\n}\n\nvar simpleArc = /*#__PURE__*/function () {\n  function simpleArc(opts) {\n    _classCallCheck(this, simpleArc);\n\n    this.x = opts.x;\n    this.y = opts.y;\n    this.radius = opts.radius;\n  }\n\n  _createClass(simpleArc, [{\n    key: \"pathSegment\",\n    value: function pathSegment(ctx, bounds, opts) {\n      var x = this.x,\n          y = this.y,\n          radius = this.radius;\n      bounds = bounds || {\n        start: 0,\n        end: TAU\n      };\n      ctx.arc(x, y, radius, bounds.end, bounds.start, true);\n      return !opts.bounds;\n    }\n  }, {\n    key: \"interpolate\",\n    value: function interpolate(point) {\n      var x = this.x,\n          y = this.y,\n          radius = this.radius;\n      var angle = point.angle;\n      return {\n        x: x + Math.cos(angle) * radius,\n        y: y + Math.sin(angle) * radius,\n        angle: angle\n      };\n    }\n  }]);\n\n  return simpleArc;\n}();\n\nfunction _getTarget(source) {\n  var chart = source.chart,\n      fill = source.fill,\n      line = source.line;\n\n  if (isNumberFinite(fill)) {\n    return getLineByIndex(chart, fill);\n  }\n\n  if (fill === 'stack') {\n    return _buildStackLine(source);\n  }\n\n  if (fill === 'shape') {\n    return true;\n  }\n\n  var boundary = computeBoundary(source);\n\n  if (boundary instanceof simpleArc) {\n    return boundary;\n  }\n\n  return _createBoundaryLine(boundary, line);\n}\n\nfunction getLineByIndex(chart, index) {\n  var meta = chart.getDatasetMeta(index);\n  var visible = meta && chart.isDatasetVisible(index);\n  return visible ? meta.dataset : null;\n}\n\nfunction computeBoundary(source) {\n  var scale = source.scale || {};\n\n  if (scale.getPointPositionForValue) {\n    return computeCircularBoundary(source);\n  }\n\n  return computeLinearBoundary(source);\n}\n\nfunction computeLinearBoundary(source) {\n  var _source$scale = source.scale,\n      scale = _source$scale === void 0 ? {} : _source$scale,\n      fill = source.fill;\n\n  var pixel = _getTargetPixel(fill, scale);\n\n  if (isNumberFinite(pixel)) {\n    var horizontal = scale.isHorizontal();\n    return {\n      x: horizontal ? pixel : null,\n      y: horizontal ? null : pixel\n    };\n  }\n\n  return null;\n}\n\nfunction computeCircularBoundary(source) {\n  var scale = source.scale,\n      fill = source.fill;\n  var options = scale.options;\n  var length = scale.getLabels().length;\n  var start = options.reverse ? scale.max : scale.min;\n\n  var value = _getTargetValue(fill, scale, start);\n\n  var target = [];\n\n  if (options.grid.circular) {\n    var center = scale.getPointPositionForValue(0, start);\n    return new simpleArc({\n      x: center.x,\n      y: center.y,\n      radius: scale.getDistanceFromCenterForValue(value)\n    });\n  }\n\n  for (var i = 0; i < length; ++i) {\n    target.push(scale.getPointPositionForValue(i, value));\n  }\n\n  return target;\n}\n\nfunction _drawfill(ctx, source, area) {\n  var target = _getTarget(source);\n\n  var line = source.line,\n      scale = source.scale,\n      axis = source.axis;\n  var lineOpts = line.options;\n  var fillOption = lineOpts.fill;\n  var color = lineOpts.backgroundColor;\n\n  var _ref9 = fillOption || {},\n      _ref9$above = _ref9.above,\n      above = _ref9$above === void 0 ? color : _ref9$above,\n      _ref9$below = _ref9.below,\n      below = _ref9$below === void 0 ? color : _ref9$below;\n\n  if (target && line.points.length) {\n    clipArea(ctx, area);\n    doFill(ctx, {\n      line: line,\n      target: target,\n      above: above,\n      below: below,\n      area: area,\n      scale: scale,\n      axis: axis\n    });\n    unclipArea(ctx);\n  }\n}\n\nfunction doFill(ctx, cfg) {\n  var line = cfg.line,\n      target = cfg.target,\n      above = cfg.above,\n      below = cfg.below,\n      area = cfg.area,\n      scale = cfg.scale;\n  var property = line._loop ? 'angle' : cfg.axis;\n  ctx.save();\n\n  if (property === 'x' && below !== above) {\n    clipVertical(ctx, target, area.top);\n    fill(ctx, {\n      line: line,\n      target: target,\n      color: above,\n      scale: scale,\n      property: property\n    });\n    ctx.restore();\n    ctx.save();\n    clipVertical(ctx, target, area.bottom);\n  }\n\n  fill(ctx, {\n    line: line,\n    target: target,\n    color: below,\n    scale: scale,\n    property: property\n  });\n  ctx.restore();\n}\n\nfunction clipVertical(ctx, target, clipY) {\n  var segments = target.segments,\n      points = target.points;\n  var first = true;\n  var lineLoop = false;\n  ctx.beginPath();\n\n  var _iterator22 = _createForOfIteratorHelper(segments),\n      _step22;\n\n  try {\n    for (_iterator22.s(); !(_step22 = _iterator22.n()).done;) {\n      var segment = _step22.value;\n      var start = segment.start,\n          end = segment.end;\n      var firstPoint = points[start];\n\n      var lastPoint = points[_findSegmentEnd(start, end, points)];\n\n      if (first) {\n        ctx.moveTo(firstPoint.x, firstPoint.y);\n        first = false;\n      } else {\n        ctx.lineTo(firstPoint.x, clipY);\n        ctx.lineTo(firstPoint.x, firstPoint.y);\n      }\n\n      lineLoop = !!target.pathSegment(ctx, segment, {\n        move: lineLoop\n      });\n\n      if (lineLoop) {\n        ctx.closePath();\n      } else {\n        ctx.lineTo(lastPoint.x, clipY);\n      }\n    }\n  } catch (err) {\n    _iterator22.e(err);\n  } finally {\n    _iterator22.f();\n  }\n\n  ctx.lineTo(target.first().x, clipY);\n  ctx.closePath();\n  ctx.clip();\n}\n\nfunction fill(ctx, cfg) {\n  var line = cfg.line,\n      target = cfg.target,\n      property = cfg.property,\n      color = cfg.color,\n      scale = cfg.scale;\n\n  var segments = _segments(line, target, property);\n\n  var _iterator23 = _createForOfIteratorHelper(segments),\n      _step23;\n\n  try {\n    for (_iterator23.s(); !(_step23 = _iterator23.n()).done;) {\n      var _step23$value = _step23.value,\n          src = _step23$value.source,\n          tgt = _step23$value.target,\n          start = _step23$value.start,\n          end = _step23$value.end;\n      var _src$style = src.style;\n      _src$style = _src$style === void 0 ? {} : _src$style;\n      var _src$style$background = _src$style.backgroundColor,\n          backgroundColor = _src$style$background === void 0 ? color : _src$style$background;\n      var notShape = target !== true;\n      ctx.save();\n      ctx.fillStyle = backgroundColor;\n      clipBounds(ctx, scale, notShape && _getBounds(property, start, end));\n      ctx.beginPath();\n      var lineLoop = !!line.pathSegment(ctx, src);\n      var loop = void 0;\n\n      if (notShape) {\n        if (lineLoop) {\n          ctx.closePath();\n        } else {\n          interpolatedLineTo(ctx, target, end, property);\n        }\n\n        var targetLoop = !!target.pathSegment(ctx, tgt, {\n          move: lineLoop,\n          reverse: true\n        });\n        loop = lineLoop && targetLoop;\n\n        if (!loop) {\n          interpolatedLineTo(ctx, target, start, property);\n        }\n      }\n\n      ctx.closePath();\n      ctx.fill(loop ? 'evenodd' : 'nonzero');\n      ctx.restore();\n    }\n  } catch (err) {\n    _iterator23.e(err);\n  } finally {\n    _iterator23.f();\n  }\n}\n\nfunction clipBounds(ctx, scale, bounds) {\n  var _scale$chart$chartAre = scale.chart.chartArea,\n      top = _scale$chart$chartAre.top,\n      bottom = _scale$chart$chartAre.bottom;\n\n  var _ref10 = bounds || {},\n      property = _ref10.property,\n      start = _ref10.start,\n      end = _ref10.end;\n\n  if (property === 'x') {\n    ctx.beginPath();\n    ctx.rect(start, top, end - start, bottom - top);\n    ctx.clip();\n  }\n}\n\nfunction interpolatedLineTo(ctx, target, point, property) {\n  var interpolatedPoint = target.interpolate(point, property);\n\n  if (interpolatedPoint) {\n    ctx.lineTo(interpolatedPoint.x, interpolatedPoint.y);\n  }\n}\n\nvar index = {\n  id: 'filler',\n  afterDatasetsUpdate: function afterDatasetsUpdate(chart, _args, options) {\n    var count = (chart.data.datasets || []).length;\n    var sources = [];\n    var meta, i, line, source;\n\n    for (i = 0; i < count; ++i) {\n      meta = chart.getDatasetMeta(i);\n      line = meta.dataset;\n      source = null;\n\n      if (line && line.options && line instanceof LineElement) {\n        source = {\n          visible: chart.isDatasetVisible(i),\n          index: i,\n          fill: _decodeFill(line, i, count),\n          chart: chart,\n          axis: meta.controller.options.indexAxis,\n          scale: meta.vScale,\n          line: line\n        };\n      }\n\n      meta.$filler = source;\n      sources.push(source);\n    }\n\n    for (i = 0; i < count; ++i) {\n      source = sources[i];\n\n      if (!source || source.fill === false) {\n        continue;\n      }\n\n      source.fill = _resolveTarget(sources, i, options.propagate);\n    }\n  },\n  beforeDraw: function beforeDraw(chart, _args, options) {\n    var draw = options.drawTime === 'beforeDraw';\n    var metasets = chart.getSortedVisibleDatasetMetas();\n    var area = chart.chartArea;\n\n    for (var i = metasets.length - 1; i >= 0; --i) {\n      var source = metasets[i].$filler;\n\n      if (!source) {\n        continue;\n      }\n\n      source.line.updateControlPoints(area, source.axis);\n\n      if (draw && source.fill) {\n        _drawfill(chart.ctx, source, area);\n      }\n    }\n  },\n  beforeDatasetsDraw: function beforeDatasetsDraw(chart, _args, options) {\n    if (options.drawTime !== 'beforeDatasetsDraw') {\n      return;\n    }\n\n    var metasets = chart.getSortedVisibleDatasetMetas();\n\n    for (var i = metasets.length - 1; i >= 0; --i) {\n      var source = metasets[i].$filler;\n\n      if (_shouldApplyFill(source)) {\n        _drawfill(chart.ctx, source, chart.chartArea);\n      }\n    }\n  },\n  beforeDatasetDraw: function beforeDatasetDraw(chart, args, options) {\n    var source = args.meta.$filler;\n\n    if (!_shouldApplyFill(source) || options.drawTime !== 'beforeDatasetDraw') {\n      return;\n    }\n\n    _drawfill(chart.ctx, source, chart.chartArea);\n  },\n  defaults: {\n    propagate: true,\n    drawTime: 'beforeDatasetDraw'\n  }\n};\n\nvar getBoxSize = function getBoxSize(labelOpts, fontSize) {\n  var _labelOpts$boxHeight = labelOpts.boxHeight,\n      boxHeight = _labelOpts$boxHeight === void 0 ? fontSize : _labelOpts$boxHeight,\n      _labelOpts$boxWidth = labelOpts.boxWidth,\n      boxWidth = _labelOpts$boxWidth === void 0 ? fontSize : _labelOpts$boxWidth;\n\n  if (labelOpts.usePointStyle) {\n    boxHeight = Math.min(boxHeight, fontSize);\n    boxWidth = labelOpts.pointStyleWidth || Math.min(boxWidth, fontSize);\n  }\n\n  return {\n    boxWidth: boxWidth,\n    boxHeight: boxHeight,\n    itemHeight: Math.max(fontSize, boxHeight)\n  };\n};\n\nvar itemsEqual = function itemsEqual(a, b) {\n  return a !== null && b !== null && a.datasetIndex === b.datasetIndex && a.index === b.index;\n};\n\nvar Legend = /*#__PURE__*/function (_Element6) {\n  _inherits(Legend, _Element6);\n\n  var _super16 = _createSuper(Legend);\n\n  function Legend(config) {\n    var _this27;\n\n    _classCallCheck(this, Legend);\n\n    _this27 = _super16.call(this);\n    _this27._added = false;\n    _this27.legendHitBoxes = [];\n    _this27._hoveredItem = null;\n    _this27.doughnutMode = false;\n    _this27.chart = config.chart;\n    _this27.options = config.options;\n    _this27.ctx = config.ctx;\n    _this27.legendItems = undefined;\n    _this27.columnSizes = undefined;\n    _this27.lineWidths = undefined;\n    _this27.maxHeight = undefined;\n    _this27.maxWidth = undefined;\n    _this27.top = undefined;\n    _this27.bottom = undefined;\n    _this27.left = undefined;\n    _this27.right = undefined;\n    _this27.height = undefined;\n    _this27.width = undefined;\n    _this27._margins = undefined;\n    _this27.position = undefined;\n    _this27.weight = undefined;\n    _this27.fullSize = undefined;\n    return _this27;\n  }\n\n  _createClass(Legend, [{\n    key: \"update\",\n    value: function update(maxWidth, maxHeight, margins) {\n      this.maxWidth = maxWidth;\n      this.maxHeight = maxHeight;\n      this._margins = margins;\n      this.setDimensions();\n      this.buildLabels();\n      this.fit();\n    }\n  }, {\n    key: \"setDimensions\",\n    value: function setDimensions() {\n      if (this.isHorizontal()) {\n        this.width = this.maxWidth;\n        this.left = this._margins.left;\n        this.right = this.width;\n      } else {\n        this.height = this.maxHeight;\n        this.top = this._margins.top;\n        this.bottom = this.height;\n      }\n    }\n  }, {\n    key: \"buildLabels\",\n    value: function buildLabels() {\n      var _this28 = this;\n\n      var labelOpts = this.options.labels || {};\n      var legendItems = callback(labelOpts.generateLabels, [this.chart], this) || [];\n\n      if (labelOpts.filter) {\n        legendItems = legendItems.filter(function (item) {\n          return labelOpts.filter(item, _this28.chart.data);\n        });\n      }\n\n      if (labelOpts.sort) {\n        legendItems = legendItems.sort(function (a, b) {\n          return labelOpts.sort(a, b, _this28.chart.data);\n        });\n      }\n\n      if (this.options.reverse) {\n        legendItems.reverse();\n      }\n\n      this.legendItems = legendItems;\n    }\n  }, {\n    key: \"fit\",\n    value: function fit() {\n      var options = this.options,\n          ctx = this.ctx;\n\n      if (!options.display) {\n        this.width = this.height = 0;\n        return;\n      }\n\n      var labelOpts = options.labels;\n      var labelFont = toFont(labelOpts.font);\n      var fontSize = labelFont.size;\n\n      var titleHeight = this._computeTitleHeight();\n\n      var _getBoxSize = getBoxSize(labelOpts, fontSize),\n          boxWidth = _getBoxSize.boxWidth,\n          itemHeight = _getBoxSize.itemHeight;\n\n      var width, height;\n      ctx.font = labelFont.string;\n\n      if (this.isHorizontal()) {\n        width = this.maxWidth;\n        height = this._fitRows(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n      } else {\n        height = this.maxHeight;\n        width = this._fitCols(titleHeight, labelFont, boxWidth, itemHeight) + 10;\n      }\n\n      this.width = Math.min(width, options.maxWidth || this.maxWidth);\n      this.height = Math.min(height, options.maxHeight || this.maxHeight);\n    }\n  }, {\n    key: \"_fitRows\",\n    value: function _fitRows(titleHeight, fontSize, boxWidth, itemHeight) {\n      var ctx = this.ctx,\n          maxWidth = this.maxWidth,\n          padding = this.options.labels.padding;\n      var hitboxes = this.legendHitBoxes = [];\n      var lineWidths = this.lineWidths = [0];\n      var lineHeight = itemHeight + padding;\n      var totalHeight = titleHeight;\n      ctx.textAlign = 'left';\n      ctx.textBaseline = 'middle';\n      var row = -1;\n      var top = -lineHeight;\n      this.legendItems.forEach(function (legendItem, i) {\n        var itemWidth = boxWidth + fontSize / 2 + ctx.measureText(legendItem.text).width;\n\n        if (i === 0 || lineWidths[lineWidths.length - 1] + itemWidth + 2 * padding > maxWidth) {\n          totalHeight += lineHeight;\n          lineWidths[lineWidths.length - (i > 0 ? 0 : 1)] = 0;\n          top += lineHeight;\n          row++;\n        }\n\n        hitboxes[i] = {\n          left: 0,\n          top: top,\n          row: row,\n          width: itemWidth,\n          height: itemHeight\n        };\n        lineWidths[lineWidths.length - 1] += itemWidth + padding;\n      });\n      return totalHeight;\n    }\n  }, {\n    key: \"_fitCols\",\n    value: function _fitCols(titleHeight, labelFont, boxWidth, _itemHeight) {\n      var ctx = this.ctx,\n          maxHeight = this.maxHeight,\n          padding = this.options.labels.padding;\n      var hitboxes = this.legendHitBoxes = [];\n      var columnSizes = this.columnSizes = [];\n      var heightLimit = maxHeight - titleHeight;\n      var totalWidth = padding;\n      var currentColWidth = 0;\n      var currentColHeight = 0;\n      var left = 0;\n      var col = 0;\n      this.legendItems.forEach(function (legendItem, i) {\n        var _calculateItemSize = calculateItemSize(boxWidth, labelFont, ctx, legendItem, _itemHeight),\n            itemWidth = _calculateItemSize.itemWidth,\n            itemHeight = _calculateItemSize.itemHeight;\n\n        if (i > 0 && currentColHeight + itemHeight + 2 * padding > heightLimit) {\n          totalWidth += currentColWidth + padding;\n          columnSizes.push({\n            width: currentColWidth,\n            height: currentColHeight\n          });\n          left += currentColWidth + padding;\n          col++;\n          currentColWidth = currentColHeight = 0;\n        }\n\n        hitboxes[i] = {\n          left: left,\n          top: currentColHeight,\n          col: col,\n          width: itemWidth,\n          height: itemHeight\n        };\n        currentColWidth = Math.max(currentColWidth, itemWidth);\n        currentColHeight += itemHeight + padding;\n      });\n      totalWidth += currentColWidth;\n      columnSizes.push({\n        width: currentColWidth,\n        height: currentColHeight\n      });\n      return totalWidth;\n    }\n  }, {\n    key: \"adjustHitBoxes\",\n    value: function adjustHitBoxes() {\n      if (!this.options.display) {\n        return;\n      }\n\n      var titleHeight = this._computeTitleHeight();\n\n      var hitboxes = this.legendHitBoxes,\n          _this$options15 = this.options,\n          align = _this$options15.align,\n          padding = _this$options15.labels.padding,\n          rtl = _this$options15.rtl;\n      var rtlHelper = getRtlAdapter(rtl, this.left, this.width);\n\n      if (this.isHorizontal()) {\n        var row = 0;\n\n        var left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n\n        var _iterator24 = _createForOfIteratorHelper(hitboxes),\n            _step24;\n\n        try {\n          for (_iterator24.s(); !(_step24 = _iterator24.n()).done;) {\n            var hitbox = _step24.value;\n\n            if (row !== hitbox.row) {\n              row = hitbox.row;\n              left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n            }\n\n            hitbox.top += this.top + titleHeight + padding;\n            hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(left), hitbox.width);\n            left += hitbox.width + padding;\n          }\n        } catch (err) {\n          _iterator24.e(err);\n        } finally {\n          _iterator24.f();\n        }\n      } else {\n        var col = 0;\n\n        var top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n\n        var _iterator25 = _createForOfIteratorHelper(hitboxes),\n            _step25;\n\n        try {\n          for (_iterator25.s(); !(_step25 = _iterator25.n()).done;) {\n            var _hitbox = _step25.value;\n\n            if (_hitbox.col !== col) {\n              col = _hitbox.col;\n              top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n            }\n\n            _hitbox.top = top;\n            _hitbox.left += this.left + padding;\n            _hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(_hitbox.left), _hitbox.width);\n            top += _hitbox.height + padding;\n          }\n        } catch (err) {\n          _iterator25.e(err);\n        } finally {\n          _iterator25.f();\n        }\n      }\n    }\n  }, {\n    key: \"isHorizontal\",\n    value: function isHorizontal() {\n      return this.options.position === 'top' || this.options.position === 'bottom';\n    }\n  }, {\n    key: \"draw\",\n    value: function draw() {\n      if (this.options.display) {\n        var ctx = this.ctx;\n        clipArea(ctx, this);\n\n        this._draw();\n\n        unclipArea(ctx);\n      }\n    }\n  }, {\n    key: \"_draw\",\n    value: function _draw() {\n      var _this29 = this;\n\n      var opts = this.options,\n          columnSizes = this.columnSizes,\n          lineWidths = this.lineWidths,\n          ctx = this.ctx;\n      var align = opts.align,\n          labelOpts = opts.labels;\n      var defaultColor = defaults.color;\n      var rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n      var labelFont = toFont(labelOpts.font);\n      var padding = labelOpts.padding;\n      var fontSize = labelFont.size;\n      var halfFontSize = fontSize / 2;\n      var cursor;\n      this.drawTitle();\n      ctx.textAlign = rtlHelper.textAlign('left');\n      ctx.textBaseline = 'middle';\n      ctx.lineWidth = 0.5;\n      ctx.font = labelFont.string;\n\n      var _getBoxSize2 = getBoxSize(labelOpts, fontSize),\n          boxWidth = _getBoxSize2.boxWidth,\n          boxHeight = _getBoxSize2.boxHeight,\n          itemHeight = _getBoxSize2.itemHeight;\n\n      var drawLegendBox = function drawLegendBox(x, y, legendItem) {\n        if (isNaN(boxWidth) || boxWidth <= 0 || isNaN(boxHeight) || boxHeight < 0) {\n          return;\n        }\n\n        ctx.save();\n        var lineWidth = valueOrDefault(legendItem.lineWidth, 1);\n        ctx.fillStyle = valueOrDefault(legendItem.fillStyle, defaultColor);\n        ctx.lineCap = valueOrDefault(legendItem.lineCap, 'butt');\n        ctx.lineDashOffset = valueOrDefault(legendItem.lineDashOffset, 0);\n        ctx.lineJoin = valueOrDefault(legendItem.lineJoin, 'miter');\n        ctx.lineWidth = lineWidth;\n        ctx.strokeStyle = valueOrDefault(legendItem.strokeStyle, defaultColor);\n        ctx.setLineDash(valueOrDefault(legendItem.lineDash, []));\n\n        if (labelOpts.usePointStyle) {\n          var drawOptions = {\n            radius: boxHeight * Math.SQRT2 / 2,\n            pointStyle: legendItem.pointStyle,\n            rotation: legendItem.rotation,\n            borderWidth: lineWidth\n          };\n          var centerX = rtlHelper.xPlus(x, boxWidth / 2);\n          var centerY = y + halfFontSize;\n          drawPointLegend(ctx, drawOptions, centerX, centerY, labelOpts.pointStyleWidth && boxWidth);\n        } else {\n          var yBoxTop = y + Math.max((fontSize - boxHeight) / 2, 0);\n          var xBoxLeft = rtlHelper.leftForLtr(x, boxWidth);\n          var borderRadius = toTRBLCorners(legendItem.borderRadius);\n          ctx.beginPath();\n\n          if (Object.values(borderRadius).some(function (v) {\n            return v !== 0;\n          })) {\n            addRoundedRectPath(ctx, {\n              x: xBoxLeft,\n              y: yBoxTop,\n              w: boxWidth,\n              h: boxHeight,\n              radius: borderRadius\n            });\n          } else {\n            ctx.rect(xBoxLeft, yBoxTop, boxWidth, boxHeight);\n          }\n\n          ctx.fill();\n\n          if (lineWidth !== 0) {\n            ctx.stroke();\n          }\n        }\n\n        ctx.restore();\n      };\n\n      var fillText = function fillText(x, y, legendItem) {\n        renderText(ctx, legendItem.text, x, y + itemHeight / 2, labelFont, {\n          strikethrough: legendItem.hidden,\n          textAlign: rtlHelper.textAlign(legendItem.textAlign)\n        });\n      };\n\n      var isHorizontal = this.isHorizontal();\n\n      var titleHeight = this._computeTitleHeight();\n\n      if (isHorizontal) {\n        cursor = {\n          x: _alignStartEnd(align, this.left + padding, this.right - lineWidths[0]),\n          y: this.top + padding + titleHeight,\n          line: 0\n        };\n      } else {\n        cursor = {\n          x: this.left + padding,\n          y: _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[0].height),\n          line: 0\n        };\n      }\n\n      overrideTextDirection(this.ctx, opts.textDirection);\n      var lineHeight = itemHeight + padding;\n      this.legendItems.forEach(function (legendItem, i) {\n        ctx.strokeStyle = legendItem.fontColor;\n        ctx.fillStyle = legendItem.fontColor;\n        var textWidth = ctx.measureText(legendItem.text).width;\n        var textAlign = rtlHelper.textAlign(legendItem.textAlign || (legendItem.textAlign = labelOpts.textAlign));\n        var width = boxWidth + halfFontSize + textWidth;\n        var x = cursor.x;\n        var y = cursor.y;\n        rtlHelper.setWidth(_this29.width);\n\n        if (isHorizontal) {\n          if (i > 0 && x + width + padding > _this29.right) {\n            y = cursor.y += lineHeight;\n            cursor.line++;\n            x = cursor.x = _alignStartEnd(align, _this29.left + padding, _this29.right - lineWidths[cursor.line]);\n          }\n        } else if (i > 0 && y + lineHeight > _this29.bottom) {\n          x = cursor.x = x + columnSizes[cursor.line].width + padding;\n          cursor.line++;\n          y = cursor.y = _alignStartEnd(align, _this29.top + titleHeight + padding, _this29.bottom - columnSizes[cursor.line].height);\n        }\n\n        var realX = rtlHelper.x(x);\n        drawLegendBox(realX, y, legendItem);\n        x = _textX(textAlign, x + boxWidth + halfFontSize, isHorizontal ? x + width : _this29.right, opts.rtl);\n        fillText(rtlHelper.x(x), y, legendItem);\n\n        if (isHorizontal) {\n          cursor.x += width + padding;\n        } else if (typeof legendItem.text !== 'string') {\n          var fontLineHeight = labelFont.lineHeight;\n          cursor.y += calculateLegendItemHeight(legendItem, fontLineHeight) + padding;\n        } else {\n          cursor.y += lineHeight;\n        }\n      });\n      restoreTextDirection(this.ctx, opts.textDirection);\n    }\n  }, {\n    key: \"drawTitle\",\n    value: function drawTitle() {\n      var opts = this.options;\n      var titleOpts = opts.title;\n      var titleFont = toFont(titleOpts.font);\n      var titlePadding = toPadding(titleOpts.padding);\n\n      if (!titleOpts.display) {\n        return;\n      }\n\n      var rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n      var ctx = this.ctx;\n      var position = titleOpts.position;\n      var halfFontSize = titleFont.size / 2;\n      var topPaddingPlusHalfFontSize = titlePadding.top + halfFontSize;\n      var y;\n      var left = this.left;\n      var maxWidth = this.width;\n\n      if (this.isHorizontal()) {\n        maxWidth = Math.max.apply(Math, _toConsumableArray(this.lineWidths));\n        y = this.top + topPaddingPlusHalfFontSize;\n        left = _alignStartEnd(opts.align, left, this.right - maxWidth);\n      } else {\n        var maxHeight = this.columnSizes.reduce(function (acc, size) {\n          return Math.max(acc, size.height);\n        }, 0);\n        y = topPaddingPlusHalfFontSize + _alignStartEnd(opts.align, this.top, this.bottom - maxHeight - opts.labels.padding - this._computeTitleHeight());\n      }\n\n      var x = _alignStartEnd(position, left, left + maxWidth);\n\n      ctx.textAlign = rtlHelper.textAlign(_toLeftRightCenter(position));\n      ctx.textBaseline = 'middle';\n      ctx.strokeStyle = titleOpts.color;\n      ctx.fillStyle = titleOpts.color;\n      ctx.font = titleFont.string;\n      renderText(ctx, titleOpts.text, x, y, titleFont);\n    }\n  }, {\n    key: \"_computeTitleHeight\",\n    value: function _computeTitleHeight() {\n      var titleOpts = this.options.title;\n      var titleFont = toFont(titleOpts.font);\n      var titlePadding = toPadding(titleOpts.padding);\n      return titleOpts.display ? titleFont.lineHeight + titlePadding.height : 0;\n    }\n  }, {\n    key: \"_getLegendItemAt\",\n    value: function _getLegendItemAt(x, y) {\n      var i, hitBox, lh;\n\n      if (_isBetween(x, this.left, this.right) && _isBetween(y, this.top, this.bottom)) {\n        lh = this.legendHitBoxes;\n\n        for (i = 0; i < lh.length; ++i) {\n          hitBox = lh[i];\n\n          if (_isBetween(x, hitBox.left, hitBox.left + hitBox.width) && _isBetween(y, hitBox.top, hitBox.top + hitBox.height)) {\n            return this.legendItems[i];\n          }\n        }\n      }\n\n      return null;\n    }\n  }, {\n    key: \"handleEvent\",\n    value: function handleEvent(e) {\n      var opts = this.options;\n\n      if (!isListened(e.type, opts)) {\n        return;\n      }\n\n      var hoveredItem = this._getLegendItemAt(e.x, e.y);\n\n      if (e.type === 'mousemove' || e.type === 'mouseout') {\n        var previous = this._hoveredItem;\n        var sameItem = itemsEqual(previous, hoveredItem);\n\n        if (previous && !sameItem) {\n          callback(opts.onLeave, [e, previous, this], this);\n        }\n\n        this._hoveredItem = hoveredItem;\n\n        if (hoveredItem && !sameItem) {\n          callback(opts.onHover, [e, hoveredItem, this], this);\n        }\n      } else if (hoveredItem) {\n        callback(opts.onClick, [e, hoveredItem, this], this);\n      }\n    }\n  }]);\n\n  return Legend;\n}(Element);\n\nfunction calculateItemSize(boxWidth, labelFont, ctx, legendItem, _itemHeight) {\n  var itemWidth = calculateItemWidth(legendItem, boxWidth, labelFont, ctx);\n  var itemHeight = calculateItemHeight(_itemHeight, legendItem, labelFont.lineHeight);\n  return {\n    itemWidth: itemWidth,\n    itemHeight: itemHeight\n  };\n}\n\nfunction calculateItemWidth(legendItem, boxWidth, labelFont, ctx) {\n  var legendItemText = legendItem.text;\n\n  if (legendItemText && typeof legendItemText !== 'string') {\n    legendItemText = legendItemText.reduce(function (a, b) {\n      return a.length > b.length ? a : b;\n    });\n  }\n\n  return boxWidth + labelFont.size / 2 + ctx.measureText(legendItemText).width;\n}\n\nfunction calculateItemHeight(_itemHeight, legendItem, fontLineHeight) {\n  var itemHeight = _itemHeight;\n\n  if (typeof legendItem.text !== 'string') {\n    itemHeight = calculateLegendItemHeight(legendItem, fontLineHeight);\n  }\n\n  return itemHeight;\n}\n\nfunction calculateLegendItemHeight(legendItem, fontLineHeight) {\n  var labelHeight = legendItem.text ? legendItem.text.length : 0;\n  return fontLineHeight * labelHeight;\n}\n\nfunction isListened(type, opts) {\n  if ((type === 'mousemove' || type === 'mouseout') && (opts.onHover || opts.onLeave)) {\n    return true;\n  }\n\n  if (opts.onClick && (type === 'click' || type === 'mouseup')) {\n    return true;\n  }\n\n  return false;\n}\n\nvar plugin_legend = {\n  id: 'legend',\n  _element: Legend,\n  start: function start(chart, _args, options) {\n    var legend = chart.legend = new Legend({\n      ctx: chart.ctx,\n      options: options,\n      chart: chart\n    });\n    layouts.configure(chart, legend, options);\n    layouts.addBox(chart, legend);\n  },\n  stop: function stop(chart) {\n    layouts.removeBox(chart, chart.legend);\n    delete chart.legend;\n  },\n  beforeUpdate: function beforeUpdate(chart, _args, options) {\n    var legend = chart.legend;\n    layouts.configure(chart, legend, options);\n    legend.options = options;\n  },\n  afterUpdate: function afterUpdate(chart) {\n    var legend = chart.legend;\n    legend.buildLabels();\n    legend.adjustHitBoxes();\n  },\n  afterEvent: function afterEvent(chart, args) {\n    if (!args.replay) {\n      chart.legend.handleEvent(args.event);\n    }\n  },\n  defaults: {\n    display: true,\n    position: 'top',\n    align: 'center',\n    fullSize: true,\n    reverse: false,\n    weight: 1000,\n    onClick: function onClick(e, legendItem, legend) {\n      var index = legendItem.datasetIndex;\n      var ci = legend.chart;\n\n      if (ci.isDatasetVisible(index)) {\n        ci.hide(index);\n        legendItem.hidden = true;\n      } else {\n        ci.show(index);\n        legendItem.hidden = false;\n      }\n    },\n    onHover: null,\n    onLeave: null,\n    labels: {\n      color: function color(ctx) {\n        return ctx.chart.options.color;\n      },\n      boxWidth: 40,\n      padding: 10,\n      generateLabels: function generateLabels(chart) {\n        var datasets = chart.data.datasets;\n        var _chart$legend$options = chart.legend.options.labels,\n            usePointStyle = _chart$legend$options.usePointStyle,\n            pointStyle = _chart$legend$options.pointStyle,\n            textAlign = _chart$legend$options.textAlign,\n            color = _chart$legend$options.color,\n            useBorderRadius = _chart$legend$options.useBorderRadius,\n            borderRadius = _chart$legend$options.borderRadius;\n        return chart._getSortedDatasetMetas().map(function (meta) {\n          var style = meta.controller.getStyle(usePointStyle ? 0 : undefined);\n          var borderWidth = toPadding(style.borderWidth);\n          return {\n            text: datasets[meta.index].label,\n            fillStyle: style.backgroundColor,\n            fontColor: color,\n            hidden: !meta.visible,\n            lineCap: style.borderCapStyle,\n            lineDash: style.borderDash,\n            lineDashOffset: style.borderDashOffset,\n            lineJoin: style.borderJoinStyle,\n            lineWidth: (borderWidth.width + borderWidth.height) / 4,\n            strokeStyle: style.borderColor,\n            pointStyle: pointStyle || style.pointStyle,\n            rotation: style.rotation,\n            textAlign: textAlign || style.textAlign,\n            borderRadius: useBorderRadius && (borderRadius || style.borderRadius),\n            datasetIndex: meta.index\n          };\n        }, this);\n      }\n    },\n    title: {\n      color: function color(ctx) {\n        return ctx.chart.options.color;\n      },\n      display: false,\n      position: 'center',\n      text: ''\n    }\n  },\n  descriptors: {\n    _scriptable: function _scriptable(name) {\n      return !name.startsWith('on');\n    },\n    labels: {\n      _scriptable: function _scriptable(name) {\n        return !['generateLabels', 'filter', 'sort'].includes(name);\n      }\n    }\n  }\n};\n\nvar Title = /*#__PURE__*/function (_Element7) {\n  _inherits(Title, _Element7);\n\n  var _super17 = _createSuper(Title);\n\n  function Title(config) {\n    var _this30;\n\n    _classCallCheck(this, Title);\n\n    _this30 = _super17.call(this);\n    _this30.chart = config.chart;\n    _this30.options = config.options;\n    _this30.ctx = config.ctx;\n    _this30._padding = undefined;\n    _this30.top = undefined;\n    _this30.bottom = undefined;\n    _this30.left = undefined;\n    _this30.right = undefined;\n    _this30.width = undefined;\n    _this30.height = undefined;\n    _this30.position = undefined;\n    _this30.weight = undefined;\n    _this30.fullSize = undefined;\n    return _this30;\n  }\n\n  _createClass(Title, [{\n    key: \"update\",\n    value: function update(maxWidth, maxHeight) {\n      var opts = this.options;\n      this.left = 0;\n      this.top = 0;\n\n      if (!opts.display) {\n        this.width = this.height = this.right = this.bottom = 0;\n        return;\n      }\n\n      this.width = this.right = maxWidth;\n      this.height = this.bottom = maxHeight;\n      var lineCount = isArray(opts.text) ? opts.text.length : 1;\n      this._padding = toPadding(opts.padding);\n\n      var textSize = lineCount * toFont(opts.font).lineHeight + this._padding.height;\n\n      if (this.isHorizontal()) {\n        this.height = textSize;\n      } else {\n        this.width = textSize;\n      }\n    }\n  }, {\n    key: \"isHorizontal\",\n    value: function isHorizontal() {\n      var pos = this.options.position;\n      return pos === 'top' || pos === 'bottom';\n    }\n  }, {\n    key: \"_drawArgs\",\n    value: function _drawArgs(offset) {\n      var top = this.top,\n          left = this.left,\n          bottom = this.bottom,\n          right = this.right,\n          options = this.options;\n      var align = options.align;\n      var rotation = 0;\n      var maxWidth, titleX, titleY;\n\n      if (this.isHorizontal()) {\n        titleX = _alignStartEnd(align, left, right);\n        titleY = top + offset;\n        maxWidth = right - left;\n      } else {\n        if (options.position === 'left') {\n          titleX = left + offset;\n          titleY = _alignStartEnd(align, bottom, top);\n          rotation = PI * -0.5;\n        } else {\n          titleX = right - offset;\n          titleY = _alignStartEnd(align, top, bottom);\n          rotation = PI * 0.5;\n        }\n\n        maxWidth = bottom - top;\n      }\n\n      return {\n        titleX: titleX,\n        titleY: titleY,\n        maxWidth: maxWidth,\n        rotation: rotation\n      };\n    }\n  }, {\n    key: \"draw\",\n    value: function draw() {\n      var ctx = this.ctx;\n      var opts = this.options;\n\n      if (!opts.display) {\n        return;\n      }\n\n      var fontOpts = toFont(opts.font);\n      var lineHeight = fontOpts.lineHeight;\n      var offset = lineHeight / 2 + this._padding.top;\n\n      var _this$_drawArgs = this._drawArgs(offset),\n          titleX = _this$_drawArgs.titleX,\n          titleY = _this$_drawArgs.titleY,\n          maxWidth = _this$_drawArgs.maxWidth,\n          rotation = _this$_drawArgs.rotation;\n\n      renderText(ctx, opts.text, 0, 0, fontOpts, {\n        color: opts.color,\n        maxWidth: maxWidth,\n        rotation: rotation,\n        textAlign: _toLeftRightCenter(opts.align),\n        textBaseline: 'middle',\n        translation: [titleX, titleY]\n      });\n    }\n  }]);\n\n  return Title;\n}(Element);\n\nfunction createTitle(chart, titleOpts) {\n  var title = new Title({\n    ctx: chart.ctx,\n    options: titleOpts,\n    chart: chart\n  });\n  layouts.configure(chart, title, titleOpts);\n  layouts.addBox(chart, title);\n  chart.titleBlock = title;\n}\n\nvar plugin_title = {\n  id: 'title',\n  _element: Title,\n  start: function start(chart, _args, options) {\n    createTitle(chart, options);\n  },\n  stop: function stop(chart) {\n    var titleBlock = chart.titleBlock;\n    layouts.removeBox(chart, titleBlock);\n    delete chart.titleBlock;\n  },\n  beforeUpdate: function beforeUpdate(chart, _args, options) {\n    var title = chart.titleBlock;\n    layouts.configure(chart, title, options);\n    title.options = options;\n  },\n  defaults: {\n    align: 'center',\n    display: false,\n    font: {\n      weight: 'bold'\n    },\n    fullSize: true,\n    padding: 10,\n    position: 'top',\n    text: '',\n    weight: 2000\n  },\n  defaultRoutes: {\n    color: 'color'\n  },\n  descriptors: {\n    _scriptable: true,\n    _indexable: false\n  }\n};\nvar map = new WeakMap();\nvar plugin_subtitle = {\n  id: 'subtitle',\n  start: function start(chart, _args, options) {\n    var title = new Title({\n      ctx: chart.ctx,\n      options: options,\n      chart: chart\n    });\n    layouts.configure(chart, title, options);\n    layouts.addBox(chart, title);\n    map.set(chart, title);\n  },\n  stop: function stop(chart) {\n    layouts.removeBox(chart, map.get(chart));\n    map.delete(chart);\n  },\n  beforeUpdate: function beforeUpdate(chart, _args, options) {\n    var title = map.get(chart);\n    layouts.configure(chart, title, options);\n    title.options = options;\n  },\n  defaults: {\n    align: 'center',\n    display: false,\n    font: {\n      weight: 'normal'\n    },\n    fullSize: true,\n    padding: 0,\n    position: 'top',\n    text: '',\n    weight: 1500\n  },\n  defaultRoutes: {\n    color: 'color'\n  },\n  descriptors: {\n    _scriptable: true,\n    _indexable: false\n  }\n};\nvar positioners = {\n  average: function average(items) {\n    if (!items.length) {\n      return false;\n    }\n\n    var i, len;\n    var xSet = new Set();\n    var y = 0;\n    var count = 0;\n\n    for (i = 0, len = items.length; i < len; ++i) {\n      var el = items[i].element;\n\n      if (el && el.hasValue()) {\n        var pos = el.tooltipPosition();\n        xSet.add(pos.x);\n        y += pos.y;\n        ++count;\n      }\n    }\n\n    if (count === 0 || xSet.size === 0) {\n      return false;\n    }\n\n    var xAverage = _toConsumableArray(xSet).reduce(function (a, b) {\n      return a + b;\n    }) / xSet.size;\n    return {\n      x: xAverage,\n      y: y / count\n    };\n  },\n  nearest: function nearest(items, eventPosition) {\n    if (!items.length) {\n      return false;\n    }\n\n    var x = eventPosition.x;\n    var y = eventPosition.y;\n    var minDistance = Number.POSITIVE_INFINITY;\n    var i, len, nearestElement;\n\n    for (i = 0, len = items.length; i < len; ++i) {\n      var el = items[i].element;\n\n      if (el && el.hasValue()) {\n        var center = el.getCenterPoint();\n        var d = distanceBetweenPoints(eventPosition, center);\n\n        if (d < minDistance) {\n          minDistance = d;\n          nearestElement = el;\n        }\n      }\n    }\n\n    if (nearestElement) {\n      var tp = nearestElement.tooltipPosition();\n      x = tp.x;\n      y = tp.y;\n    }\n\n    return {\n      x: x,\n      y: y\n    };\n  }\n};\n\nfunction pushOrConcat(base, toPush) {\n  if (toPush) {\n    if (isArray(toPush)) {\n      Array.prototype.push.apply(base, toPush);\n    } else {\n      base.push(toPush);\n    }\n  }\n\n  return base;\n}\n\nfunction splitNewlines(str) {\n  if ((typeof str === 'string' || str instanceof String) && str.indexOf('\\n') > -1) {\n    return str.split('\\n');\n  }\n\n  return str;\n}\n\nfunction createTooltipItem(chart, item) {\n  var element = item.element,\n      datasetIndex = item.datasetIndex,\n      index = item.index;\n  var controller = chart.getDatasetMeta(datasetIndex).controller;\n\n  var _controller$getLabelA = controller.getLabelAndValue(index),\n      label = _controller$getLabelA.label,\n      value = _controller$getLabelA.value;\n\n  return {\n    chart: chart,\n    label: label,\n    parsed: controller.getParsed(index),\n    raw: chart.data.datasets[datasetIndex].data[index],\n    formattedValue: value,\n    dataset: controller.getDataset(),\n    dataIndex: index,\n    datasetIndex: datasetIndex,\n    element: element\n  };\n}\n\nfunction getTooltipSize(tooltip, options) {\n  var ctx = tooltip.chart.ctx;\n  var body = tooltip.body,\n      footer = tooltip.footer,\n      title = tooltip.title;\n  var boxWidth = options.boxWidth,\n      boxHeight = options.boxHeight;\n  var bodyFont = toFont(options.bodyFont);\n  var titleFont = toFont(options.titleFont);\n  var footerFont = toFont(options.footerFont);\n  var titleLineCount = title.length;\n  var footerLineCount = footer.length;\n  var bodyLineItemCount = body.length;\n  var padding = toPadding(options.padding);\n  var height = padding.height;\n  var width = 0;\n  var combinedBodyLength = body.reduce(function (count, bodyItem) {\n    return count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length;\n  }, 0);\n  combinedBodyLength += tooltip.beforeBody.length + tooltip.afterBody.length;\n\n  if (titleLineCount) {\n    height += titleLineCount * titleFont.lineHeight + (titleLineCount - 1) * options.titleSpacing + options.titleMarginBottom;\n  }\n\n  if (combinedBodyLength) {\n    var bodyLineHeight = options.displayColors ? Math.max(boxHeight, bodyFont.lineHeight) : bodyFont.lineHeight;\n    height += bodyLineItemCount * bodyLineHeight + (combinedBodyLength - bodyLineItemCount) * bodyFont.lineHeight + (combinedBodyLength - 1) * options.bodySpacing;\n  }\n\n  if (footerLineCount) {\n    height += options.footerMarginTop + footerLineCount * footerFont.lineHeight + (footerLineCount - 1) * options.footerSpacing;\n  }\n\n  var widthPadding = 0;\n\n  var maxLineWidth = function maxLineWidth(line) {\n    width = Math.max(width, ctx.measureText(line).width + widthPadding);\n  };\n\n  ctx.save();\n  ctx.font = titleFont.string;\n  each(tooltip.title, maxLineWidth);\n  ctx.font = bodyFont.string;\n  each(tooltip.beforeBody.concat(tooltip.afterBody), maxLineWidth);\n  widthPadding = options.displayColors ? boxWidth + 2 + options.boxPadding : 0;\n  each(body, function (bodyItem) {\n    each(bodyItem.before, maxLineWidth);\n    each(bodyItem.lines, maxLineWidth);\n    each(bodyItem.after, maxLineWidth);\n  });\n  widthPadding = 0;\n  ctx.font = footerFont.string;\n  each(tooltip.footer, maxLineWidth);\n  ctx.restore();\n  width += padding.width;\n  return {\n    width: width,\n    height: height\n  };\n}\n\nfunction determineYAlign(chart, size) {\n  var y = size.y,\n      height = size.height;\n\n  if (y < height / 2) {\n    return 'top';\n  } else if (y > chart.height - height / 2) {\n    return 'bottom';\n  }\n\n  return 'center';\n}\n\nfunction doesNotFitWithAlign(xAlign, chart, options, size) {\n  var x = size.x,\n      width = size.width;\n  var caret = options.caretSize + options.caretPadding;\n\n  if (xAlign === 'left' && x + width + caret > chart.width) {\n    return true;\n  }\n\n  if (xAlign === 'right' && x - width - caret < 0) {\n    return true;\n  }\n}\n\nfunction determineXAlign(chart, options, size, yAlign) {\n  var x = size.x,\n      width = size.width;\n  var chartWidth = chart.width,\n      _chart$chartArea = chart.chartArea,\n      left = _chart$chartArea.left,\n      right = _chart$chartArea.right;\n  var xAlign = 'center';\n\n  if (yAlign === 'center') {\n    xAlign = x <= (left + right) / 2 ? 'left' : 'right';\n  } else if (x <= width / 2) {\n    xAlign = 'left';\n  } else if (x >= chartWidth - width / 2) {\n    xAlign = 'right';\n  }\n\n  if (doesNotFitWithAlign(xAlign, chart, options, size)) {\n    xAlign = 'center';\n  }\n\n  return xAlign;\n}\n\nfunction determineAlignment(chart, options, size) {\n  var yAlign = size.yAlign || options.yAlign || determineYAlign(chart, size);\n  return {\n    xAlign: size.xAlign || options.xAlign || determineXAlign(chart, options, size, yAlign),\n    yAlign: yAlign\n  };\n}\n\nfunction alignX(size, xAlign) {\n  var x = size.x,\n      width = size.width;\n\n  if (xAlign === 'right') {\n    x -= width;\n  } else if (xAlign === 'center') {\n    x -= width / 2;\n  }\n\n  return x;\n}\n\nfunction alignY(size, yAlign, paddingAndSize) {\n  var y = size.y,\n      height = size.height;\n\n  if (yAlign === 'top') {\n    y += paddingAndSize;\n  } else if (yAlign === 'bottom') {\n    y -= height + paddingAndSize;\n  } else {\n    y -= height / 2;\n  }\n\n  return y;\n}\n\nfunction getBackgroundPoint(options, size, alignment, chart) {\n  var caretSize = options.caretSize,\n      caretPadding = options.caretPadding,\n      cornerRadius = options.cornerRadius;\n  var xAlign = alignment.xAlign,\n      yAlign = alignment.yAlign;\n  var paddingAndSize = caretSize + caretPadding;\n\n  var _toTRBLCorners = toTRBLCorners(cornerRadius),\n      topLeft = _toTRBLCorners.topLeft,\n      topRight = _toTRBLCorners.topRight,\n      bottomLeft = _toTRBLCorners.bottomLeft,\n      bottomRight = _toTRBLCorners.bottomRight;\n\n  var x = alignX(size, xAlign);\n  var y = alignY(size, yAlign, paddingAndSize);\n\n  if (yAlign === 'center') {\n    if (xAlign === 'left') {\n      x += paddingAndSize;\n    } else if (xAlign === 'right') {\n      x -= paddingAndSize;\n    }\n  } else if (xAlign === 'left') {\n    x -= Math.max(topLeft, bottomLeft) + caretSize;\n  } else if (xAlign === 'right') {\n    x += Math.max(topRight, bottomRight) + caretSize;\n  }\n\n  return {\n    x: _limitValue(x, 0, chart.width - size.width),\n    y: _limitValue(y, 0, chart.height - size.height)\n  };\n}\n\nfunction getAlignedX(tooltip, align, options) {\n  var padding = toPadding(options.padding);\n  return align === 'center' ? tooltip.x + tooltip.width / 2 : align === 'right' ? tooltip.x + tooltip.width - padding.right : tooltip.x + padding.left;\n}\n\nfunction getBeforeAfterBodyLines(callback) {\n  return pushOrConcat([], splitNewlines(callback));\n}\n\nfunction createTooltipContext(parent, tooltip, tooltipItems) {\n  return createContext(parent, {\n    tooltip: tooltip,\n    tooltipItems: tooltipItems,\n    type: 'tooltip'\n  });\n}\n\nfunction overrideCallbacks(callbacks, context) {\n  var override = context && context.dataset && context.dataset.tooltip && context.dataset.tooltip.callbacks;\n  return override ? callbacks.override(override) : callbacks;\n}\n\nvar defaultCallbacks = {\n  beforeTitle: noop,\n  title: function title(tooltipItems) {\n    if (tooltipItems.length > 0) {\n      var item = tooltipItems[0];\n      var labels = item.chart.data.labels;\n      var labelCount = labels ? labels.length : 0;\n\n      if (this && this.options && this.options.mode === 'dataset') {\n        return item.dataset.label || '';\n      } else if (item.label) {\n        return item.label;\n      } else if (labelCount > 0 && item.dataIndex < labelCount) {\n        return labels[item.dataIndex];\n      }\n    }\n\n    return '';\n  },\n  afterTitle: noop,\n  beforeBody: noop,\n  beforeLabel: noop,\n  label: function label(tooltipItem) {\n    if (this && this.options && this.options.mode === 'dataset') {\n      return tooltipItem.label + ': ' + tooltipItem.formattedValue || tooltipItem.formattedValue;\n    }\n\n    var label = tooltipItem.dataset.label || '';\n\n    if (label) {\n      label += ': ';\n    }\n\n    var value = tooltipItem.formattedValue;\n\n    if (!isNullOrUndef(value)) {\n      label += value;\n    }\n\n    return label;\n  },\n  labelColor: function labelColor(tooltipItem) {\n    var meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n    var options = meta.controller.getStyle(tooltipItem.dataIndex);\n    return {\n      borderColor: options.borderColor,\n      backgroundColor: options.backgroundColor,\n      borderWidth: options.borderWidth,\n      borderDash: options.borderDash,\n      borderDashOffset: options.borderDashOffset,\n      borderRadius: 0\n    };\n  },\n  labelTextColor: function labelTextColor() {\n    return this.options.bodyColor;\n  },\n  labelPointStyle: function labelPointStyle(tooltipItem) {\n    var meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n    var options = meta.controller.getStyle(tooltipItem.dataIndex);\n    return {\n      pointStyle: options.pointStyle,\n      rotation: options.rotation\n    };\n  },\n  afterLabel: noop,\n  afterBody: noop,\n  beforeFooter: noop,\n  footer: noop,\n  afterFooter: noop\n};\n\nfunction invokeCallbackWithFallback(callbacks, name, ctx, arg) {\n  var result = callbacks[name].call(ctx, arg);\n\n  if (typeof result === 'undefined') {\n    return defaultCallbacks[name].call(ctx, arg);\n  }\n\n  return result;\n}\n\nvar Tooltip = /*#__PURE__*/function (_Element8) {\n  _inherits(Tooltip, _Element8);\n\n  var _super18 = _createSuper(Tooltip);\n\n  function Tooltip(config) {\n    var _this31;\n\n    _classCallCheck(this, Tooltip);\n\n    _this31 = _super18.call(this);\n    _this31.opacity = 0;\n    _this31._active = [];\n    _this31._eventPosition = undefined;\n    _this31._size = undefined;\n    _this31._cachedAnimations = undefined;\n    _this31._tooltipItems = [];\n    _this31.$animations = undefined;\n    _this31.$context = undefined;\n    _this31.chart = config.chart;\n    _this31.options = config.options;\n    _this31.dataPoints = undefined;\n    _this31.title = undefined;\n    _this31.beforeBody = undefined;\n    _this31.body = undefined;\n    _this31.afterBody = undefined;\n    _this31.footer = undefined;\n    _this31.xAlign = undefined;\n    _this31.yAlign = undefined;\n    _this31.x = undefined;\n    _this31.y = undefined;\n    _this31.height = undefined;\n    _this31.width = undefined;\n    _this31.caretX = undefined;\n    _this31.caretY = undefined;\n    _this31.labelColors = undefined;\n    _this31.labelPointStyles = undefined;\n    _this31.labelTextColors = undefined;\n    return _this31;\n  }\n\n  _createClass(Tooltip, [{\n    key: \"initialize\",\n    value: function initialize(options) {\n      this.options = options;\n      this._cachedAnimations = undefined;\n      this.$context = undefined;\n    }\n  }, {\n    key: \"_resolveAnimations\",\n    value: function _resolveAnimations() {\n      var cached = this._cachedAnimations;\n\n      if (cached) {\n        return cached;\n      }\n\n      var chart = this.chart;\n      var options = this.options.setContext(this.getContext());\n      var opts = options.enabled && chart.options.animation && options.animations;\n      var animations = new Animations(this.chart, opts);\n\n      if (opts._cacheable) {\n        this._cachedAnimations = Object.freeze(animations);\n      }\n\n      return animations;\n    }\n  }, {\n    key: \"getContext\",\n    value: function getContext() {\n      return this.$context || (this.$context = createTooltipContext(this.chart.getContext(), this, this._tooltipItems));\n    }\n  }, {\n    key: \"getTitle\",\n    value: function getTitle(context, options) {\n      var callbacks = options.callbacks;\n      var beforeTitle = invokeCallbackWithFallback(callbacks, 'beforeTitle', this, context);\n      var title = invokeCallbackWithFallback(callbacks, 'title', this, context);\n      var afterTitle = invokeCallbackWithFallback(callbacks, 'afterTitle', this, context);\n      var lines = [];\n      lines = pushOrConcat(lines, splitNewlines(beforeTitle));\n      lines = pushOrConcat(lines, splitNewlines(title));\n      lines = pushOrConcat(lines, splitNewlines(afterTitle));\n      return lines;\n    }\n  }, {\n    key: \"getBeforeBody\",\n    value: function getBeforeBody(tooltipItems, options) {\n      return getBeforeAfterBodyLines(invokeCallbackWithFallback(options.callbacks, 'beforeBody', this, tooltipItems));\n    }\n  }, {\n    key: \"getBody\",\n    value: function getBody(tooltipItems, options) {\n      var _this32 = this;\n\n      var callbacks = options.callbacks;\n      var bodyItems = [];\n      each(tooltipItems, function (context) {\n        var bodyItem = {\n          before: [],\n          lines: [],\n          after: []\n        };\n        var scoped = overrideCallbacks(callbacks, context);\n        pushOrConcat(bodyItem.before, splitNewlines(invokeCallbackWithFallback(scoped, 'beforeLabel', _this32, context)));\n        pushOrConcat(bodyItem.lines, invokeCallbackWithFallback(scoped, 'label', _this32, context));\n        pushOrConcat(bodyItem.after, splitNewlines(invokeCallbackWithFallback(scoped, 'afterLabel', _this32, context)));\n        bodyItems.push(bodyItem);\n      });\n      return bodyItems;\n    }\n  }, {\n    key: \"getAfterBody\",\n    value: function getAfterBody(tooltipItems, options) {\n      return getBeforeAfterBodyLines(invokeCallbackWithFallback(options.callbacks, 'afterBody', this, tooltipItems));\n    }\n  }, {\n    key: \"getFooter\",\n    value: function getFooter(tooltipItems, options) {\n      var callbacks = options.callbacks;\n      var beforeFooter = invokeCallbackWithFallback(callbacks, 'beforeFooter', this, tooltipItems);\n      var footer = invokeCallbackWithFallback(callbacks, 'footer', this, tooltipItems);\n      var afterFooter = invokeCallbackWithFallback(callbacks, 'afterFooter', this, tooltipItems);\n      var lines = [];\n      lines = pushOrConcat(lines, splitNewlines(beforeFooter));\n      lines = pushOrConcat(lines, splitNewlines(footer));\n      lines = pushOrConcat(lines, splitNewlines(afterFooter));\n      return lines;\n    }\n  }, {\n    key: \"_createItems\",\n    value: function _createItems(options) {\n      var _this33 = this;\n\n      var active = this._active;\n      var data = this.chart.data;\n      var labelColors = [];\n      var labelPointStyles = [];\n      var labelTextColors = [];\n      var tooltipItems = [];\n      var i, len;\n\n      for (i = 0, len = active.length; i < len; ++i) {\n        tooltipItems.push(createTooltipItem(this.chart, active[i]));\n      }\n\n      if (options.filter) {\n        tooltipItems = tooltipItems.filter(function (element, index, array) {\n          return options.filter(element, index, array, data);\n        });\n      }\n\n      if (options.itemSort) {\n        tooltipItems = tooltipItems.sort(function (a, b) {\n          return options.itemSort(a, b, data);\n        });\n      }\n\n      each(tooltipItems, function (context) {\n        var scoped = overrideCallbacks(options.callbacks, context);\n        labelColors.push(invokeCallbackWithFallback(scoped, 'labelColor', _this33, context));\n        labelPointStyles.push(invokeCallbackWithFallback(scoped, 'labelPointStyle', _this33, context));\n        labelTextColors.push(invokeCallbackWithFallback(scoped, 'labelTextColor', _this33, context));\n      });\n      this.labelColors = labelColors;\n      this.labelPointStyles = labelPointStyles;\n      this.labelTextColors = labelTextColors;\n      this.dataPoints = tooltipItems;\n      return tooltipItems;\n    }\n  }, {\n    key: \"update\",\n    value: function update(changed, replay) {\n      var options = this.options.setContext(this.getContext());\n      var active = this._active;\n      var properties;\n      var tooltipItems = [];\n\n      if (!active.length) {\n        if (this.opacity !== 0) {\n          properties = {\n            opacity: 0\n          };\n        }\n      } else {\n        var position = positioners[options.position].call(this, active, this._eventPosition);\n        tooltipItems = this._createItems(options);\n        this.title = this.getTitle(tooltipItems, options);\n        this.beforeBody = this.getBeforeBody(tooltipItems, options);\n        this.body = this.getBody(tooltipItems, options);\n        this.afterBody = this.getAfterBody(tooltipItems, options);\n        this.footer = this.getFooter(tooltipItems, options);\n        var size = this._size = getTooltipSize(this, options);\n        var positionAndSize = Object.assign({}, position, size);\n        var alignment = determineAlignment(this.chart, options, positionAndSize);\n        var backgroundPoint = getBackgroundPoint(options, positionAndSize, alignment, this.chart);\n        this.xAlign = alignment.xAlign;\n        this.yAlign = alignment.yAlign;\n        properties = {\n          opacity: 1,\n          x: backgroundPoint.x,\n          y: backgroundPoint.y,\n          width: size.width,\n          height: size.height,\n          caretX: position.x,\n          caretY: position.y\n        };\n      }\n\n      this._tooltipItems = tooltipItems;\n      this.$context = undefined;\n\n      if (properties) {\n        this._resolveAnimations().update(this, properties);\n      }\n\n      if (changed && options.external) {\n        options.external.call(this, {\n          chart: this.chart,\n          tooltip: this,\n          replay: replay\n        });\n      }\n    }\n  }, {\n    key: \"drawCaret\",\n    value: function drawCaret(tooltipPoint, ctx, size, options) {\n      var caretPosition = this.getCaretPosition(tooltipPoint, size, options);\n      ctx.lineTo(caretPosition.x1, caretPosition.y1);\n      ctx.lineTo(caretPosition.x2, caretPosition.y2);\n      ctx.lineTo(caretPosition.x3, caretPosition.y3);\n    }\n  }, {\n    key: \"getCaretPosition\",\n    value: function getCaretPosition(tooltipPoint, size, options) {\n      var xAlign = this.xAlign,\n          yAlign = this.yAlign;\n      var caretSize = options.caretSize,\n          cornerRadius = options.cornerRadius;\n\n      var _toTRBLCorners2 = toTRBLCorners(cornerRadius),\n          topLeft = _toTRBLCorners2.topLeft,\n          topRight = _toTRBLCorners2.topRight,\n          bottomLeft = _toTRBLCorners2.bottomLeft,\n          bottomRight = _toTRBLCorners2.bottomRight;\n\n      var ptX = tooltipPoint.x,\n          ptY = tooltipPoint.y;\n      var width = size.width,\n          height = size.height;\n      var x1, x2, x3, y1, y2, y3;\n\n      if (yAlign === 'center') {\n        y2 = ptY + height / 2;\n\n        if (xAlign === 'left') {\n          x1 = ptX;\n          x2 = x1 - caretSize;\n          y1 = y2 + caretSize;\n          y3 = y2 - caretSize;\n        } else {\n          x1 = ptX + width;\n          x2 = x1 + caretSize;\n          y1 = y2 - caretSize;\n          y3 = y2 + caretSize;\n        }\n\n        x3 = x1;\n      } else {\n        if (xAlign === 'left') {\n          x2 = ptX + Math.max(topLeft, bottomLeft) + caretSize;\n        } else if (xAlign === 'right') {\n          x2 = ptX + width - Math.max(topRight, bottomRight) - caretSize;\n        } else {\n          x2 = this.caretX;\n        }\n\n        if (yAlign === 'top') {\n          y1 = ptY;\n          y2 = y1 - caretSize;\n          x1 = x2 - caretSize;\n          x3 = x2 + caretSize;\n        } else {\n          y1 = ptY + height;\n          y2 = y1 + caretSize;\n          x1 = x2 + caretSize;\n          x3 = x2 - caretSize;\n        }\n\n        y3 = y1;\n      }\n\n      return {\n        x1: x1,\n        x2: x2,\n        x3: x3,\n        y1: y1,\n        y2: y2,\n        y3: y3\n      };\n    }\n  }, {\n    key: \"drawTitle\",\n    value: function drawTitle(pt, ctx, options) {\n      var title = this.title;\n      var length = title.length;\n      var titleFont, titleSpacing, i;\n\n      if (length) {\n        var rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n        pt.x = getAlignedX(this, options.titleAlign, options);\n        ctx.textAlign = rtlHelper.textAlign(options.titleAlign);\n        ctx.textBaseline = 'middle';\n        titleFont = toFont(options.titleFont);\n        titleSpacing = options.titleSpacing;\n        ctx.fillStyle = options.titleColor;\n        ctx.font = titleFont.string;\n\n        for (i = 0; i < length; ++i) {\n          ctx.fillText(title[i], rtlHelper.x(pt.x), pt.y + titleFont.lineHeight / 2);\n          pt.y += titleFont.lineHeight + titleSpacing;\n\n          if (i + 1 === length) {\n            pt.y += options.titleMarginBottom - titleSpacing;\n          }\n        }\n      }\n    }\n  }, {\n    key: \"_drawColorBox\",\n    value: function _drawColorBox(ctx, pt, i, rtlHelper, options) {\n      var labelColor = this.labelColors[i];\n      var labelPointStyle = this.labelPointStyles[i];\n      var boxHeight = options.boxHeight,\n          boxWidth = options.boxWidth;\n      var bodyFont = toFont(options.bodyFont);\n      var colorX = getAlignedX(this, 'left', options);\n      var rtlColorX = rtlHelper.x(colorX);\n      var yOffSet = boxHeight < bodyFont.lineHeight ? (bodyFont.lineHeight - boxHeight) / 2 : 0;\n      var colorY = pt.y + yOffSet;\n\n      if (options.usePointStyle) {\n        var drawOptions = {\n          radius: Math.min(boxWidth, boxHeight) / 2,\n          pointStyle: labelPointStyle.pointStyle,\n          rotation: labelPointStyle.rotation,\n          borderWidth: 1\n        };\n        var centerX = rtlHelper.leftForLtr(rtlColorX, boxWidth) + boxWidth / 2;\n        var centerY = colorY + boxHeight / 2;\n        ctx.strokeStyle = options.multiKeyBackground;\n        ctx.fillStyle = options.multiKeyBackground;\n        drawPoint(ctx, drawOptions, centerX, centerY);\n        ctx.strokeStyle = labelColor.borderColor;\n        ctx.fillStyle = labelColor.backgroundColor;\n        drawPoint(ctx, drawOptions, centerX, centerY);\n      } else {\n        ctx.lineWidth = isObject(labelColor.borderWidth) ? Math.max.apply(Math, _toConsumableArray(Object.values(labelColor.borderWidth))) : labelColor.borderWidth || 1;\n        ctx.strokeStyle = labelColor.borderColor;\n        ctx.setLineDash(labelColor.borderDash || []);\n        ctx.lineDashOffset = labelColor.borderDashOffset || 0;\n        var outerX = rtlHelper.leftForLtr(rtlColorX, boxWidth);\n        var innerX = rtlHelper.leftForLtr(rtlHelper.xPlus(rtlColorX, 1), boxWidth - 2);\n        var borderRadius = toTRBLCorners(labelColor.borderRadius);\n\n        if (Object.values(borderRadius).some(function (v) {\n          return v !== 0;\n        })) {\n          ctx.beginPath();\n          ctx.fillStyle = options.multiKeyBackground;\n          addRoundedRectPath(ctx, {\n            x: outerX,\n            y: colorY,\n            w: boxWidth,\n            h: boxHeight,\n            radius: borderRadius\n          });\n          ctx.fill();\n          ctx.stroke();\n          ctx.fillStyle = labelColor.backgroundColor;\n          ctx.beginPath();\n          addRoundedRectPath(ctx, {\n            x: innerX,\n            y: colorY + 1,\n            w: boxWidth - 2,\n            h: boxHeight - 2,\n            radius: borderRadius\n          });\n          ctx.fill();\n        } else {\n          ctx.fillStyle = options.multiKeyBackground;\n          ctx.fillRect(outerX, colorY, boxWidth, boxHeight);\n          ctx.strokeRect(outerX, colorY, boxWidth, boxHeight);\n          ctx.fillStyle = labelColor.backgroundColor;\n          ctx.fillRect(innerX, colorY + 1, boxWidth - 2, boxHeight - 2);\n        }\n      }\n\n      ctx.fillStyle = this.labelTextColors[i];\n    }\n  }, {\n    key: \"drawBody\",\n    value: function drawBody(pt, ctx, options) {\n      var body = this.body;\n      var bodySpacing = options.bodySpacing,\n          bodyAlign = options.bodyAlign,\n          displayColors = options.displayColors,\n          boxHeight = options.boxHeight,\n          boxWidth = options.boxWidth,\n          boxPadding = options.boxPadding;\n      var bodyFont = toFont(options.bodyFont);\n      var bodyLineHeight = bodyFont.lineHeight;\n      var xLinePadding = 0;\n      var rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n\n      var fillLineOfText = function fillLineOfText(line) {\n        ctx.fillText(line, rtlHelper.x(pt.x + xLinePadding), pt.y + bodyLineHeight / 2);\n        pt.y += bodyLineHeight + bodySpacing;\n      };\n\n      var bodyAlignForCalculation = rtlHelper.textAlign(bodyAlign);\n      var bodyItem, textColor, lines, i, j, ilen, jlen;\n      ctx.textAlign = bodyAlign;\n      ctx.textBaseline = 'middle';\n      ctx.font = bodyFont.string;\n      pt.x = getAlignedX(this, bodyAlignForCalculation, options);\n      ctx.fillStyle = options.bodyColor;\n      each(this.beforeBody, fillLineOfText);\n      xLinePadding = displayColors && bodyAlignForCalculation !== 'right' ? bodyAlign === 'center' ? boxWidth / 2 + boxPadding : boxWidth + 2 + boxPadding : 0;\n\n      for (i = 0, ilen = body.length; i < ilen; ++i) {\n        bodyItem = body[i];\n        textColor = this.labelTextColors[i];\n        ctx.fillStyle = textColor;\n        each(bodyItem.before, fillLineOfText);\n        lines = bodyItem.lines;\n\n        if (displayColors && lines.length) {\n          this._drawColorBox(ctx, pt, i, rtlHelper, options);\n\n          bodyLineHeight = Math.max(bodyFont.lineHeight, boxHeight);\n        }\n\n        for (j = 0, jlen = lines.length; j < jlen; ++j) {\n          fillLineOfText(lines[j]);\n          bodyLineHeight = bodyFont.lineHeight;\n        }\n\n        each(bodyItem.after, fillLineOfText);\n      }\n\n      xLinePadding = 0;\n      bodyLineHeight = bodyFont.lineHeight;\n      each(this.afterBody, fillLineOfText);\n      pt.y -= bodySpacing;\n    }\n  }, {\n    key: \"drawFooter\",\n    value: function drawFooter(pt, ctx, options) {\n      var footer = this.footer;\n      var length = footer.length;\n      var footerFont, i;\n\n      if (length) {\n        var rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n        pt.x = getAlignedX(this, options.footerAlign, options);\n        pt.y += options.footerMarginTop;\n        ctx.textAlign = rtlHelper.textAlign(options.footerAlign);\n        ctx.textBaseline = 'middle';\n        footerFont = toFont(options.footerFont);\n        ctx.fillStyle = options.footerColor;\n        ctx.font = footerFont.string;\n\n        for (i = 0; i < length; ++i) {\n          ctx.fillText(footer[i], rtlHelper.x(pt.x), pt.y + footerFont.lineHeight / 2);\n          pt.y += footerFont.lineHeight + options.footerSpacing;\n        }\n      }\n    }\n  }, {\n    key: \"drawBackground\",\n    value: function drawBackground(pt, ctx, tooltipSize, options) {\n      var xAlign = this.xAlign,\n          yAlign = this.yAlign;\n      var x = pt.x,\n          y = pt.y;\n      var width = tooltipSize.width,\n          height = tooltipSize.height;\n\n      var _toTRBLCorners3 = toTRBLCorners(options.cornerRadius),\n          topLeft = _toTRBLCorners3.topLeft,\n          topRight = _toTRBLCorners3.topRight,\n          bottomLeft = _toTRBLCorners3.bottomLeft,\n          bottomRight = _toTRBLCorners3.bottomRight;\n\n      ctx.fillStyle = options.backgroundColor;\n      ctx.strokeStyle = options.borderColor;\n      ctx.lineWidth = options.borderWidth;\n      ctx.beginPath();\n      ctx.moveTo(x + topLeft, y);\n\n      if (yAlign === 'top') {\n        this.drawCaret(pt, ctx, tooltipSize, options);\n      }\n\n      ctx.lineTo(x + width - topRight, y);\n      ctx.quadraticCurveTo(x + width, y, x + width, y + topRight);\n\n      if (yAlign === 'center' && xAlign === 'right') {\n        this.drawCaret(pt, ctx, tooltipSize, options);\n      }\n\n      ctx.lineTo(x + width, y + height - bottomRight);\n      ctx.quadraticCurveTo(x + width, y + height, x + width - bottomRight, y + height);\n\n      if (yAlign === 'bottom') {\n        this.drawCaret(pt, ctx, tooltipSize, options);\n      }\n\n      ctx.lineTo(x + bottomLeft, y + height);\n      ctx.quadraticCurveTo(x, y + height, x, y + height - bottomLeft);\n\n      if (yAlign === 'center' && xAlign === 'left') {\n        this.drawCaret(pt, ctx, tooltipSize, options);\n      }\n\n      ctx.lineTo(x, y + topLeft);\n      ctx.quadraticCurveTo(x, y, x + topLeft, y);\n      ctx.closePath();\n      ctx.fill();\n\n      if (options.borderWidth > 0) {\n        ctx.stroke();\n      }\n    }\n  }, {\n    key: \"_updateAnimationTarget\",\n    value: function _updateAnimationTarget(options) {\n      var chart = this.chart;\n      var anims = this.$animations;\n      var animX = anims && anims.x;\n      var animY = anims && anims.y;\n\n      if (animX || animY) {\n        var position = positioners[options.position].call(this, this._active, this._eventPosition);\n\n        if (!position) {\n          return;\n        }\n\n        var size = this._size = getTooltipSize(this, options);\n        var positionAndSize = Object.assign({}, position, this._size);\n        var alignment = determineAlignment(chart, options, positionAndSize);\n        var point = getBackgroundPoint(options, positionAndSize, alignment, chart);\n\n        if (animX._to !== point.x || animY._to !== point.y) {\n          this.xAlign = alignment.xAlign;\n          this.yAlign = alignment.yAlign;\n          this.width = size.width;\n          this.height = size.height;\n          this.caretX = position.x;\n          this.caretY = position.y;\n\n          this._resolveAnimations().update(this, point);\n        }\n      }\n    }\n  }, {\n    key: \"_willRender\",\n    value: function _willRender() {\n      return !!this.opacity;\n    }\n  }, {\n    key: \"draw\",\n    value: function draw(ctx) {\n      var options = this.options.setContext(this.getContext());\n      var opacity = this.opacity;\n\n      if (!opacity) {\n        return;\n      }\n\n      this._updateAnimationTarget(options);\n\n      var tooltipSize = {\n        width: this.width,\n        height: this.height\n      };\n      var pt = {\n        x: this.x,\n        y: this.y\n      };\n      opacity = Math.abs(opacity) < 1e-3 ? 0 : opacity;\n      var padding = toPadding(options.padding);\n      var hasTooltipContent = this.title.length || this.beforeBody.length || this.body.length || this.afterBody.length || this.footer.length;\n\n      if (options.enabled && hasTooltipContent) {\n        ctx.save();\n        ctx.globalAlpha = opacity;\n        this.drawBackground(pt, ctx, tooltipSize, options);\n        overrideTextDirection(ctx, options.textDirection);\n        pt.y += padding.top;\n        this.drawTitle(pt, ctx, options);\n        this.drawBody(pt, ctx, options);\n        this.drawFooter(pt, ctx, options);\n        restoreTextDirection(ctx, options.textDirection);\n        ctx.restore();\n      }\n    }\n  }, {\n    key: \"getActiveElements\",\n    value: function getActiveElements() {\n      return this._active || [];\n    }\n  }, {\n    key: \"setActiveElements\",\n    value: function setActiveElements(activeElements, eventPosition) {\n      var _this34 = this;\n\n      var lastActive = this._active;\n      var active = activeElements.map(function (_ref11) {\n        var datasetIndex = _ref11.datasetIndex,\n            index = _ref11.index;\n\n        var meta = _this34.chart.getDatasetMeta(datasetIndex);\n\n        if (!meta) {\n          throw new Error('Cannot find a dataset at index ' + datasetIndex);\n        }\n\n        return {\n          datasetIndex: datasetIndex,\n          element: meta.data[index],\n          index: index\n        };\n      });\n      var changed = !_elementsEqual(lastActive, active);\n\n      var positionChanged = this._positionChanged(active, eventPosition);\n\n      if (changed || positionChanged) {\n        this._active = active;\n        this._eventPosition = eventPosition;\n        this._ignoreReplayEvents = true;\n        this.update(true);\n      }\n    }\n  }, {\n    key: \"handleEvent\",\n    value: function handleEvent(e, replay) {\n      var inChartArea = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n\n      if (replay && this._ignoreReplayEvents) {\n        return false;\n      }\n\n      this._ignoreReplayEvents = false;\n      var options = this.options;\n      var lastActive = this._active || [];\n\n      var active = this._getActiveElements(e, lastActive, replay, inChartArea);\n\n      var positionChanged = this._positionChanged(active, e);\n\n      var changed = replay || !_elementsEqual(active, lastActive) || positionChanged;\n\n      if (changed) {\n        this._active = active;\n\n        if (options.enabled || options.external) {\n          this._eventPosition = {\n            x: e.x,\n            y: e.y\n          };\n          this.update(true, replay);\n        }\n      }\n\n      return changed;\n    }\n  }, {\n    key: \"_getActiveElements\",\n    value: function _getActiveElements(e, lastActive, replay, inChartArea) {\n      var _this35 = this;\n\n      var options = this.options;\n\n      if (e.type === 'mouseout') {\n        return [];\n      }\n\n      if (!inChartArea) {\n        return lastActive.filter(function (i) {\n          return _this35.chart.data.datasets[i.datasetIndex] && _this35.chart.getDatasetMeta(i.datasetIndex).controller.getParsed(i.index) !== undefined;\n        });\n      }\n\n      var active = this.chart.getElementsAtEventForMode(e, options.mode, options, replay);\n\n      if (options.reverse) {\n        active.reverse();\n      }\n\n      return active;\n    }\n  }, {\n    key: \"_positionChanged\",\n    value: function _positionChanged(active, e) {\n      var caretX = this.caretX,\n          caretY = this.caretY,\n          options = this.options;\n      var position = positioners[options.position].call(this, active, e);\n      return position !== false && (caretX !== position.x || caretY !== position.y);\n    }\n  }]);\n\n  return Tooltip;\n}(Element);\n\n_defineProperty(Tooltip, \"positioners\", positioners);\n\nvar plugin_tooltip = {\n  id: 'tooltip',\n  _element: Tooltip,\n  positioners: positioners,\n  afterInit: function afterInit(chart, _args, options) {\n    if (options) {\n      chart.tooltip = new Tooltip({\n        chart: chart,\n        options: options\n      });\n    }\n  },\n  beforeUpdate: function beforeUpdate(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n  reset: function reset(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n  afterDraw: function afterDraw(chart) {\n    var tooltip = chart.tooltip;\n\n    if (tooltip && tooltip._willRender()) {\n      var args = {\n        tooltip: tooltip\n      };\n\n      if (chart.notifyPlugins('beforeTooltipDraw', _objectSpread(_objectSpread({}, args), {}, {\n        cancelable: true\n      })) === false) {\n        return;\n      }\n\n      tooltip.draw(chart.ctx);\n      chart.notifyPlugins('afterTooltipDraw', args);\n    }\n  },\n  afterEvent: function afterEvent(chart, args) {\n    if (chart.tooltip) {\n      var useFinalPosition = args.replay;\n\n      if (chart.tooltip.handleEvent(args.event, useFinalPosition, args.inChartArea)) {\n        args.changed = true;\n      }\n    }\n  },\n  defaults: {\n    enabled: true,\n    external: null,\n    position: 'average',\n    backgroundColor: 'rgba(0,0,0,0.8)',\n    titleColor: '#fff',\n    titleFont: {\n      weight: 'bold'\n    },\n    titleSpacing: 2,\n    titleMarginBottom: 6,\n    titleAlign: 'left',\n    bodyColor: '#fff',\n    bodySpacing: 2,\n    bodyFont: {},\n    bodyAlign: 'left',\n    footerColor: '#fff',\n    footerSpacing: 2,\n    footerMarginTop: 6,\n    footerFont: {\n      weight: 'bold'\n    },\n    footerAlign: 'left',\n    padding: 6,\n    caretPadding: 2,\n    caretSize: 5,\n    cornerRadius: 6,\n    boxHeight: function boxHeight(ctx, opts) {\n      return opts.bodyFont.size;\n    },\n    boxWidth: function boxWidth(ctx, opts) {\n      return opts.bodyFont.size;\n    },\n    multiKeyBackground: '#fff',\n    displayColors: true,\n    boxPadding: 0,\n    borderColor: 'rgba(0,0,0,0)',\n    borderWidth: 0,\n    animation: {\n      duration: 400,\n      easing: 'easeOutQuart'\n    },\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'width', 'height', 'caretX', 'caretY']\n      },\n      opacity: {\n        easing: 'linear',\n        duration: 200\n      }\n    },\n    callbacks: defaultCallbacks\n  },\n  defaultRoutes: {\n    bodyFont: 'font',\n    footerFont: 'font',\n    titleFont: 'font'\n  },\n  descriptors: {\n    _scriptable: function _scriptable(name) {\n      return name !== 'filter' && name !== 'itemSort' && name !== 'external';\n    },\n    _indexable: false,\n    callbacks: {\n      _scriptable: false,\n      _indexable: false\n    },\n    animation: {\n      _fallback: false\n    },\n    animations: {\n      _fallback: 'animation'\n    }\n  },\n  additionalOptionScopes: ['interaction']\n};\nvar plugins = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  Colors: plugin_colors,\n  Decimation: plugin_decimation,\n  Filler: index,\n  Legend: plugin_legend,\n  SubTitle: plugin_subtitle,\n  Title: plugin_title,\n  Tooltip: plugin_tooltip\n});\n\nvar addIfString = function addIfString(labels, raw, index, addedLabels) {\n  if (typeof raw === 'string') {\n    index = labels.push(raw) - 1;\n    addedLabels.unshift({\n      index: index,\n      label: raw\n    });\n  } else if (isNaN(raw)) {\n    index = null;\n  }\n\n  return index;\n};\n\nfunction findOrAddLabel(labels, raw, index, addedLabels) {\n  var first = labels.indexOf(raw);\n\n  if (first === -1) {\n    return addIfString(labels, raw, index, addedLabels);\n  }\n\n  var last = labels.lastIndexOf(raw);\n  return first !== last ? index : first;\n}\n\nvar validIndex = function validIndex(index, max) {\n  return index === null ? null : _limitValue(Math.round(index), 0, max);\n};\n\nfunction _getLabelForValue(value) {\n  var labels = this.getLabels();\n\n  if (value >= 0 && value < labels.length) {\n    return labels[value];\n  }\n\n  return value;\n}\n\nvar CategoryScale = /*#__PURE__*/function (_Scale) {\n  _inherits(CategoryScale, _Scale);\n\n  var _super19 = _createSuper(CategoryScale);\n\n  function CategoryScale(cfg) {\n    var _this36;\n\n    _classCallCheck(this, CategoryScale);\n\n    _this36 = _super19.call(this, cfg);\n    _this36._startValue = undefined;\n    _this36._valueRange = 0;\n    _this36._addedLabels = [];\n    return _this36;\n  }\n\n  _createClass(CategoryScale, [{\n    key: \"init\",\n    value: function init(scaleOptions) {\n      var added = this._addedLabels;\n\n      if (added.length) {\n        var labels = this.getLabels();\n\n        var _iterator26 = _createForOfIteratorHelper(added),\n            _step26;\n\n        try {\n          for (_iterator26.s(); !(_step26 = _iterator26.n()).done;) {\n            var _step26$value = _step26.value,\n                _index3 = _step26$value.index,\n                label = _step26$value.label;\n\n            if (labels[_index3] === label) {\n              labels.splice(_index3, 1);\n            }\n          }\n        } catch (err) {\n          _iterator26.e(err);\n        } finally {\n          _iterator26.f();\n        }\n\n        this._addedLabels = [];\n      }\n\n      _get(_getPrototypeOf(CategoryScale.prototype), \"init\", this).call(this, scaleOptions);\n    }\n  }, {\n    key: \"parse\",\n    value: function parse(raw, index) {\n      if (isNullOrUndef(raw)) {\n        return null;\n      }\n\n      var labels = this.getLabels();\n      index = isFinite(index) && labels[index] === raw ? index : findOrAddLabel(labels, raw, valueOrDefault(index, raw), this._addedLabels);\n      return validIndex(index, labels.length - 1);\n    }\n  }, {\n    key: \"determineDataLimits\",\n    value: function determineDataLimits() {\n      var _this$getUserBounds2 = this.getUserBounds(),\n          minDefined = _this$getUserBounds2.minDefined,\n          maxDefined = _this$getUserBounds2.maxDefined;\n\n      var _this$getMinMax = this.getMinMax(true),\n          min = _this$getMinMax.min,\n          max = _this$getMinMax.max;\n\n      if (this.options.bounds === 'ticks') {\n        if (!minDefined) {\n          min = 0;\n        }\n\n        if (!maxDefined) {\n          max = this.getLabels().length - 1;\n        }\n      }\n\n      this.min = min;\n      this.max = max;\n    }\n  }, {\n    key: \"buildTicks\",\n    value: function buildTicks() {\n      var min = this.min;\n      var max = this.max;\n      var offset = this.options.offset;\n      var ticks = [];\n      var labels = this.getLabels();\n      labels = min === 0 && max === labels.length - 1 ? labels : labels.slice(min, max + 1);\n      this._valueRange = Math.max(labels.length - (offset ? 0 : 1), 1);\n      this._startValue = this.min - (offset ? 0.5 : 0);\n\n      for (var value = min; value <= max; value++) {\n        ticks.push({\n          value: value\n        });\n      }\n\n      return ticks;\n    }\n  }, {\n    key: \"getLabelForValue\",\n    value: function getLabelForValue(value) {\n      return _getLabelForValue.call(this, value);\n    }\n  }, {\n    key: \"configure\",\n    value: function configure() {\n      _get(_getPrototypeOf(CategoryScale.prototype), \"configure\", this).call(this);\n\n      if (!this.isHorizontal()) {\n        this._reversePixels = !this._reversePixels;\n      }\n    }\n  }, {\n    key: \"getPixelForValue\",\n    value: function getPixelForValue(value) {\n      if (typeof value !== 'number') {\n        value = this.parse(value);\n      }\n\n      return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n    }\n  }, {\n    key: \"getPixelForTick\",\n    value: function getPixelForTick(index) {\n      var ticks = this.ticks;\n\n      if (index < 0 || index > ticks.length - 1) {\n        return null;\n      }\n\n      return this.getPixelForValue(ticks[index].value);\n    }\n  }, {\n    key: \"getValueForPixel\",\n    value: function getValueForPixel(pixel) {\n      return Math.round(this._startValue + this.getDecimalForPixel(pixel) * this._valueRange);\n    }\n  }, {\n    key: \"getBasePixel\",\n    value: function getBasePixel() {\n      return this.bottom;\n    }\n  }]);\n\n  return CategoryScale;\n}(Scale);\n\n_defineProperty(CategoryScale, \"id\", 'category');\n\n_defineProperty(CategoryScale, \"defaults\", {\n  ticks: {\n    callback: _getLabelForValue\n  }\n});\n\nfunction generateTicks$1(generationOptions, dataRange) {\n  var ticks = [];\n  var MIN_SPACING = 1e-14;\n  var bounds = generationOptions.bounds,\n      step = generationOptions.step,\n      min = generationOptions.min,\n      max = generationOptions.max,\n      precision = generationOptions.precision,\n      count = generationOptions.count,\n      maxTicks = generationOptions.maxTicks,\n      maxDigits = generationOptions.maxDigits,\n      includeBounds = generationOptions.includeBounds;\n  var unit = step || 1;\n  var maxSpaces = maxTicks - 1;\n  var rmin = dataRange.min,\n      rmax = dataRange.max;\n  var minDefined = !isNullOrUndef(min);\n  var maxDefined = !isNullOrUndef(max);\n  var countDefined = !isNullOrUndef(count);\n  var minSpacing = (rmax - rmin) / (maxDigits + 1);\n  var spacing = niceNum((rmax - rmin) / maxSpaces / unit) * unit;\n  var factor, niceMin, niceMax, numSpaces;\n\n  if (spacing < MIN_SPACING && !minDefined && !maxDefined) {\n    return [{\n      value: rmin\n    }, {\n      value: rmax\n    }];\n  }\n\n  numSpaces = Math.ceil(rmax / spacing) - Math.floor(rmin / spacing);\n\n  if (numSpaces > maxSpaces) {\n    spacing = niceNum(numSpaces * spacing / maxSpaces / unit) * unit;\n  }\n\n  if (!isNullOrUndef(precision)) {\n    factor = Math.pow(10, precision);\n    spacing = Math.ceil(spacing * factor) / factor;\n  }\n\n  if (bounds === 'ticks') {\n    niceMin = Math.floor(rmin / spacing) * spacing;\n    niceMax = Math.ceil(rmax / spacing) * spacing;\n  } else {\n    niceMin = rmin;\n    niceMax = rmax;\n  }\n\n  if (minDefined && maxDefined && step && almostWhole((max - min) / step, spacing / 1000)) {\n    numSpaces = Math.round(Math.min((max - min) / spacing, maxTicks));\n    spacing = (max - min) / numSpaces;\n    niceMin = min;\n    niceMax = max;\n  } else if (countDefined) {\n    niceMin = minDefined ? min : niceMin;\n    niceMax = maxDefined ? max : niceMax;\n    numSpaces = count - 1;\n    spacing = (niceMax - niceMin) / numSpaces;\n  } else {\n    numSpaces = (niceMax - niceMin) / spacing;\n\n    if (almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n      numSpaces = Math.round(numSpaces);\n    } else {\n      numSpaces = Math.ceil(numSpaces);\n    }\n  }\n\n  var decimalPlaces = Math.max(_decimalPlaces(spacing), _decimalPlaces(niceMin));\n  factor = Math.pow(10, isNullOrUndef(precision) ? decimalPlaces : precision);\n  niceMin = Math.round(niceMin * factor) / factor;\n  niceMax = Math.round(niceMax * factor) / factor;\n  var j = 0;\n\n  if (minDefined) {\n    if (includeBounds && niceMin !== min) {\n      ticks.push({\n        value: min\n      });\n\n      if (niceMin < min) {\n        j++;\n      }\n\n      if (almostEquals(Math.round((niceMin + j * spacing) * factor) / factor, min, relativeLabelSize(min, minSpacing, generationOptions))) {\n        j++;\n      }\n    } else if (niceMin < min) {\n      j++;\n    }\n  }\n\n  for (; j < numSpaces; ++j) {\n    var tickValue = Math.round((niceMin + j * spacing) * factor) / factor;\n\n    if (maxDefined && tickValue > max) {\n      break;\n    }\n\n    ticks.push({\n      value: tickValue\n    });\n  }\n\n  if (maxDefined && includeBounds && niceMax !== max) {\n    if (ticks.length && almostEquals(ticks[ticks.length - 1].value, max, relativeLabelSize(max, minSpacing, generationOptions))) {\n      ticks[ticks.length - 1].value = max;\n    } else {\n      ticks.push({\n        value: max\n      });\n    }\n  } else if (!maxDefined || niceMax === max) {\n    ticks.push({\n      value: niceMax\n    });\n  }\n\n  return ticks;\n}\n\nfunction relativeLabelSize(value, minSpacing, _ref12) {\n  var horizontal = _ref12.horizontal,\n      minRotation = _ref12.minRotation;\n  var rad = toRadians(minRotation);\n  var ratio = (horizontal ? Math.sin(rad) : Math.cos(rad)) || 0.001;\n  var length = 0.75 * minSpacing * ('' + value).length;\n  return Math.min(minSpacing / ratio, length);\n}\n\nvar LinearScaleBase = /*#__PURE__*/function (_Scale2) {\n  _inherits(LinearScaleBase, _Scale2);\n\n  var _super20 = _createSuper(LinearScaleBase);\n\n  function LinearScaleBase(cfg) {\n    var _this37;\n\n    _classCallCheck(this, LinearScaleBase);\n\n    _this37 = _super20.call(this, cfg);\n    _this37.start = undefined;\n    _this37.end = undefined;\n    _this37._startValue = undefined;\n    _this37._endValue = undefined;\n    _this37._valueRange = 0;\n    return _this37;\n  }\n\n  _createClass(LinearScaleBase, [{\n    key: \"parse\",\n    value: function parse(raw, index) {\n      if (isNullOrUndef(raw)) {\n        return null;\n      }\n\n      if ((typeof raw === 'number' || raw instanceof Number) && !isFinite(+raw)) {\n        return null;\n      }\n\n      return +raw;\n    }\n  }, {\n    key: \"handleTickRangeOptions\",\n    value: function handleTickRangeOptions() {\n      var beginAtZero = this.options.beginAtZero;\n\n      var _this$getUserBounds3 = this.getUserBounds(),\n          minDefined = _this$getUserBounds3.minDefined,\n          maxDefined = _this$getUserBounds3.maxDefined;\n\n      var min = this.min,\n          max = this.max;\n\n      var setMin = function setMin(v) {\n        return min = minDefined ? min : v;\n      };\n\n      var setMax = function setMax(v) {\n        return max = maxDefined ? max : v;\n      };\n\n      if (beginAtZero) {\n        var minSign = sign(min);\n        var maxSign = sign(max);\n\n        if (minSign < 0 && maxSign < 0) {\n          setMax(0);\n        } else if (minSign > 0 && maxSign > 0) {\n          setMin(0);\n        }\n      }\n\n      if (min === max) {\n        var offset = max === 0 ? 1 : Math.abs(max * 0.05);\n        setMax(max + offset);\n\n        if (!beginAtZero) {\n          setMin(min - offset);\n        }\n      }\n\n      this.min = min;\n      this.max = max;\n    }\n  }, {\n    key: \"getTickLimit\",\n    value: function getTickLimit() {\n      var tickOpts = this.options.ticks;\n      var maxTicksLimit = tickOpts.maxTicksLimit,\n          stepSize = tickOpts.stepSize;\n      var maxTicks;\n\n      if (stepSize) {\n        maxTicks = Math.ceil(this.max / stepSize) - Math.floor(this.min / stepSize) + 1;\n\n        if (maxTicks > 1000) {\n          console.warn(\"scales.\".concat(this.id, \".ticks.stepSize: \").concat(stepSize, \" would result generating up to \").concat(maxTicks, \" ticks. Limiting to 1000.\"));\n          maxTicks = 1000;\n        }\n      } else {\n        maxTicks = this.computeTickLimit();\n        maxTicksLimit = maxTicksLimit || 11;\n      }\n\n      if (maxTicksLimit) {\n        maxTicks = Math.min(maxTicksLimit, maxTicks);\n      }\n\n      return maxTicks;\n    }\n  }, {\n    key: \"computeTickLimit\",\n    value: function computeTickLimit() {\n      return Number.POSITIVE_INFINITY;\n    }\n  }, {\n    key: \"buildTicks\",\n    value: function buildTicks() {\n      var opts = this.options;\n      var tickOpts = opts.ticks;\n      var maxTicks = this.getTickLimit();\n      maxTicks = Math.max(2, maxTicks);\n      var numericGeneratorOptions = {\n        maxTicks: maxTicks,\n        bounds: opts.bounds,\n        min: opts.min,\n        max: opts.max,\n        precision: tickOpts.precision,\n        step: tickOpts.stepSize,\n        count: tickOpts.count,\n        maxDigits: this._maxDigits(),\n        horizontal: this.isHorizontal(),\n        minRotation: tickOpts.minRotation || 0,\n        includeBounds: tickOpts.includeBounds !== false\n      };\n      var dataRange = this._range || this;\n      var ticks = generateTicks$1(numericGeneratorOptions, dataRange);\n\n      if (opts.bounds === 'ticks') {\n        _setMinAndMaxByKey(ticks, this, 'value');\n      }\n\n      if (opts.reverse) {\n        ticks.reverse();\n        this.start = this.max;\n        this.end = this.min;\n      } else {\n        this.start = this.min;\n        this.end = this.max;\n      }\n\n      return ticks;\n    }\n  }, {\n    key: \"configure\",\n    value: function configure() {\n      var ticks = this.ticks;\n      var start = this.min;\n      var end = this.max;\n\n      _get(_getPrototypeOf(LinearScaleBase.prototype), \"configure\", this).call(this);\n\n      if (this.options.offset && ticks.length) {\n        var offset = (end - start) / Math.max(ticks.length - 1, 1) / 2;\n        start -= offset;\n        end += offset;\n      }\n\n      this._startValue = start;\n      this._endValue = end;\n      this._valueRange = end - start;\n    }\n  }, {\n    key: \"getLabelForValue\",\n    value: function getLabelForValue(value) {\n      return formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n    }\n  }]);\n\n  return LinearScaleBase;\n}(Scale);\n\nvar LinearScale = /*#__PURE__*/function (_LinearScaleBase) {\n  _inherits(LinearScale, _LinearScaleBase);\n\n  var _super21 = _createSuper(LinearScale);\n\n  function LinearScale() {\n    _classCallCheck(this, LinearScale);\n\n    return _super21.apply(this, arguments);\n  }\n\n  _createClass(LinearScale, [{\n    key: \"determineDataLimits\",\n    value: function determineDataLimits() {\n      var _this$getMinMax2 = this.getMinMax(true),\n          min = _this$getMinMax2.min,\n          max = _this$getMinMax2.max;\n\n      this.min = isNumberFinite(min) ? min : 0;\n      this.max = isNumberFinite(max) ? max : 1;\n      this.handleTickRangeOptions();\n    }\n  }, {\n    key: \"computeTickLimit\",\n    value: function computeTickLimit() {\n      var horizontal = this.isHorizontal();\n      var length = horizontal ? this.width : this.height;\n      var minRotation = toRadians(this.options.ticks.minRotation);\n      var ratio = (horizontal ? Math.sin(minRotation) : Math.cos(minRotation)) || 0.001;\n\n      var tickFont = this._resolveTickFontOptions(0);\n\n      return Math.ceil(length / Math.min(40, tickFont.lineHeight / ratio));\n    }\n  }, {\n    key: \"getPixelForValue\",\n    value: function getPixelForValue(value) {\n      return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n    }\n  }, {\n    key: \"getValueForPixel\",\n    value: function getValueForPixel(pixel) {\n      return this._startValue + this.getDecimalForPixel(pixel) * this._valueRange;\n    }\n  }]);\n\n  return LinearScale;\n}(LinearScaleBase);\n\n_defineProperty(LinearScale, \"id\", 'linear');\n\n_defineProperty(LinearScale, \"defaults\", {\n  ticks: {\n    callback: Ticks.formatters.numeric\n  }\n});\n\nvar log10Floor = function log10Floor(v) {\n  return Math.floor(log10(v));\n};\n\nvar changeExponent = function changeExponent(v, m) {\n  return Math.pow(10, log10Floor(v) + m);\n};\n\nfunction isMajor(tickVal) {\n  var remain = tickVal / Math.pow(10, log10Floor(tickVal));\n  return remain === 1;\n}\n\nfunction steps(min, max, rangeExp) {\n  var rangeStep = Math.pow(10, rangeExp);\n  var start = Math.floor(min / rangeStep);\n  var end = Math.ceil(max / rangeStep);\n  return end - start;\n}\n\nfunction startExp(min, max) {\n  var range = max - min;\n  var rangeExp = log10Floor(range);\n\n  while (steps(min, max, rangeExp) > 10) {\n    rangeExp++;\n  }\n\n  while (steps(min, max, rangeExp) < 10) {\n    rangeExp--;\n  }\n\n  return Math.min(rangeExp, log10Floor(min));\n}\n\nfunction generateTicks(generationOptions, _ref13) {\n  var min = _ref13.min,\n      max = _ref13.max;\n  min = finiteOrDefault(generationOptions.min, min);\n  var ticks = [];\n  var minExp = log10Floor(min);\n  var exp = startExp(min, max);\n  var precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\n  var stepSize = Math.pow(10, exp);\n  var base = minExp > exp ? Math.pow(10, minExp) : 0;\n  var start = Math.round((min - base) * precision) / precision;\n  var offset = Math.floor((min - base) / stepSize / 10) * stepSize * 10;\n  var significand = Math.floor((start - offset) / Math.pow(10, exp));\n  var value = finiteOrDefault(generationOptions.min, Math.round((base + offset + significand * Math.pow(10, exp)) * precision) / precision);\n\n  while (value < max) {\n    ticks.push({\n      value: value,\n      major: isMajor(value),\n      significand: significand\n    });\n\n    if (significand >= 10) {\n      significand = significand < 15 ? 15 : 20;\n    } else {\n      significand++;\n    }\n\n    if (significand >= 20) {\n      exp++;\n      significand = 2;\n      precision = exp >= 0 ? 1 : precision;\n    }\n\n    value = Math.round((base + offset + significand * Math.pow(10, exp)) * precision) / precision;\n  }\n\n  var lastTick = finiteOrDefault(generationOptions.max, value);\n  ticks.push({\n    value: lastTick,\n    major: isMajor(lastTick),\n    significand: significand\n  });\n  return ticks;\n}\n\nvar LogarithmicScale = /*#__PURE__*/function (_Scale3) {\n  _inherits(LogarithmicScale, _Scale3);\n\n  var _super22 = _createSuper(LogarithmicScale);\n\n  function LogarithmicScale(cfg) {\n    var _this38;\n\n    _classCallCheck(this, LogarithmicScale);\n\n    _this38 = _super22.call(this, cfg);\n    _this38.start = undefined;\n    _this38.end = undefined;\n    _this38._startValue = undefined;\n    _this38._valueRange = 0;\n    return _this38;\n  }\n\n  _createClass(LogarithmicScale, [{\n    key: \"parse\",\n    value: function parse(raw, index) {\n      var value = LinearScaleBase.prototype.parse.apply(this, [raw, index]);\n\n      if (value === 0) {\n        this._zero = true;\n        return undefined;\n      }\n\n      return isNumberFinite(value) && value > 0 ? value : null;\n    }\n  }, {\n    key: \"determineDataLimits\",\n    value: function determineDataLimits() {\n      var _this$getMinMax3 = this.getMinMax(true),\n          min = _this$getMinMax3.min,\n          max = _this$getMinMax3.max;\n\n      this.min = isNumberFinite(min) ? Math.max(0, min) : null;\n      this.max = isNumberFinite(max) ? Math.max(0, max) : null;\n\n      if (this.options.beginAtZero) {\n        this._zero = true;\n      }\n\n      if (this._zero && this.min !== this._suggestedMin && !isNumberFinite(this._userMin)) {\n        this.min = min === changeExponent(this.min, 0) ? changeExponent(this.min, -1) : changeExponent(this.min, 0);\n      }\n\n      this.handleTickRangeOptions();\n    }\n  }, {\n    key: \"handleTickRangeOptions\",\n    value: function handleTickRangeOptions() {\n      var _this$getUserBounds4 = this.getUserBounds(),\n          minDefined = _this$getUserBounds4.minDefined,\n          maxDefined = _this$getUserBounds4.maxDefined;\n\n      var min = this.min;\n      var max = this.max;\n\n      var setMin = function setMin(v) {\n        return min = minDefined ? min : v;\n      };\n\n      var setMax = function setMax(v) {\n        return max = maxDefined ? max : v;\n      };\n\n      if (min === max) {\n        if (min <= 0) {\n          setMin(1);\n          setMax(10);\n        } else {\n          setMin(changeExponent(min, -1));\n          setMax(changeExponent(max, +1));\n        }\n      }\n\n      if (min <= 0) {\n        setMin(changeExponent(max, -1));\n      }\n\n      if (max <= 0) {\n        setMax(changeExponent(min, +1));\n      }\n\n      this.min = min;\n      this.max = max;\n    }\n  }, {\n    key: \"buildTicks\",\n    value: function buildTicks() {\n      var opts = this.options;\n      var generationOptions = {\n        min: this._userMin,\n        max: this._userMax\n      };\n      var ticks = generateTicks(generationOptions, this);\n\n      if (opts.bounds === 'ticks') {\n        _setMinAndMaxByKey(ticks, this, 'value');\n      }\n\n      if (opts.reverse) {\n        ticks.reverse();\n        this.start = this.max;\n        this.end = this.min;\n      } else {\n        this.start = this.min;\n        this.end = this.max;\n      }\n\n      return ticks;\n    }\n  }, {\n    key: \"getLabelForValue\",\n    value: function getLabelForValue(value) {\n      return value === undefined ? '0' : formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n    }\n  }, {\n    key: \"configure\",\n    value: function configure() {\n      var start = this.min;\n\n      _get(_getPrototypeOf(LogarithmicScale.prototype), \"configure\", this).call(this);\n\n      this._startValue = log10(start);\n      this._valueRange = log10(this.max) - log10(start);\n    }\n  }, {\n    key: \"getPixelForValue\",\n    value: function getPixelForValue(value) {\n      if (value === undefined || value === 0) {\n        value = this.min;\n      }\n\n      if (value === null || isNaN(value)) {\n        return NaN;\n      }\n\n      return this.getPixelForDecimal(value === this.min ? 0 : (log10(value) - this._startValue) / this._valueRange);\n    }\n  }, {\n    key: \"getValueForPixel\",\n    value: function getValueForPixel(pixel) {\n      var decimal = this.getDecimalForPixel(pixel);\n      return Math.pow(10, this._startValue + decimal * this._valueRange);\n    }\n  }]);\n\n  return LogarithmicScale;\n}(Scale);\n\n_defineProperty(LogarithmicScale, \"id\", 'logarithmic');\n\n_defineProperty(LogarithmicScale, \"defaults\", {\n  ticks: {\n    callback: Ticks.formatters.logarithmic,\n    major: {\n      enabled: true\n    }\n  }\n});\n\nfunction getTickBackdropHeight(opts) {\n  var tickOpts = opts.ticks;\n\n  if (tickOpts.display && opts.display) {\n    var padding = toPadding(tickOpts.backdropPadding);\n    return valueOrDefault(tickOpts.font && tickOpts.font.size, defaults.font.size) + padding.height;\n  }\n\n  return 0;\n}\n\nfunction measureLabelSize(ctx, font, label) {\n  label = isArray(label) ? label : [label];\n  return {\n    w: _longestText(ctx, font.string, label),\n    h: label.length * font.lineHeight\n  };\n}\n\nfunction determineLimits(angle, pos, size, min, max) {\n  if (angle === min || angle === max) {\n    return {\n      start: pos - size / 2,\n      end: pos + size / 2\n    };\n  } else if (angle < min || angle > max) {\n    return {\n      start: pos - size,\n      end: pos\n    };\n  }\n\n  return {\n    start: pos,\n    end: pos + size\n  };\n}\n\nfunction fitWithPointLabels(scale) {\n  var orig = {\n    l: scale.left + scale._padding.left,\n    r: scale.right - scale._padding.right,\n    t: scale.top + scale._padding.top,\n    b: scale.bottom - scale._padding.bottom\n  };\n  var limits = Object.assign({}, orig);\n  var labelSizes = [];\n  var padding = [];\n  var valueCount = scale._pointLabels.length;\n  var pointLabelOpts = scale.options.pointLabels;\n  var additionalAngle = pointLabelOpts.centerPointLabels ? PI / valueCount : 0;\n\n  for (var i = 0; i < valueCount; i++) {\n    var opts = pointLabelOpts.setContext(scale.getPointLabelContext(i));\n    padding[i] = opts.padding;\n    var pointPosition = scale.getPointPosition(i, scale.drawingArea + padding[i], additionalAngle);\n    var plFont = toFont(opts.font);\n    var textSize = measureLabelSize(scale.ctx, plFont, scale._pointLabels[i]);\n    labelSizes[i] = textSize;\n\n    var angleRadians = _normalizeAngle(scale.getIndexAngle(i) + additionalAngle);\n\n    var angle = Math.round(toDegrees(angleRadians));\n    var hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n    var vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n    updateLimits(limits, orig, angleRadians, hLimits, vLimits);\n  }\n\n  scale.setCenterPoint(orig.l - limits.l, limits.r - orig.r, orig.t - limits.t, limits.b - orig.b);\n  scale._pointLabelItems = buildPointLabelItems(scale, labelSizes, padding);\n}\n\nfunction updateLimits(limits, orig, angle, hLimits, vLimits) {\n  var sin = Math.abs(Math.sin(angle));\n  var cos = Math.abs(Math.cos(angle));\n  var x = 0;\n  var y = 0;\n\n  if (hLimits.start < orig.l) {\n    x = (orig.l - hLimits.start) / sin;\n    limits.l = Math.min(limits.l, orig.l - x);\n  } else if (hLimits.end > orig.r) {\n    x = (hLimits.end - orig.r) / sin;\n    limits.r = Math.max(limits.r, orig.r + x);\n  }\n\n  if (vLimits.start < orig.t) {\n    y = (orig.t - vLimits.start) / cos;\n    limits.t = Math.min(limits.t, orig.t - y);\n  } else if (vLimits.end > orig.b) {\n    y = (vLimits.end - orig.b) / cos;\n    limits.b = Math.max(limits.b, orig.b + y);\n  }\n}\n\nfunction createPointLabelItem(scale, index, itemOpts) {\n  var outerDistance = scale.drawingArea;\n  var extra = itemOpts.extra,\n      additionalAngle = itemOpts.additionalAngle,\n      padding = itemOpts.padding,\n      size = itemOpts.size;\n  var pointLabelPosition = scale.getPointPosition(index, outerDistance + extra + padding, additionalAngle);\n  var angle = Math.round(toDegrees(_normalizeAngle(pointLabelPosition.angle + HALF_PI)));\n  var y = yForAngle(pointLabelPosition.y, size.h, angle);\n  var textAlign = getTextAlignForAngle(angle);\n  var left = leftForTextAlign(pointLabelPosition.x, size.w, textAlign);\n  return {\n    visible: true,\n    x: pointLabelPosition.x,\n    y: y,\n    textAlign: textAlign,\n    left: left,\n    top: y,\n    right: left + size.w,\n    bottom: y + size.h\n  };\n}\n\nfunction isNotOverlapped(item, area) {\n  if (!area) {\n    return true;\n  }\n\n  var left = item.left,\n      top = item.top,\n      right = item.right,\n      bottom = item.bottom;\n\n  var apexesInArea = _isPointInArea({\n    x: left,\n    y: top\n  }, area) || _isPointInArea({\n    x: left,\n    y: bottom\n  }, area) || _isPointInArea({\n    x: right,\n    y: top\n  }, area) || _isPointInArea({\n    x: right,\n    y: bottom\n  }, area);\n\n  return !apexesInArea;\n}\n\nfunction buildPointLabelItems(scale, labelSizes, padding) {\n  var items = [];\n  var valueCount = scale._pointLabels.length;\n  var opts = scale.options;\n  var _opts$pointLabels = opts.pointLabels,\n      centerPointLabels = _opts$pointLabels.centerPointLabels,\n      display = _opts$pointLabels.display;\n  var itemOpts = {\n    extra: getTickBackdropHeight(opts) / 2,\n    additionalAngle: centerPointLabels ? PI / valueCount : 0\n  };\n  var area;\n\n  for (var i = 0; i < valueCount; i++) {\n    itemOpts.padding = padding[i];\n    itemOpts.size = labelSizes[i];\n    var item = createPointLabelItem(scale, i, itemOpts);\n    items.push(item);\n\n    if (display === 'auto') {\n      item.visible = isNotOverlapped(item, area);\n\n      if (item.visible) {\n        area = item;\n      }\n    }\n  }\n\n  return items;\n}\n\nfunction getTextAlignForAngle(angle) {\n  if (angle === 0 || angle === 180) {\n    return 'center';\n  } else if (angle < 180) {\n    return 'left';\n  }\n\n  return 'right';\n}\n\nfunction leftForTextAlign(x, w, align) {\n  if (align === 'right') {\n    x -= w;\n  } else if (align === 'center') {\n    x -= w / 2;\n  }\n\n  return x;\n}\n\nfunction yForAngle(y, h, angle) {\n  if (angle === 90 || angle === 270) {\n    y -= h / 2;\n  } else if (angle > 270 || angle < 90) {\n    y -= h;\n  }\n\n  return y;\n}\n\nfunction drawPointLabelBox(ctx, opts, item) {\n  var left = item.left,\n      top = item.top,\n      right = item.right,\n      bottom = item.bottom;\n  var backdropColor = opts.backdropColor;\n\n  if (!isNullOrUndef(backdropColor)) {\n    var borderRadius = toTRBLCorners(opts.borderRadius);\n    var padding = toPadding(opts.backdropPadding);\n    ctx.fillStyle = backdropColor;\n    var backdropLeft = left - padding.left;\n    var backdropTop = top - padding.top;\n    var backdropWidth = right - left + padding.width;\n    var backdropHeight = bottom - top + padding.height;\n\n    if (Object.values(borderRadius).some(function (v) {\n      return v !== 0;\n    })) {\n      ctx.beginPath();\n      addRoundedRectPath(ctx, {\n        x: backdropLeft,\n        y: backdropTop,\n        w: backdropWidth,\n        h: backdropHeight,\n        radius: borderRadius\n      });\n      ctx.fill();\n    } else {\n      ctx.fillRect(backdropLeft, backdropTop, backdropWidth, backdropHeight);\n    }\n  }\n}\n\nfunction drawPointLabels(scale, labelCount) {\n  var ctx = scale.ctx,\n      pointLabels = scale.options.pointLabels;\n\n  for (var i = labelCount - 1; i >= 0; i--) {\n    var item = scale._pointLabelItems[i];\n\n    if (!item.visible) {\n      continue;\n    }\n\n    var optsAtIndex = pointLabels.setContext(scale.getPointLabelContext(i));\n    drawPointLabelBox(ctx, optsAtIndex, item);\n    var plFont = toFont(optsAtIndex.font);\n    var x = item.x,\n        y = item.y,\n        textAlign = item.textAlign;\n    renderText(ctx, scale._pointLabels[i], x, y + plFont.lineHeight / 2, plFont, {\n      color: optsAtIndex.color,\n      textAlign: textAlign,\n      textBaseline: 'middle'\n    });\n  }\n}\n\nfunction pathRadiusLine(scale, radius, circular, labelCount) {\n  var ctx = scale.ctx;\n\n  if (circular) {\n    ctx.arc(scale.xCenter, scale.yCenter, radius, 0, TAU);\n  } else {\n    var pointPosition = scale.getPointPosition(0, radius);\n    ctx.moveTo(pointPosition.x, pointPosition.y);\n\n    for (var i = 1; i < labelCount; i++) {\n      pointPosition = scale.getPointPosition(i, radius);\n      ctx.lineTo(pointPosition.x, pointPosition.y);\n    }\n  }\n}\n\nfunction drawRadiusLine(scale, gridLineOpts, radius, labelCount, borderOpts) {\n  var ctx = scale.ctx;\n  var circular = gridLineOpts.circular;\n  var color = gridLineOpts.color,\n      lineWidth = gridLineOpts.lineWidth;\n\n  if (!circular && !labelCount || !color || !lineWidth || radius < 0) {\n    return;\n  }\n\n  ctx.save();\n  ctx.strokeStyle = color;\n  ctx.lineWidth = lineWidth;\n  ctx.setLineDash(borderOpts.dash);\n  ctx.lineDashOffset = borderOpts.dashOffset;\n  ctx.beginPath();\n  pathRadiusLine(scale, radius, circular, labelCount);\n  ctx.closePath();\n  ctx.stroke();\n  ctx.restore();\n}\n\nfunction createPointLabelContext(parent, index, label) {\n  return createContext(parent, {\n    label: label,\n    index: index,\n    type: 'pointLabel'\n  });\n}\n\nvar RadialLinearScale = /*#__PURE__*/function (_LinearScaleBase2) {\n  _inherits(RadialLinearScale, _LinearScaleBase2);\n\n  var _super23 = _createSuper(RadialLinearScale);\n\n  function RadialLinearScale(cfg) {\n    var _this39;\n\n    _classCallCheck(this, RadialLinearScale);\n\n    _this39 = _super23.call(this, cfg);\n    _this39.xCenter = undefined;\n    _this39.yCenter = undefined;\n    _this39.drawingArea = undefined;\n    _this39._pointLabels = [];\n    _this39._pointLabelItems = [];\n    return _this39;\n  }\n\n  _createClass(RadialLinearScale, [{\n    key: \"setDimensions\",\n    value: function setDimensions() {\n      var padding = this._padding = toPadding(getTickBackdropHeight(this.options) / 2);\n      var w = this.width = this.maxWidth - padding.width;\n      var h = this.height = this.maxHeight - padding.height;\n      this.xCenter = Math.floor(this.left + w / 2 + padding.left);\n      this.yCenter = Math.floor(this.top + h / 2 + padding.top);\n      this.drawingArea = Math.floor(Math.min(w, h) / 2);\n    }\n  }, {\n    key: \"determineDataLimits\",\n    value: function determineDataLimits() {\n      var _this$getMinMax4 = this.getMinMax(false),\n          min = _this$getMinMax4.min,\n          max = _this$getMinMax4.max;\n\n      this.min = isNumberFinite(min) && !isNaN(min) ? min : 0;\n      this.max = isNumberFinite(max) && !isNaN(max) ? max : 0;\n      this.handleTickRangeOptions();\n    }\n  }, {\n    key: \"computeTickLimit\",\n    value: function computeTickLimit() {\n      return Math.ceil(this.drawingArea / getTickBackdropHeight(this.options));\n    }\n  }, {\n    key: \"generateTickLabels\",\n    value: function generateTickLabels(ticks) {\n      var _this40 = this;\n\n      LinearScaleBase.prototype.generateTickLabels.call(this, ticks);\n      this._pointLabels = this.getLabels().map(function (value, index) {\n        var label = callback(_this40.options.pointLabels.callback, [value, index], _this40);\n        return label || label === 0 ? label : '';\n      }).filter(function (v, i) {\n        return _this40.chart.getDataVisibility(i);\n      });\n    }\n  }, {\n    key: \"fit\",\n    value: function fit() {\n      var opts = this.options;\n\n      if (opts.display && opts.pointLabels.display) {\n        fitWithPointLabels(this);\n      } else {\n        this.setCenterPoint(0, 0, 0, 0);\n      }\n    }\n  }, {\n    key: \"setCenterPoint\",\n    value: function setCenterPoint(leftMovement, rightMovement, topMovement, bottomMovement) {\n      this.xCenter += Math.floor((leftMovement - rightMovement) / 2);\n      this.yCenter += Math.floor((topMovement - bottomMovement) / 2);\n      this.drawingArea -= Math.min(this.drawingArea / 2, Math.max(leftMovement, rightMovement, topMovement, bottomMovement));\n    }\n  }, {\n    key: \"getIndexAngle\",\n    value: function getIndexAngle(index) {\n      var angleMultiplier = TAU / (this._pointLabels.length || 1);\n      var startAngle = this.options.startAngle || 0;\n      return _normalizeAngle(index * angleMultiplier + toRadians(startAngle));\n    }\n  }, {\n    key: \"getDistanceFromCenterForValue\",\n    value: function getDistanceFromCenterForValue(value) {\n      if (isNullOrUndef(value)) {\n        return NaN;\n      }\n\n      var scalingFactor = this.drawingArea / (this.max - this.min);\n\n      if (this.options.reverse) {\n        return (this.max - value) * scalingFactor;\n      }\n\n      return (value - this.min) * scalingFactor;\n    }\n  }, {\n    key: \"getValueForDistanceFromCenter\",\n    value: function getValueForDistanceFromCenter(distance) {\n      if (isNullOrUndef(distance)) {\n        return NaN;\n      }\n\n      var scaledDistance = distance / (this.drawingArea / (this.max - this.min));\n      return this.options.reverse ? this.max - scaledDistance : this.min + scaledDistance;\n    }\n  }, {\n    key: \"getPointLabelContext\",\n    value: function getPointLabelContext(index) {\n      var pointLabels = this._pointLabels || [];\n\n      if (index >= 0 && index < pointLabels.length) {\n        var pointLabel = pointLabels[index];\n        return createPointLabelContext(this.getContext(), index, pointLabel);\n      }\n    }\n  }, {\n    key: \"getPointPosition\",\n    value: function getPointPosition(index, distanceFromCenter) {\n      var additionalAngle = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n      var angle = this.getIndexAngle(index) - HALF_PI + additionalAngle;\n      return {\n        x: Math.cos(angle) * distanceFromCenter + this.xCenter,\n        y: Math.sin(angle) * distanceFromCenter + this.yCenter,\n        angle: angle\n      };\n    }\n  }, {\n    key: \"getPointPositionForValue\",\n    value: function getPointPositionForValue(index, value) {\n      return this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n    }\n  }, {\n    key: \"getBasePosition\",\n    value: function getBasePosition(index) {\n      return this.getPointPositionForValue(index || 0, this.getBaseValue());\n    }\n  }, {\n    key: \"getPointLabelPosition\",\n    value: function getPointLabelPosition(index) {\n      var _this$_pointLabelItem = this._pointLabelItems[index],\n          left = _this$_pointLabelItem.left,\n          top = _this$_pointLabelItem.top,\n          right = _this$_pointLabelItem.right,\n          bottom = _this$_pointLabelItem.bottom;\n      return {\n        left: left,\n        top: top,\n        right: right,\n        bottom: bottom\n      };\n    }\n  }, {\n    key: \"drawBackground\",\n    value: function drawBackground() {\n      var _this$options16 = this.options,\n          backgroundColor = _this$options16.backgroundColor,\n          circular = _this$options16.grid.circular;\n\n      if (backgroundColor) {\n        var ctx = this.ctx;\n        ctx.save();\n        ctx.beginPath();\n        pathRadiusLine(this, this.getDistanceFromCenterForValue(this._endValue), circular, this._pointLabels.length);\n        ctx.closePath();\n        ctx.fillStyle = backgroundColor;\n        ctx.fill();\n        ctx.restore();\n      }\n    }\n  }, {\n    key: \"drawGrid\",\n    value: function drawGrid() {\n      var _this41 = this;\n\n      var ctx = this.ctx;\n      var opts = this.options;\n      var angleLines = opts.angleLines,\n          grid = opts.grid,\n          border = opts.border;\n      var labelCount = this._pointLabels.length;\n      var i, offset, position;\n\n      if (opts.pointLabels.display) {\n        drawPointLabels(this, labelCount);\n      }\n\n      if (grid.display) {\n        this.ticks.forEach(function (tick, index) {\n          if (index !== 0 || index === 0 && _this41.min < 0) {\n            offset = _this41.getDistanceFromCenterForValue(tick.value);\n\n            var context = _this41.getContext(index);\n\n            var optsAtIndex = grid.setContext(context);\n            var optsAtIndexBorder = border.setContext(context);\n            drawRadiusLine(_this41, optsAtIndex, offset, labelCount, optsAtIndexBorder);\n          }\n        });\n      }\n\n      if (angleLines.display) {\n        ctx.save();\n\n        for (i = labelCount - 1; i >= 0; i--) {\n          var optsAtIndex = angleLines.setContext(this.getPointLabelContext(i));\n          var color = optsAtIndex.color,\n              lineWidth = optsAtIndex.lineWidth;\n\n          if (!lineWidth || !color) {\n            continue;\n          }\n\n          ctx.lineWidth = lineWidth;\n          ctx.strokeStyle = color;\n          ctx.setLineDash(optsAtIndex.borderDash);\n          ctx.lineDashOffset = optsAtIndex.borderDashOffset;\n          offset = this.getDistanceFromCenterForValue(opts.reverse ? this.min : this.max);\n          position = this.getPointPosition(i, offset);\n          ctx.beginPath();\n          ctx.moveTo(this.xCenter, this.yCenter);\n          ctx.lineTo(position.x, position.y);\n          ctx.stroke();\n        }\n\n        ctx.restore();\n      }\n    }\n  }, {\n    key: \"drawBorder\",\n    value: function drawBorder() {}\n  }, {\n    key: \"drawLabels\",\n    value: function drawLabels() {\n      var _this42 = this;\n\n      var ctx = this.ctx;\n      var opts = this.options;\n      var tickOpts = opts.ticks;\n\n      if (!tickOpts.display) {\n        return;\n      }\n\n      var startAngle = this.getIndexAngle(0);\n      var offset, width;\n      ctx.save();\n      ctx.translate(this.xCenter, this.yCenter);\n      ctx.rotate(startAngle);\n      ctx.textAlign = 'center';\n      ctx.textBaseline = 'middle';\n      this.ticks.forEach(function (tick, index) {\n        if (index === 0 && _this42.min >= 0 && !opts.reverse) {\n          return;\n        }\n\n        var optsAtIndex = tickOpts.setContext(_this42.getContext(index));\n        var tickFont = toFont(optsAtIndex.font);\n        offset = _this42.getDistanceFromCenterForValue(_this42.ticks[index].value);\n\n        if (optsAtIndex.showLabelBackdrop) {\n          ctx.font = tickFont.string;\n          width = ctx.measureText(tick.label).width;\n          ctx.fillStyle = optsAtIndex.backdropColor;\n          var padding = toPadding(optsAtIndex.backdropPadding);\n          ctx.fillRect(-width / 2 - padding.left, -offset - tickFont.size / 2 - padding.top, width + padding.width, tickFont.size + padding.height);\n        }\n\n        renderText(ctx, tick.label, 0, -offset, tickFont, {\n          color: optsAtIndex.color,\n          strokeColor: optsAtIndex.textStrokeColor,\n          strokeWidth: optsAtIndex.textStrokeWidth\n        });\n      });\n      ctx.restore();\n    }\n  }, {\n    key: \"drawTitle\",\n    value: function drawTitle() {}\n  }]);\n\n  return RadialLinearScale;\n}(LinearScaleBase);\n\n_defineProperty(RadialLinearScale, \"id\", 'radialLinear');\n\n_defineProperty(RadialLinearScale, \"defaults\", {\n  display: true,\n  animate: true,\n  position: 'chartArea',\n  angleLines: {\n    display: true,\n    lineWidth: 1,\n    borderDash: [],\n    borderDashOffset: 0.0\n  },\n  grid: {\n    circular: false\n  },\n  startAngle: 0,\n  ticks: {\n    showLabelBackdrop: true,\n    callback: Ticks.formatters.numeric\n  },\n  pointLabels: {\n    backdropColor: undefined,\n    backdropPadding: 2,\n    display: true,\n    font: {\n      size: 10\n    },\n    callback: function callback(label) {\n      return label;\n    },\n    padding: 5,\n    centerPointLabels: false\n  }\n});\n\n_defineProperty(RadialLinearScale, \"defaultRoutes\", {\n  'angleLines.color': 'borderColor',\n  'pointLabels.color': 'color',\n  'ticks.color': 'color'\n});\n\n_defineProperty(RadialLinearScale, \"descriptors\", {\n  angleLines: {\n    _fallback: 'grid'\n  }\n});\n\nvar INTERVALS = {\n  millisecond: {\n    common: true,\n    size: 1,\n    steps: 1000\n  },\n  second: {\n    common: true,\n    size: 1000,\n    steps: 60\n  },\n  minute: {\n    common: true,\n    size: 60000,\n    steps: 60\n  },\n  hour: {\n    common: true,\n    size: 3600000,\n    steps: 24\n  },\n  day: {\n    common: true,\n    size: 86400000,\n    steps: 30\n  },\n  week: {\n    common: false,\n    size: 604800000,\n    steps: 4\n  },\n  month: {\n    common: true,\n    size: 2.628e9,\n    steps: 12\n  },\n  quarter: {\n    common: false,\n    size: 7.884e9,\n    steps: 4\n  },\n  year: {\n    common: true,\n    size: 3.154e10\n  }\n};\nvar UNITS = /* #__PURE__ */Object.keys(INTERVALS);\n\nfunction sorter(a, b) {\n  return a - b;\n}\n\nfunction _parse(scale, input) {\n  if (isNullOrUndef(input)) {\n    return null;\n  }\n\n  var adapter = scale._adapter;\n  var _scale$_parseOpts = scale._parseOpts,\n      parser = _scale$_parseOpts.parser,\n      round = _scale$_parseOpts.round,\n      isoWeekday = _scale$_parseOpts.isoWeekday;\n  var value = input;\n\n  if (typeof parser === 'function') {\n    value = parser(value);\n  }\n\n  if (!isNumberFinite(value)) {\n    value = typeof parser === 'string' ? adapter.parse(value, parser) : adapter.parse(value);\n  }\n\n  if (value === null) {\n    return null;\n  }\n\n  if (round) {\n    value = round === 'week' && (isNumber(isoWeekday) || isoWeekday === true) ? adapter.startOf(value, 'isoWeek', isoWeekday) : adapter.startOf(value, round);\n  }\n\n  return +value;\n}\n\nfunction determineUnitForAutoTicks(minUnit, min, max, capacity) {\n  var ilen = UNITS.length;\n\n  for (var i = UNITS.indexOf(minUnit); i < ilen - 1; ++i) {\n    var interval = INTERVALS[UNITS[i]];\n    var factor = interval.steps ? interval.steps : Number.MAX_SAFE_INTEGER;\n\n    if (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\n      return UNITS[i];\n    }\n  }\n\n  return UNITS[ilen - 1];\n}\n\nfunction determineUnitForFormatting(scale, numTicks, minUnit, min, max) {\n  for (var i = UNITS.length - 1; i >= UNITS.indexOf(minUnit); i--) {\n    var unit = UNITS[i];\n\n    if (INTERVALS[unit].common && scale._adapter.diff(max, min, unit) >= numTicks - 1) {\n      return unit;\n    }\n  }\n\n  return UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\n}\n\nfunction determineMajorUnit(unit) {\n  for (var i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i) {\n    if (INTERVALS[UNITS[i]].common) {\n      return UNITS[i];\n    }\n  }\n}\n\nfunction addTick(ticks, time, timestamps) {\n  if (!timestamps) {\n    ticks[time] = true;\n  } else if (timestamps.length) {\n    var _lookup2 = _lookup(timestamps, time),\n        lo = _lookup2.lo,\n        hi = _lookup2.hi;\n\n    var timestamp = timestamps[lo] >= time ? timestamps[lo] : timestamps[hi];\n    ticks[timestamp] = true;\n  }\n}\n\nfunction setMajorTicks(scale, ticks, map, majorUnit) {\n  var adapter = scale._adapter;\n  var first = +adapter.startOf(ticks[0].value, majorUnit);\n  var last = ticks[ticks.length - 1].value;\n  var major, index;\n\n  for (major = first; major <= last; major = +adapter.add(major, 1, majorUnit)) {\n    index = map[major];\n\n    if (index >= 0) {\n      ticks[index].major = true;\n    }\n  }\n\n  return ticks;\n}\n\nfunction ticksFromTimestamps(scale, values, majorUnit) {\n  var ticks = [];\n  var map = {};\n  var ilen = values.length;\n  var i, value;\n\n  for (i = 0; i < ilen; ++i) {\n    value = values[i];\n    map[value] = i;\n    ticks.push({\n      value: value,\n      major: false\n    });\n  }\n\n  return ilen === 0 || !majorUnit ? ticks : setMajorTicks(scale, ticks, map, majorUnit);\n}\n\nvar TimeScale = /*#__PURE__*/function (_Scale4) {\n  _inherits(TimeScale, _Scale4);\n\n  var _super24 = _createSuper(TimeScale);\n\n  function TimeScale(props) {\n    var _this43;\n\n    _classCallCheck(this, TimeScale);\n\n    _this43 = _super24.call(this, props);\n    _this43._cache = {\n      data: [],\n      labels: [],\n      all: []\n    };\n    _this43._unit = 'day';\n    _this43._majorUnit = undefined;\n    _this43._offsets = {};\n    _this43._normalized = false;\n    _this43._parseOpts = undefined;\n    return _this43;\n  }\n\n  _createClass(TimeScale, [{\n    key: \"init\",\n    value: function init(scaleOpts) {\n      var opts = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      var time = scaleOpts.time || (scaleOpts.time = {});\n      var adapter = this._adapter = new adapters._date(scaleOpts.adapters.date);\n      adapter.init(opts);\n      mergeIf(time.displayFormats, adapter.formats());\n      this._parseOpts = {\n        parser: time.parser,\n        round: time.round,\n        isoWeekday: time.isoWeekday\n      };\n\n      _get(_getPrototypeOf(TimeScale.prototype), \"init\", this).call(this, scaleOpts);\n\n      this._normalized = opts.normalized;\n    }\n  }, {\n    key: \"parse\",\n    value: function parse(raw, index) {\n      if (raw === undefined) {\n        return null;\n      }\n\n      return _parse(this, raw);\n    }\n  }, {\n    key: \"beforeLayout\",\n    value: function beforeLayout() {\n      _get(_getPrototypeOf(TimeScale.prototype), \"beforeLayout\", this).call(this);\n\n      this._cache = {\n        data: [],\n        labels: [],\n        all: []\n      };\n    }\n  }, {\n    key: \"determineDataLimits\",\n    value: function determineDataLimits() {\n      var options = this.options;\n      var adapter = this._adapter;\n      var unit = options.time.unit || 'day';\n\n      var _this$getUserBounds5 = this.getUserBounds(),\n          min = _this$getUserBounds5.min,\n          max = _this$getUserBounds5.max,\n          minDefined = _this$getUserBounds5.minDefined,\n          maxDefined = _this$getUserBounds5.maxDefined;\n\n      function _applyBounds(bounds) {\n        if (!minDefined && !isNaN(bounds.min)) {\n          min = Math.min(min, bounds.min);\n        }\n\n        if (!maxDefined && !isNaN(bounds.max)) {\n          max = Math.max(max, bounds.max);\n        }\n      }\n\n      if (!minDefined || !maxDefined) {\n        _applyBounds(this._getLabelBounds());\n\n        if (options.bounds !== 'ticks' || options.ticks.source !== 'labels') {\n          _applyBounds(this.getMinMax(false));\n        }\n      }\n\n      min = isNumberFinite(min) && !isNaN(min) ? min : +adapter.startOf(Date.now(), unit);\n      max = isNumberFinite(max) && !isNaN(max) ? max : +adapter.endOf(Date.now(), unit) + 1;\n      this.min = Math.min(min, max - 1);\n      this.max = Math.max(min + 1, max);\n    }\n  }, {\n    key: \"_getLabelBounds\",\n    value: function _getLabelBounds() {\n      var arr = this.getLabelTimestamps();\n      var min = Number.POSITIVE_INFINITY;\n      var max = Number.NEGATIVE_INFINITY;\n\n      if (arr.length) {\n        min = arr[0];\n        max = arr[arr.length - 1];\n      }\n\n      return {\n        min: min,\n        max: max\n      };\n    }\n  }, {\n    key: \"buildTicks\",\n    value: function buildTicks() {\n      var options = this.options;\n      var timeOpts = options.time;\n      var tickOpts = options.ticks;\n      var timestamps = tickOpts.source === 'labels' ? this.getLabelTimestamps() : this._generate();\n\n      if (options.bounds === 'ticks' && timestamps.length) {\n        this.min = this._userMin || timestamps[0];\n        this.max = this._userMax || timestamps[timestamps.length - 1];\n      }\n\n      var min = this.min;\n      var max = this.max;\n\n      var ticks = _filterBetween(timestamps, min, max);\n\n      this._unit = timeOpts.unit || (tickOpts.autoSkip ? determineUnitForAutoTicks(timeOpts.minUnit, this.min, this.max, this._getLabelCapacity(min)) : determineUnitForFormatting(this, ticks.length, timeOpts.minUnit, this.min, this.max));\n      this._majorUnit = !tickOpts.major.enabled || this._unit === 'year' ? undefined : determineMajorUnit(this._unit);\n      this.initOffsets(timestamps);\n\n      if (options.reverse) {\n        ticks.reverse();\n      }\n\n      return ticksFromTimestamps(this, ticks, this._majorUnit);\n    }\n  }, {\n    key: \"afterAutoSkip\",\n    value: function afterAutoSkip() {\n      if (this.options.offsetAfterAutoskip) {\n        this.initOffsets(this.ticks.map(function (tick) {\n          return +tick.value;\n        }));\n      }\n    }\n  }, {\n    key: \"initOffsets\",\n    value: function initOffsets() {\n      var timestamps = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n      var start = 0;\n      var end = 0;\n      var first, last;\n\n      if (this.options.offset && timestamps.length) {\n        first = this.getDecimalForValue(timestamps[0]);\n\n        if (timestamps.length === 1) {\n          start = 1 - first;\n        } else {\n          start = (this.getDecimalForValue(timestamps[1]) - first) / 2;\n        }\n\n        last = this.getDecimalForValue(timestamps[timestamps.length - 1]);\n\n        if (timestamps.length === 1) {\n          end = last;\n        } else {\n          end = (last - this.getDecimalForValue(timestamps[timestamps.length - 2])) / 2;\n        }\n      }\n\n      var limit = timestamps.length < 3 ? 0.5 : 0.25;\n      start = _limitValue(start, 0, limit);\n      end = _limitValue(end, 0, limit);\n      this._offsets = {\n        start: start,\n        end: end,\n        factor: 1 / (start + 1 + end)\n      };\n    }\n  }, {\n    key: \"_generate\",\n    value: function _generate() {\n      var adapter = this._adapter;\n      var min = this.min;\n      var max = this.max;\n      var options = this.options;\n      var timeOpts = options.time;\n      var minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, this._getLabelCapacity(min));\n      var stepSize = valueOrDefault(options.ticks.stepSize, 1);\n      var weekday = minor === 'week' ? timeOpts.isoWeekday : false;\n      var hasWeekday = isNumber(weekday) || weekday === true;\n      var ticks = {};\n      var first = min;\n      var time, count;\n\n      if (hasWeekday) {\n        first = +adapter.startOf(first, 'isoWeek', weekday);\n      }\n\n      first = +adapter.startOf(first, hasWeekday ? 'day' : minor);\n\n      if (adapter.diff(max, min, minor) > 100000 * stepSize) {\n        throw new Error(min + ' and ' + max + ' are too far apart with stepSize of ' + stepSize + ' ' + minor);\n      }\n\n      var timestamps = options.ticks.source === 'data' && this.getDataTimestamps();\n\n      for (time = first, count = 0; time < max; time = +adapter.add(time, stepSize, minor), count++) {\n        addTick(ticks, time, timestamps);\n      }\n\n      if (time === max || options.bounds === 'ticks' || count === 1) {\n        addTick(ticks, time, timestamps);\n      }\n\n      return Object.keys(ticks).sort(sorter).map(function (x) {\n        return +x;\n      });\n    }\n  }, {\n    key: \"getLabelForValue\",\n    value: function getLabelForValue(value) {\n      var adapter = this._adapter;\n      var timeOpts = this.options.time;\n\n      if (timeOpts.tooltipFormat) {\n        return adapter.format(value, timeOpts.tooltipFormat);\n      }\n\n      return adapter.format(value, timeOpts.displayFormats.datetime);\n    }\n  }, {\n    key: \"format\",\n    value: function format(value, _format) {\n      var options = this.options;\n      var formats = options.time.displayFormats;\n      var unit = this._unit;\n      var fmt = _format || formats[unit];\n      return this._adapter.format(value, fmt);\n    }\n  }, {\n    key: \"_tickFormatFunction\",\n    value: function _tickFormatFunction(time, index, ticks, format) {\n      var options = this.options;\n      var formatter = options.ticks.callback;\n\n      if (formatter) {\n        return callback(formatter, [time, index, ticks], this);\n      }\n\n      var formats = options.time.displayFormats;\n      var unit = this._unit;\n      var majorUnit = this._majorUnit;\n      var minorFormat = unit && formats[unit];\n      var majorFormat = majorUnit && formats[majorUnit];\n      var tick = ticks[index];\n      var major = majorUnit && majorFormat && tick && tick.major;\n      return this._adapter.format(time, format || (major ? majorFormat : minorFormat));\n    }\n  }, {\n    key: \"generateTickLabels\",\n    value: function generateTickLabels(ticks) {\n      var i, ilen, tick;\n\n      for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n        tick = ticks[i];\n        tick.label = this._tickFormatFunction(tick.value, i, ticks);\n      }\n    }\n  }, {\n    key: \"getDecimalForValue\",\n    value: function getDecimalForValue(value) {\n      return value === null ? NaN : (value - this.min) / (this.max - this.min);\n    }\n  }, {\n    key: \"getPixelForValue\",\n    value: function getPixelForValue(value) {\n      var offsets = this._offsets;\n      var pos = this.getDecimalForValue(value);\n      return this.getPixelForDecimal((offsets.start + pos) * offsets.factor);\n    }\n  }, {\n    key: \"getValueForPixel\",\n    value: function getValueForPixel(pixel) {\n      var offsets = this._offsets;\n      var pos = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n      return this.min + pos * (this.max - this.min);\n    }\n  }, {\n    key: \"_getLabelSize\",\n    value: function _getLabelSize(label) {\n      var ticksOpts = this.options.ticks;\n      var tickLabelWidth = this.ctx.measureText(label).width;\n      var angle = toRadians(this.isHorizontal() ? ticksOpts.maxRotation : ticksOpts.minRotation);\n      var cosRotation = Math.cos(angle);\n      var sinRotation = Math.sin(angle);\n\n      var tickFontSize = this._resolveTickFontOptions(0).size;\n\n      return {\n        w: tickLabelWidth * cosRotation + tickFontSize * sinRotation,\n        h: tickLabelWidth * sinRotation + tickFontSize * cosRotation\n      };\n    }\n  }, {\n    key: \"_getLabelCapacity\",\n    value: function _getLabelCapacity(exampleTime) {\n      var timeOpts = this.options.time;\n      var displayFormats = timeOpts.displayFormats;\n      var format = displayFormats[timeOpts.unit] || displayFormats.millisecond;\n\n      var exampleLabel = this._tickFormatFunction(exampleTime, 0, ticksFromTimestamps(this, [exampleTime], this._majorUnit), format);\n\n      var size = this._getLabelSize(exampleLabel);\n\n      var capacity = Math.floor(this.isHorizontal() ? this.width / size.w : this.height / size.h) - 1;\n      return capacity > 0 ? capacity : 1;\n    }\n  }, {\n    key: \"getDataTimestamps\",\n    value: function getDataTimestamps() {\n      var timestamps = this._cache.data || [];\n      var i, ilen;\n\n      if (timestamps.length) {\n        return timestamps;\n      }\n\n      var metas = this.getMatchingVisibleMetas();\n\n      if (this._normalized && metas.length) {\n        return this._cache.data = metas[0].controller.getAllParsedValues(this);\n      }\n\n      for (i = 0, ilen = metas.length; i < ilen; ++i) {\n        timestamps = timestamps.concat(metas[i].controller.getAllParsedValues(this));\n      }\n\n      return this._cache.data = this.normalize(timestamps);\n    }\n  }, {\n    key: \"getLabelTimestamps\",\n    value: function getLabelTimestamps() {\n      var timestamps = this._cache.labels || [];\n      var i, ilen;\n\n      if (timestamps.length) {\n        return timestamps;\n      }\n\n      var labels = this.getLabels();\n\n      for (i = 0, ilen = labels.length; i < ilen; ++i) {\n        timestamps.push(_parse(this, labels[i]));\n      }\n\n      return this._cache.labels = this._normalized ? timestamps : this.normalize(timestamps);\n    }\n  }, {\n    key: \"normalize\",\n    value: function normalize(values) {\n      return _arrayUnique(values.sort(sorter));\n    }\n  }]);\n\n  return TimeScale;\n}(Scale);\n\n_defineProperty(TimeScale, \"id\", 'time');\n\n_defineProperty(TimeScale, \"defaults\", {\n  bounds: 'data',\n  adapters: {},\n  time: {\n    parser: false,\n    unit: false,\n    round: false,\n    isoWeekday: false,\n    minUnit: 'millisecond',\n    displayFormats: {}\n  },\n  ticks: {\n    source: 'auto',\n    callback: false,\n    major: {\n      enabled: false\n    }\n  }\n});\n\nfunction interpolate(table, val, reverse) {\n  var lo = 0;\n  var hi = table.length - 1;\n  var prevSource, nextSource, prevTarget, nextTarget;\n\n  if (reverse) {\n    if (val >= table[lo].pos && val <= table[hi].pos) {\n      var _lookupByKey2 = _lookupByKey(table, 'pos', val);\n\n      lo = _lookupByKey2.lo;\n      hi = _lookupByKey2.hi;\n    }\n\n    var _table$lo = table[lo];\n    prevSource = _table$lo.pos;\n    prevTarget = _table$lo.time;\n    var _table$hi = table[hi];\n    nextSource = _table$hi.pos;\n    nextTarget = _table$hi.time;\n  } else {\n    if (val >= table[lo].time && val <= table[hi].time) {\n      var _lookupByKey3 = _lookupByKey(table, 'time', val);\n\n      lo = _lookupByKey3.lo;\n      hi = _lookupByKey3.hi;\n    }\n\n    var _table$lo2 = table[lo];\n    prevSource = _table$lo2.time;\n    prevTarget = _table$lo2.pos;\n    var _table$hi2 = table[hi];\n    nextSource = _table$hi2.time;\n    nextTarget = _table$hi2.pos;\n  }\n\n  var span = nextSource - prevSource;\n  return span ? prevTarget + (nextTarget - prevTarget) * (val - prevSource) / span : prevTarget;\n}\n\nvar TimeSeriesScale = /*#__PURE__*/function (_TimeScale) {\n  _inherits(TimeSeriesScale, _TimeScale);\n\n  var _super25 = _createSuper(TimeSeriesScale);\n\n  function TimeSeriesScale(props) {\n    var _this44;\n\n    _classCallCheck(this, TimeSeriesScale);\n\n    _this44 = _super25.call(this, props);\n    _this44._table = [];\n    _this44._minPos = undefined;\n    _this44._tableRange = undefined;\n    return _this44;\n  }\n\n  _createClass(TimeSeriesScale, [{\n    key: \"initOffsets\",\n    value: function initOffsets() {\n      var timestamps = this._getTimestampsForTable();\n\n      var table = this._table = this.buildLookupTable(timestamps);\n      this._minPos = interpolate(table, this.min);\n      this._tableRange = interpolate(table, this.max) - this._minPos;\n\n      _get(_getPrototypeOf(TimeSeriesScale.prototype), \"initOffsets\", this).call(this, timestamps);\n    }\n  }, {\n    key: \"buildLookupTable\",\n    value: function buildLookupTable(timestamps) {\n      var min = this.min,\n          max = this.max;\n      var items = [];\n      var table = [];\n      var i, ilen, prev, curr, next;\n\n      for (i = 0, ilen = timestamps.length; i < ilen; ++i) {\n        curr = timestamps[i];\n\n        if (curr >= min && curr <= max) {\n          items.push(curr);\n        }\n      }\n\n      if (items.length < 2) {\n        return [{\n          time: min,\n          pos: 0\n        }, {\n          time: max,\n          pos: 1\n        }];\n      }\n\n      for (i = 0, ilen = items.length; i < ilen; ++i) {\n        next = items[i + 1];\n        prev = items[i - 1];\n        curr = items[i];\n\n        if (Math.round((next + prev) / 2) !== curr) {\n          table.push({\n            time: curr,\n            pos: i / (ilen - 1)\n          });\n        }\n      }\n\n      return table;\n    }\n  }, {\n    key: \"_generate\",\n    value: function _generate() {\n      var min = this.min;\n      var max = this.max;\n\n      var timestamps = _get(_getPrototypeOf(TimeSeriesScale.prototype), \"getDataTimestamps\", this).call(this);\n\n      if (!timestamps.includes(min) || !timestamps.length) {\n        timestamps.splice(0, 0, min);\n      }\n\n      if (!timestamps.includes(max) || timestamps.length === 1) {\n        timestamps.push(max);\n      }\n\n      return timestamps.sort(function (a, b) {\n        return a - b;\n      });\n    }\n  }, {\n    key: \"_getTimestampsForTable\",\n    value: function _getTimestampsForTable() {\n      var timestamps = this._cache.all || [];\n\n      if (timestamps.length) {\n        return timestamps;\n      }\n\n      var data = this.getDataTimestamps();\n      var label = this.getLabelTimestamps();\n\n      if (data.length && label.length) {\n        timestamps = this.normalize(data.concat(label));\n      } else {\n        timestamps = data.length ? data : label;\n      }\n\n      timestamps = this._cache.all = timestamps;\n      return timestamps;\n    }\n  }, {\n    key: \"getDecimalForValue\",\n    value: function getDecimalForValue(value) {\n      return (interpolate(this._table, value) - this._minPos) / this._tableRange;\n    }\n  }, {\n    key: \"getValueForPixel\",\n    value: function getValueForPixel(pixel) {\n      var offsets = this._offsets;\n      var decimal = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n      return interpolate(this._table, decimal * this._tableRange + this._minPos, true);\n    }\n  }]);\n\n  return TimeSeriesScale;\n}(TimeScale);\n\n_defineProperty(TimeSeriesScale, \"id\", 'timeseries');\n\n_defineProperty(TimeSeriesScale, \"defaults\", TimeScale.defaults);\n\nvar scales = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  CategoryScale: CategoryScale,\n  LinearScale: LinearScale,\n  LogarithmicScale: LogarithmicScale,\n  RadialLinearScale: RadialLinearScale,\n  TimeScale: TimeScale,\n  TimeSeriesScale: TimeSeriesScale\n});\nvar registerables = [controllers, elements, plugins, scales];\nexport { Animation, Animations, ArcElement, BarController, BarElement, BasePlatform, BasicPlatform, BubbleController, CategoryScale, Chart, plugin_colors as Colors, DatasetController, plugin_decimation as Decimation, DomPlatform, DoughnutController, Element, index as Filler, Interaction, plugin_legend as Legend, LineController, LineElement, LinearScale, LogarithmicScale, PieController, PointElement, PolarAreaController, RadarController, RadialLinearScale, Scale, ScatterController, plugin_subtitle as SubTitle, Ticks, TimeScale, TimeSeriesScale, plugin_title as Title, plugin_tooltip as Tooltip, adapters as _adapters, _detectPlatform, animator, controllers, defaults, elements, layouts, plugins, registerables, registry, scales };","map":{"version":3,"mappings":"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","names":["Animator","constructor","_request","_charts","Map","_running","_lastDate","undefined","_notify","chart","anims","date","type","callbacks","listeners","numSteps","duration","forEach","fn","initial","currentStep","Math","min","start","_refresh","requestAnimFrame","call","window","_update","Date","now","remaining","running","items","length","i","draw","item","_active","_total","tick","pop","_getAnims","charts","get","complete","progress","set","listen","event","cb","push","add","has","reduce","acc","cur","max","_duration","stop","cancel","remove","delete","transparent","interpolators","boolean","from","to","factor","color","c0","helpersColor","c1","valid","mix","hexString","number","Animation","cfg","target","prop","currentValue","resolve","_fn","_easing","effects","easing","linear","_start","floor","delay","_loop","loop","_target","_prop","_from","_to","_promises","active","update","elapsed","remain","wait","promises","Promise","res","rej","resolved","method","Animations","config","_chart","_properties","configure","isObject","animationOptions","Object","keys","defaults","animation","animatedProps","getOwnPropertyNames","key","option","isArray","properties","_animateOptions","values","newOptions","options","resolveTargetOptions","animations","_createAnimations","$shared","awaitAll","$animations","then","props","charAt","value","size","assign","animator","anim","all","scaleClip","scale","allowedOverflow","opts","reverse","end","defaultClip","xScale","yScale","x","y","top","right","bottom","left","toClip","t","r","b","l","disabled","getSortedDatasetIndices","filterVisible","metasets","_getSortedDatasetMetas","ilen","index","applyStack","stack","dsIndex","singleMode","mode","datasetIndex","otherValue","isFinite","sign","convertObjectDataToArray","data","meta","iScale","vScale","iAxisKey","axis","vAxisKey","adata","Array","isStacked","stacked","getStackKey","indexScale","valueScale","id","getUserBounds","minDefined","maxDefined","Number","NEGATIVE_INFINITY","POSITIVE_INFINITY","getOrCreateStack","stacks","stackKey","indexValue","subStack","getLastIndexInStack","positive","getMatchingVisibleMetas","updateStacks","controller","parsed","_cachedMeta","_stacks","iAxis","vAxis","itemStacks","_top","_bottom","visualValues","_visualValues","getFirstScaleId","scales","filter","shift","createDatasetContext","parent","createContext","dataset","createDataContext","element","dataIndex","raw","clearStacks","_parsed","isDirectUpdateMode","cloneIfNotShared","cached","shared","createStack","canStack","hidden","_stacked","DatasetController","_ctx","ctx","_cachedDataOpts","getMeta","_type","_parsing","_data","_objectData","_sharedOptions","_drawStart","_drawCount","enableOptionSharing","supportsDecimation","$context","_syncList","datasetElementType","dataElementType","initialize","linkScales","addElements","fill","isPluginEnabled","console","warn","updateIndex","getDataset","chooseId","xid","xAxisID","valueOrDefault","yid","yAxisID","rid","rAxisID","indexAxis","iid","iAxisID","vid","vAxisID","getScaleForId","rScale","datasets","getDatasetMeta","scaleID","_getOtherScale","reset","_destroy","unlistenArrayEvents","_dataCheck","isExtensible","listenArrayEvents","buildOrUpdateElements","resetNewElements","stackChanged","oldStacked","_resyncElements","scopeKeys","datasetScopeKeys","scopes","getOptionScopes","createResolver","getContext","parsing","parse","count","sorted","_sorted","prev","parseArrayData","parseObjectData","parsePrimitiveData","isNotInOrderComparedToPrev","labels","getLabels","singleScale","xAxisKey","yAxisKey","resolveObjectKey","getParsed","getDataElement","updateRangeFromParsed","range","parsedValue","NaN","getMinMax","otherScale","otherMin","otherMax","_skip","getAllParsedValues","getMaxOverflow","getLabelAndValue","label","getLabelForValue","_clip","clip","elements","area","chartArea","drawActiveElementsOnTop","getStyle","resolveDatasetElementOptions","resolveDataElementOptions","context","_resolveElementOptions","elementType","cache","cacheKey","sharing","defined","datasetElementScopeKeys","prefixes","names","resolveNamedOptions","freeze","_resolveAnimations","transition","datasetAnimationScopeKeys","_cacheable","getSharedOptions","includeOptions","sharedOptions","_animationsDisabled","_getSharedOptions","firstOpts","previouslySharedOptions","updateSharedOptions","updateElement","_setStyle","removeHoverStyle","setHoverStyle","_removeDatasetHoverStyle","_setDatasetHoverStyle","arg1","arg2","numMeta","numData","_insertElements","_removeElements","move","arr","updateElements","removed","splice","_sync","args","_dataChanges","_onDataPush","arguments","_onDataPop","_onDataShift","_onDataSplice","newCount","_onDataUnshift","getAllScaleValues","_cache","$bar","visibleMetas","concat","_arrayUnique","sort","a","computeMinSampleSize","_length","curr","updateMinAndPrev","abs","getPixelForValue","ticks","getPixelForTick","computeFitCategoryTraits","ruler","stackCount","thickness","barThickness","ratio","isNullOrUndef","categoryPercentage","barPercentage","chunk","pixels","computeFlexCategoryTraits","next","percent","parseFloatBar","entry","startValue","endValue","barStart","barEnd","_custom","parseValue","parseArrayOrPrimitive","isFloatBar","custom","barSign","actualBase","isHorizontal","borderProps","horizontal","base","setBorderSkipped","edge","borderSkipped","enableBorderRadius","parseEdge","swap","startEnd","orig","v1","v2","v","setInflateAmount","inflateAmount","BarController","obj","bars","getBasePixel","_getRuler","vpixels","head","_calculateBarValuePixels","ipixels","_calculateBarIndexPixels","center","height","width","_getStacks","last","grouped","currentParsed","iScaleValue","skipNull","find","val","isNaN","indexOf","_getStackCount","_getStackIndex","name","_startPixel","_endPixel","baseValue","minBarLength","floating","getDataVisibility","startPixel","getPixelForDecimal","endPixel","getValueForPixel","halfGrid","getLineWidthForValue","maxBarThickness","Infinity","stackIndex","rects","numbers","_index_","offset","grid","_value_","beginAtZero","BubbleController","radius","points","point","iPixel","vPixel","skip","getRatioAndOffset","rotation","circumference","cutout","ratioX","ratioY","offsetX","offsetY","TAU","startAngle","endAngle","startX","cos","startY","sin","endX","endY","calcMax","angle","_angleBetween","calcMin","maxX","maxY","HALF_PI","minX","PI","minY","DoughnutController","innerRadius","outerRadius","getter","_getRotation","toRadians","_getCircumference","_getRotationExtents","isDatasetVisible","arcs","spacing","getMaxBorderWidth","getMaxOffset","maxSize","toPercentage","chartWeight","_getRingWeight","maxWidth","maxHeight","maxRadius","toDimension","radiusLength","_getVisibleDatasetWeightTotal","total","calculateTotal","_getRingWeightOffset","_circumference","animateRotate","calculateCircumference","animationOpts","centerX","centerY","animateScale","arc","metaData","formatNumber","locale","borderAlign","borderWidth","hoverBorderWidth","hoverOffset","ringWeightOffset","weight","_scriptable","_indexable","startsWith","aspectRatio","plugins","legend","generateLabels","pointStyle","map","style","text","fillStyle","backgroundColor","strokeStyle","borderColor","fontColor","lineWidth","onClick","e","legendItem","toggleDataVisibility","LineController","line","_dataset","animationsDisabled","_getStartAndCountOfVisiblePoints","_scaleRangesChanged","_datasetIndex","_decimated","showLine","segment","animated","spanGaps","maxGapLength","isNumber","directUpdate","pointsCount","prevParsed","nullData","border","firstPoint","lastPoint","updateControlPoints","PolarAreaController","_parseObjectDataRadialScale","bind","_updateRadius","minSize","cutoutPercentage","getVisibleDatasetCount","xCenter","yCenter","datasetStartAngle","getIndexAngle","defaultAngle","countVisibleElements","_computeAngle","getDistanceFromCenterForValue","angleLines","display","circular","pointLabels","PieController","RadarController","_fullLoop","pointPosition","getPointPositionForValue","ScatterController","registry","getElement","interaction","abstract","Error","DateAdapterBase","init","formats","format","diff","startOf","endOf","members","prototype","_date","binarySearch","metaset","intersect","lookupMethod","_reversePixels","_rlookupByKey","_lookupByKey","el","getRange","lo","hi","evaluateInteractionItems","position","handler","getSortedVisibleDatasetMetas","j","getDistanceMetricForAxis","useX","useY","pt1","pt2","deltaX","deltaY","sqrt","pow","getIntersectItems","useFinalPosition","includeInvisible","isPointInArea","evaluationFunc","_isPointInArea","inRange","getNearestRadialItems","getProps","getAngleFromPoint","getNearestCartesianItems","distanceMetric","minDistance","getCenterPoint","pointInArea","distance","getNearestItems","getAxisItems","rangeMethod","intersectsItem","modes","getRelativePosition","nearest","STATIC_POSITIONS","filterByPosition","array","pos","filterDynamicPositionByAxis","box","sortByWeight","v0","wrapBoxes","boxes","layoutBoxes","stackWeight","buildStacks","layouts","wrap","includes","_stack","placed","setLayoutDims","params","vBoxMaxWidth","hBoxMaxHeight","layout","fullSize","availableWidth","availableHeight","buildLayoutBoxes","centerHorizontal","centerVertical","leftAndTop","rightAndBottom","vertical","getCombinedMax","maxPadding","updateMaxPadding","boxPadding","updateDims","getPadding","newWidth","outerWidth","newHeight","outerHeight","widthChanged","w","heightChanged","h","same","other","handleMaxPadding","updatePos","change","getMargins","marginForPositions","positions","margin","fitBoxes","refitBoxes","refit","changed","setBoxDims","placeBoxes","userPadding","padding","addBox","_layers","z","removeBox","layoutItem","minPadding","toPadding","verticalBoxes","horizontalBoxes","each","beforeLayout","visibleVerticalBoxCount","BasePlatform","acquireContext","canvas","releaseContext","addEventListener","listener","removeEventListener","getDevicePixelRatio","getMaximumSize","isAttached","updateConfig","BasicPlatform","EXPANDO_KEY","EVENT_TYPES","touchstart","touchmove","touchend","pointerenter","pointerdown","pointermove","pointerup","pointerleave","pointerout","isNullOrEmpty","initCanvas","renderHeight","getAttribute","renderWidth","boxSizing","displayWidth","readUsedSize","displayHeight","eventListenerOptions","supportsEventListenerOptions","passive","addListener","node","removeListener","fromNativeEvent","native","nodeListContains","nodeList","contains","createAttachObserver","observer","MutationObserver","entries","trigger","addedNodes","removedNodes","observe","document","childList","subtree","createDetachObserver","drpListeningCharts","oldDevicePixelRatio","onWindowResize","dpr","devicePixelRatio","resize","currentDevicePixelRatio","listenDevicePixelRatioChanges","unlistenDevicePixelRatioChanges","createResizeObserver","container","_getParentNode","throttled","clientWidth","ResizeObserver","contentRect","releaseObserver","disconnect","createProxyAndListen","proxy","DomPlatform","removeAttribute","setAttribute","proxies","$proxies","handlers","attach","detach","isConnected","_detectPlatform","_isDomSupported","OffscreenCanvas","Element","tooltipPosition","hasValue","final","ret","autoSkip","tickOpts","determinedMaxTicks","determineMaxTicks","ticksLimit","maxTicksLimit","majorIndices","major","enabled","getMajorIndices","numMajorIndices","first","newTicks","skipMajors","calculateSpacing","avgMajorSpacing","round","tickLength","_tickSize","maxScale","maxChart","_maxLength","evenMajorSpacing","getEvenSpacing","factors","_factorize","result","ceil","majorStart","majorEnd","len","reverseAlign","align","offsetFromEdge","getTicksLimit","ticksLength","sample","numItems","increment","getPixelForGridLine","offsetGridLines","validIndex","epsilon","lineValue","garbageCollect","caches","gc","gcLen","getTickMarkLength","drawTicks","getTitleHeight","fallback","font","toFont","lines","lineHeight","createScaleContext","createTickContext","titleAlign","_toLeftRightCenter","titleArgs","titleX","titleY","_alignStartEnd","positionAxisID","Scale","_margins","paddingTop","paddingBottom","paddingLeft","paddingRight","labelRotation","_range","_gridLineItems","_labelItems","_labelSizes","_longestTextCache","_userMax","_userMin","_suggestedMax","_suggestedMin","_ticksLength","_borderValue","_dataLimitsCached","setContext","suggestedMin","suggestedMax","finiteOrDefault","metas","getTicks","xLabels","yLabels","getLabelItems","_computeLabelItems","beforeUpdate","margins","grace","sampleSize","beforeSetDimensions","setDimensions","afterSetDimensions","beforeDataLimits","determineDataLimits","afterDataLimits","_addGrace","beforeBuildTicks","buildTicks","afterBuildTicks","samplingEnabled","_convertTicksToLabels","beforeCalculateLabelRotation","calculateLabelRotation","afterCalculateLabelRotation","source","afterAutoSkip","beforeFit","fit","afterFit","afterUpdate","reversePixels","_alignToPixels","alignToPixels","_callHooks","notifyPlugins","beforeTickToLabelConversion","generateTickLabels","callback","afterTickToLabelConversion","numTicks","minRotation","maxRotation","tickWidth","maxLabelDiagonal","_isVisible","labelSizes","_getLabelSizes","maxLabelWidth","widest","maxLabelHeight","highest","_limitValue","title","toDegrees","asin","titleOpts","gridOpts","titleHeight","tickPadding","angleRadians","labelHeight","mirror","labelWidth","_calculatePadding","_handleMargins","isRotated","labelsBelowTicks","offsetLeft","offsetRight","isFullSize","_computeLabelSizes","widths","heights","widestLabelSize","highestLabelSize","jlen","tickFont","fontString","nestedLabel","_resolveTickFontOptions","string","_measureText","valueAt","idx","pixel","decimal","_int16Range","_alignPixel","getDecimalForPixel","getBaseValue","optionTicks","rot","autoSkipPadding","_computeGridLineItems","tl","borderOpts","axisWidth","axisHalfWidth","alignBorderValue","borderValue","alignedLineValue","tx1","ty1","tx2","ty2","x1","y1","x2","y2","limit","step","optsAtIndex","optsAtIndexBorder","lineColor","borderDash","dash","borderDashOffset","dashOffset","tickColor","tickBorderDash","tickBorderDashOffset","crossAlign","tickAndPadding","hTickAndPadding","textAlign","lineCount","textOffset","textBaseline","_getXAxisLabelAlignment","_getYAxisLabelAlignment","labelOffset","halfCount","strokeColor","textStrokeColor","strokeWidth","textStrokeWidth","tickTextAlign","showLabelBackdrop","backdrop","labelPadding","backdropPadding","backdropColor","translation","_computeLabelArea","drawBackground","save","fillRect","restore","findIndex","drawGrid","drawLine","p1","p2","setLineDash","lineDashOffset","beginPath","moveTo","lineTo","stroke","drawOnChartArea","drawBorder","lastLineWidth","drawLabels","clipArea","renderTextOptions","renderText","unclipArea","drawTitle","tz","gz","bz","axisID","_maxDigits","fontSize","TypedRegistry","scope","override","create","isForType","isPrototypeOf","register","proto","getPrototypeOf","parentScope","isIChartComponent","registerDefaults","overrides","unregister","itemDefaults","merge","defaultRoutes","routeDefaults","descriptors","describe","routes","property","propertyParts","split","sourceName","sourceScope","join","parts","targetName","targetScope","route","Registry","controllers","_typedRegistries","_each","addControllers","addPlugins","addScales","getController","_get","getPlugin","getScale","removeControllers","removeElements","removePlugins","removeScales","typedRegistry","arg","reg","_getRegistryForType","_exec","itemReg","component","camelMethod","_capitalize","PluginService","_init","notify","hook","_createDescriptors","_descriptors","descriptor","plugin","callCallback","cancelable","invalidate","_oldCache","_notifyStateChanges","allPlugins","createDescriptors","previousDescriptors","some","localIds","local","getOpts","pluginOpts","pluginScopeKeys","scriptable","indexable","allKeys","getIndexAxis","datasetDefaults","datasetOptions","getAxisFromDefaultScaleID","getDefaultScaleIDFromAxis","idMatchesAxis","axisFromPosition","determineAxis","scaleOptions","toLowerCase","getAxisFromDataset","retrieveAxisFromDatasets","boundDs","d","mergeScaleConfig","chartDefaults","configScales","chartIndexAxis","scaleConf","error","_proxy","defaultId","defaultScaleOptions","mergeIf","defaultID","initOptions","initData","initConfig","keyCache","keysCached","Set","cachedKeys","generate","addIfFound","Config","_config","_scopeCache","_resolverCache","platform","clearCache","clear","datasetType","additionalOptionScopes","_cachedScopes","mainScope","resetCache","keyLists","chartOptionScopes","getResolver","resolver","subPrefixes","needContext","isFunction","subResolver","_attachContext","descriptorDefaults","resolverCache","_createResolver","p","hasFunction","isScriptable","isIndexable","KNOWN_POSITIONS","positionIsHorizontal","compare2Level","l1","l2","onAnimationsComplete","onComplete","onAnimationProgress","onProgress","getCanvas","getElementById","instances","getChart","c","moveNumericKeys","intKey","determineLastEvent","lastEvent","inChartArea","isClick","getSizeForArea","field","getDatasetArea","Chart","userConfig","initialCanvas","existingChart","uid","_options","_aspectRatio","_metasets","_lastEvent","_listeners","_responsiveListeners","_sortedMetasets","_plugins","_hiddenIndices","attached","_doResize","debounce","resizeDelay","_initialize","maintainAspectRatio","responsive","retinaScale","bindEvents","clearCanvas","_resize","_resizeBeforeDraw","newSize","newRatio","onResize","render","ensureScalesHaveIDs","scalesOptions","axisOptions","buildOrUpdateScales","scaleOpts","updated","isRadial","dposition","dtype","scaleType","scaleClass","hasUpdated","_updateMetasets","_destroyDatasetMeta","slice","_removeUnreferencedMetasets","buildOrUpdateControllers","newControllers","order","visible","ControllerClass","_resetElements","animsDisabled","_updateScales","_checkEventBindings","_updateHiddenIndices","_minPadding","autoPadding","_updateLayout","_updateDatasets","_eventHandler","_updateHoverStyles","existingEvents","newEvents","events","setsEqual","unbindEvents","changes","_getUniformDataChanges","datasetCount","makeSet","changeSet","noArea","_idx","_updateDataset","layers","_drawDatasets","_drawDataset","useClip","getElementsAtEventForMode","Interaction","setDatasetVisibility","_updateVisibility","hide","show","_stop","destroy","toBase64Image","toDataURL","bindUserEvents","bindResponsiveEvents","_add","_remove","detached","updateHoverStyle","prefix","getActiveElements","setActiveElements","activeElements","lastActive","_elementsEqual","pluginId","replay","hoverOptions","hover","deactivated","activated","eventFilter","_handleEvent","_getActiveElements","_isClickEvent","onHover","invalidatePlugins","version","clipArc","pixelMargin","angleMargin","closePath","toRadiusCorners","_readValueToProps","parseBorderRadius","angleDelta","o","borderRadius","halfThickness","innerLimit","computeOuterLimit","outerArcLimit","outerStart","outerEnd","innerStart","innerEnd","rThetaToXY","theta","pathArc","innerR","spacingOffset","alpha","noSpacingInnerRadius","noSpacingOuterRadius","avNogSpacingRadius","adjustedAngle","beta","angleOffset","outerStartAdjustedRadius","outerEndAdjustedRadius","outerStartAdjustedAngle","outerEndAdjustedAngle","innerStartAdjustedRadius","innerEndAdjustedRadius","innerStartAdjustedAngle","innerEndAdjustedAngle","outerMidAdjustedAngle","pCenter","p4","innerMidAdjustedAngle","p8","outerStartX","outerStartY","outerEndX","outerEndY","drawArc","fullCircles","borderJoinStyle","inner","lineJoin","ArcElement","chartX","chartY","rAdjust","nonZeroBetween","betweenAngles","withinRadius","_isBetween","halfAngle","halfRadius","translate","fix","radiusOffset","setStyle","lineCap","borderCapStyle","previous","getLineMethod","stepped","_steppedLineTo","tension","cubicInterpolationMode","_bezierCurveTo","pathVars","paramsStart","paramsEnd","segmentStart","segmentEnd","outside","pathSegment","lineMethod","fastPathSegment","avgX","countX","prevX","lastY","pointIndex","drawX","truncX","_getSegmentMethod","useFastPath","_getInterpolationMethod","_steppedInterpolation","_bezierInterpolation","_pointInLine","strokePathWithCache","path","_path","Path2D","strokePathDirect","segments","segmentMethod","usePath2D","LineElement","_points","_segments","_pointsUpdated","_updateBezierControlPoints","_computeSegments","interpolate","_boundSegments","_interpolate","interpolated","capBezierPoints","hitRadius","PointElement","mouseX","mouseY","inXRange","inYRange","hoverRadius","drawPoint","getBarBounds","bar","half","skipOrLimit","parseBorderWidth","maxW","maxH","toTRBL","toTRBLCorners","maxR","enableBorder","topLeft","topRight","bottomLeft","bottomRight","boundingRects","bounds","outer","skipX","skipY","skipBoth","hasRadius","addNormalRectPath","rect","inflateRect","amount","refRect","BarElement","addRectPath","addRoundedRectPath","BORDER_COLORS","BACKGROUND_COLORS","replace","getBorderColor","getBackgroundColor","colorizeDefaultDataset","colorizeDoughnutDataset","colorizePolarAreaDataset","getColorizer","containsColorsDefinitions","k","containsColorsDefinition","forceOverride","_args","chartOptions","colorizer","lttbDecimation","samples","decimated","bucketWidth","sampledIndex","endIndex","maxAreaPoint","maxArea","nextA","avgY","avgRangeStart","avgRangeEnd","avgRangeLength","rangeOffs","rangeTo","pointAx","pointAy","minMaxDecimation","minIndex","maxIndex","startIndex","xMin","xMax","dx","lastIndex","intermediateIndex1","intermediateIndex2","cleanDecimatedDataset","defineProperty","configurable","enumerable","writable","cleanDecimatedData","getStartAndCountOfVisiblePointsSimplified","pointCount","algorithm","beforeElementsUpdate","xAxis","threshold","tpoints","_findSegmentEnd","_getBounds","targetSegments","tgt","subBounds","fillSources","_boundSegment","fillSource","_getEdge","_normalizeAngle","_pointsFromSegments","boundary","linePoints","_createBoundaryLine","_shouldApplyFill","_resolveTarget","sources","propagate","visited","_decodeFill","parseFillOption","parseFloat","decodeTargetIndex","firstCh","_getTargetPixel","_getTargetValue","fillOption","_buildStackLine","sourcePoints","linesBelow","getLinesBelow","addPointsBelow","below","unshift","sourcePoint","postponed","findPoint","pointValue","firstValue","lastValue","simpleArc","_getTarget","getLineByIndex","computeBoundary","computeCircularBoundary","computeLinearBoundary","_drawfill","lineOpts","above","doFill","clipVertical","clipY","lineLoop","src","notShape","clipBounds","interpolatedLineTo","targetLoop","interpolatedPoint","afterDatasetsUpdate","$filler","beforeDraw","drawTime","beforeDatasetsDraw","beforeDatasetDraw","getBoxSize","labelOpts","boxHeight","boxWidth","usePointStyle","pointStyleWidth","itemHeight","itemsEqual","Legend","_added","legendHitBoxes","_hoveredItem","doughnutMode","legendItems","columnSizes","lineWidths","buildLabels","labelFont","_computeTitleHeight","_fitRows","_fitCols","hitboxes","totalHeight","row","itemWidth","measureText","_itemHeight","heightLimit","totalWidth","currentColWidth","currentColHeight","col","calculateItemSize","adjustHitBoxes","rtl","rtlHelper","getRtlAdapter","hitbox","leftForLtr","_draw","defaultColor","halfFontSize","cursor","drawLegendBox","lineDash","drawOptions","SQRT2","xPlus","drawPointLegend","yBoxTop","xBoxLeft","fillText","strikethrough","overrideTextDirection","textDirection","textWidth","setWidth","realX","_textX","fontLineHeight","calculateLegendItemHeight","restoreTextDirection","titleFont","titlePadding","topPaddingPlusHalfFontSize","_getLegendItemAt","hitBox","lh","handleEvent","isListened","hoveredItem","sameItem","onLeave","calculateItemWidth","calculateItemHeight","legendItemText","_element","afterEvent","ci","useBorderRadius","Title","_padding","textSize","_drawArgs","fontOpts","createTitle","titleBlock","WeakMap","positioners","average","xSet","xAverage","eventPosition","nearestElement","distanceBetweenPoints","tp","pushOrConcat","toPush","apply","splitNewlines","str","String","createTooltipItem","formattedValue","getTooltipSize","tooltip","body","footer","bodyFont","footerFont","titleLineCount","footerLineCount","bodyLineItemCount","combinedBodyLength","bodyItem","before","after","beforeBody","afterBody","titleSpacing","titleMarginBottom","bodyLineHeight","displayColors","bodySpacing","footerMarginTop","footerSpacing","widthPadding","maxLineWidth","determineYAlign","doesNotFitWithAlign","xAlign","caret","caretSize","caretPadding","determineXAlign","yAlign","chartWidth","determineAlignment","alignX","alignY","paddingAndSize","getBackgroundPoint","alignment","cornerRadius","getAlignedX","getBeforeAfterBodyLines","createTooltipContext","tooltipItems","overrideCallbacks","defaultCallbacks","beforeTitle","noop","labelCount","afterTitle","beforeLabel","tooltipItem","labelColor","labelTextColor","bodyColor","labelPointStyle","afterLabel","beforeFooter","afterFooter","invokeCallbackWithFallback","Tooltip","opacity","_eventPosition","_size","_cachedAnimations","_tooltipItems","dataPoints","caretX","caretY","labelColors","labelPointStyles","labelTextColors","getTitle","getBeforeBody","getBody","bodyItems","scoped","getAfterBody","getFooter","_createItems","itemSort","positionAndSize","backgroundPoint","external","drawCaret","tooltipPoint","caretPosition","getCaretPosition","x3","y3","ptX","ptY","pt","titleColor","_drawColorBox","colorX","rtlColorX","yOffSet","colorY","multiKeyBackground","outerX","innerX","strokeRect","drawBody","bodyAlign","xLinePadding","fillLineOfText","bodyAlignForCalculation","textColor","drawFooter","footerAlign","footerColor","tooltipSize","quadraticCurveTo","_updateAnimationTarget","animX","animY","_willRender","hasTooltipContent","globalAlpha","positionChanged","_positionChanged","_ignoreReplayEvents","afterInit","afterDraw","_fallback","addIfString","addedLabels","findOrAddLabel","lastIndexOf","_getLabelForValue","CategoryScale","_startValue","_valueRange","_addedLabels","added","generateTicks","generationOptions","dataRange","MIN_SPACING","precision","maxTicks","maxDigits","includeBounds","unit","maxSpaces","rmin","rmax","countDefined","minSpacing","niceNum","niceMin","niceMax","numSpaces","almostWhole","almostEquals","decimalPlaces","_decimalPlaces","relativeLabelSize","tickValue","rad","LinearScaleBase","_endValue","handleTickRangeOptions","setMin","setMax","minSign","maxSign","getTickLimit","stepSize","computeTickLimit","numericGeneratorOptions","_setMinAndMaxByKey","LinearScale","Ticks","formatters","numeric","log10Floor","log10","changeExponent","m","isMajor","tickVal","steps","rangeExp","rangeStep","startExp","minExp","exp","significand","lastTick","LogarithmicScale","_zero","logarithmic","getTickBackdropHeight","measureLabelSize","_longestText","determineLimits","fitWithPointLabels","limits","valueCount","_pointLabels","pointLabelOpts","additionalAngle","centerPointLabels","getPointLabelContext","getPointPosition","drawingArea","plFont","hLimits","vLimits","updateLimits","setCenterPoint","_pointLabelItems","buildPointLabelItems","createPointLabelItem","itemOpts","outerDistance","extra","pointLabelPosition","yForAngle","getTextAlignForAngle","leftForTextAlign","isNotOverlapped","apexesInArea","drawPointLabelBox","backdropLeft","backdropTop","backdropWidth","backdropHeight","drawPointLabels","pathRadiusLine","drawRadiusLine","gridLineOpts","createPointLabelContext","RadialLinearScale","leftMovement","rightMovement","topMovement","bottomMovement","angleMultiplier","scalingFactor","getValueForDistanceFromCenter","scaledDistance","pointLabel","distanceFromCenter","getBasePosition","getPointLabelPosition","rotate","animate","INTERVALS","millisecond","common","second","minute","hour","day","week","month","quarter","year","UNITS","sorter","input","adapter","_adapter","_parseOpts","parser","isoWeekday","determineUnitForAutoTicks","minUnit","capacity","interval","MAX_SAFE_INTEGER","determineUnitForFormatting","determineMajorUnit","addTick","time","timestamps","_lookup","timestamp","setMajorTicks","majorUnit","ticksFromTimestamps","TimeScale","_unit","_majorUnit","_offsets","_normalized","adapters","displayFormats","normalized","_applyBounds","_getLabelBounds","getLabelTimestamps","timeOpts","_generate","_filterBetween","_getLabelCapacity","initOffsets","offsetAfterAutoskip","getDecimalForValue","minor","weekday","hasWeekday","getDataTimestamps","tooltipFormat","datetime","fmt","_tickFormatFunction","formatter","minorFormat","majorFormat","offsets","_getLabelSize","ticksOpts","tickLabelWidth","cosRotation","sinRotation","tickFontSize","exampleTime","exampleLabel","normalize","table","prevSource","nextSource","prevTarget","nextTarget","span","TimeSeriesScale","_table","_minPos","_tableRange","_getTimestampsForTable","buildLookupTable","registerables"],"sources":["C:\\Users\\ebelfars\\PycharmProjects\\react-portfolio\\node_modules\\chart.js\\src\\core\\core.animator.js","C:\\Users\\ebelfars\\PycharmProjects\\react-portfolio\\node_modules\\chart.js\\src\\core\\core.animation.js","C:\\Users\\ebelfars\\PycharmProjects\\react-portfolio\\node_modules\\chart.js\\src\\core\\core.animations.js","C:\\Users\\ebelfars\\PycharmProjects\\react-portfolio\\node_modules\\chart.js\\src\\core\\core.datasetController.js","C:\\Users\\ebelfars\\PycharmProjects\\react-portfolio\\node_modules\\chart.js\\src\\controllers\\controller.bar.js","C:\\Users\\ebelfars\\PycharmProjects\\react-portfolio\\node_modules\\chart.js\\src\\controllers\\controller.bubble.js","C:\\Users\\ebelfars\\PycharmProjects\\react-portfolio\\node_modules\\chart.js\\src\\controllers\\controller.doughnut.js","C:\\Users\\ebelfars\\PycharmProjects\\react-portfolio\\node_modules\\chart.js\\src\\controllers\\controller.line.js","C:\\Users\\ebelfars\\PycharmProjects\\react-portfolio\\node_modules\\chart.js\\src\\controllers\\controller.polarArea.js","C:\\Users\\ebelfars\\PycharmProjects\\react-portfolio\\node_modules\\chart.js\\src\\controllers\\controller.pie.js","C:\\Users\\ebelfars\\PycharmProjects\\react-portfolio\\node_modules\\chart.js\\src\\controllers\\controller.radar.js","C:\\Users\\ebelfars\\PycharmProjects\\react-portfolio\\node_modules\\chart.js\\src\\controllers\\controller.scatter.js","C:\\Users\\ebelfars\\PycharmProjects\\react-portfolio\\node_modules\\chart.js\\src\\core\\core.adapters.ts","C:\\Users\\ebelfars\\PycharmProjects\\react-portfolio\\node_modules\\chart.js\\src\\core\\core.interaction.js","C:\\Users\\ebelfars\\PycharmProjects\\react-portfolio\\node_modules\\chart.js\\src\\core\\core.layouts.js","C:\\Users\\ebelfars\\PycharmProjects\\react-portfolio\\node_modules\\chart.js\\src\\platform\\platform.base.js","C:\\Users\\ebelfars\\PycharmProjects\\react-portfolio\\node_modules\\chart.js\\src\\platform\\platform.basic.js","C:\\Users\\ebelfars\\PycharmProjects\\react-portfolio\\node_modules\\chart.js\\src\\platform\\platform.dom.js","C:\\Users\\ebelfars\\PycharmProjects\\react-portfolio\\node_modules\\chart.js\\src\\platform\\index.js","C:\\Users\\ebelfars\\PycharmProjects\\react-portfolio\\node_modules\\chart.js\\src\\core\\core.element.ts","C:\\Users\\ebelfars\\PycharmProjects\\react-portfolio\\node_modules\\chart.js\\src\\core\\core.scale.autoskip.js","C:\\Users\\ebelfars\\PycharmProjects\\react-portfolio\\node_modules\\chart.js\\src\\core\\core.scale.js","C:\\Users\\ebelfars\\PycharmProjects\\react-portfolio\\node_modules\\chart.js\\src\\core\\core.typedRegistry.js","C:\\Users\\ebelfars\\PycharmProjects\\react-portfolio\\node_modules\\chart.js\\src\\core\\core.registry.js","C:\\Users\\ebelfars\\PycharmProjects\\react-portfolio\\node_modules\\chart.js\\src\\core\\core.plugins.js","C:\\Users\\ebelfars\\PycharmProjects\\react-portfolio\\node_modules\\chart.js\\src\\core\\core.config.js","C:\\Users\\ebelfars\\PycharmProjects\\react-portfolio\\node_modules\\chart.js\\src\\core\\core.controller.js","C:\\Users\\ebelfars\\PycharmProjects\\react-portfolio\\node_modules\\chart.js\\src\\elements\\element.arc.ts","C:\\Users\\ebelfars\\PycharmProjects\\react-portfolio\\node_modules\\chart.js\\src\\elements\\element.line.js","C:\\Users\\ebelfars\\PycharmProjects\\react-portfolio\\node_modules\\chart.js\\src\\elements\\element.point.ts","C:\\Users\\ebelfars\\PycharmProjects\\react-portfolio\\node_modules\\chart.js\\src\\elements\\element.bar.js","C:\\Users\\ebelfars\\PycharmProjects\\react-portfolio\\node_modules\\chart.js\\src\\plugins\\plugin.colors.ts","C:\\Users\\ebelfars\\PycharmProjects\\react-portfolio\\node_modules\\chart.js\\src\\plugins\\plugin.decimation.js","C:\\Users\\ebelfars\\PycharmProjects\\react-portfolio\\node_modules\\chart.js\\src\\plugins\\plugin.filler\\filler.segment.js","C:\\Users\\ebelfars\\PycharmProjects\\react-portfolio\\node_modules\\chart.js\\src\\plugins\\plugin.filler\\filler.helper.js","C:\\Users\\ebelfars\\PycharmProjects\\react-portfolio\\node_modules\\chart.js\\src\\plugins\\plugin.filler\\filler.options.js","C:\\Users\\ebelfars\\PycharmProjects\\react-portfolio\\node_modules\\chart.js\\src\\plugins\\plugin.filler\\filler.target.stack.js","C:\\Users\\ebelfars\\PycharmProjects\\react-portfolio\\node_modules\\chart.js\\src\\plugins\\plugin.filler\\simpleArc.js","C:\\Users\\ebelfars\\PycharmProjects\\react-portfolio\\node_modules\\chart.js\\src\\plugins\\plugin.filler\\filler.target.js","C:\\Users\\ebelfars\\PycharmProjects\\react-portfolio\\node_modules\\chart.js\\src\\plugins\\plugin.filler\\filler.drawing.js","C:\\Users\\ebelfars\\PycharmProjects\\react-portfolio\\node_modules\\chart.js\\src\\plugins\\plugin.filler\\index.js","C:\\Users\\ebelfars\\PycharmProjects\\react-portfolio\\node_modules\\chart.js\\src\\plugins\\plugin.legend.js","C:\\Users\\ebelfars\\PycharmProjects\\react-portfolio\\node_modules\\chart.js\\src\\plugins\\plugin.title.js","C:\\Users\\ebelfars\\PycharmProjects\\react-portfolio\\node_modules\\chart.js\\src\\plugins\\plugin.subtitle.js","C:\\Users\\ebelfars\\PycharmProjects\\react-portfolio\\node_modules\\chart.js\\src\\plugins\\plugin.tooltip.js","C:\\Users\\ebelfars\\PycharmProjects\\react-portfolio\\node_modules\\chart.js\\src\\scales\\scale.category.js","C:\\Users\\ebelfars\\PycharmProjects\\react-portfolio\\node_modules\\chart.js\\src\\scales\\scale.linearbase.js","C:\\Users\\ebelfars\\PycharmProjects\\react-portfolio\\node_modules\\chart.js\\src\\scales\\scale.linear.js","C:\\Users\\ebelfars\\PycharmProjects\\react-portfolio\\node_modules\\chart.js\\src\\scales\\scale.logarithmic.js","C:\\Users\\ebelfars\\PycharmProjects\\react-portfolio\\node_modules\\chart.js\\src\\scales\\scale.radialLinear.js","C:\\Users\\ebelfars\\PycharmProjects\\react-portfolio\\node_modules\\chart.js\\src\\scales\\scale.time.js","C:\\Users\\ebelfars\\PycharmProjects\\react-portfolio\\node_modules\\chart.js\\src\\scales\\scale.timeseries.js","C:\\Users\\ebelfars\\PycharmProjects\\react-portfolio\\node_modules\\chart.js\\src\\index.ts"],"sourcesContent":["import {requestAnimFrame} from '../helpers/helpers.extras.js';\n\n/**\n * @typedef { import('./core.animation.js').default } Animation\n * @typedef { import('./core.controller.js').default } Chart\n */\n\n/**\n * Please use the module's default export which provides a singleton instance\n * Note: class is export for typedoc\n */\nexport class Animator {\n  constructor() {\n    this._request = null;\n    this._charts = new Map();\n    this._running = false;\n    this._lastDate = undefined;\n  }\n\n  /**\n\t * @private\n\t */\n  _notify(chart, anims, date, type) {\n    const callbacks = anims.listeners[type];\n    const numSteps = anims.duration;\n\n    callbacks.forEach(fn => fn({\n      chart,\n      initial: anims.initial,\n      numSteps,\n      currentStep: Math.min(date - anims.start, numSteps)\n    }));\n  }\n\n  /**\n\t * @private\n\t */\n  _refresh() {\n    if (this._request) {\n      return;\n    }\n    this._running = true;\n\n    this._request = requestAnimFrame.call(window, () => {\n      this._update();\n      this._request = null;\n\n      if (this._running) {\n        this._refresh();\n      }\n    });\n  }\n\n  /**\n\t * @private\n\t */\n  _update(date = Date.now()) {\n    let remaining = 0;\n\n    this._charts.forEach((anims, chart) => {\n      if (!anims.running || !anims.items.length) {\n        return;\n      }\n      const items = anims.items;\n      let i = items.length - 1;\n      let draw = false;\n      let item;\n\n      for (; i >= 0; --i) {\n        item = items[i];\n\n        if (item._active) {\n          if (item._total > anims.duration) {\n            // if the animation has been updated and its duration prolonged,\n            // update to total duration of current animations run (for progress event)\n            anims.duration = item._total;\n          }\n          item.tick(date);\n          draw = true;\n        } else {\n          // Remove the item by replacing it with last item and removing the last\n          // A lot faster than splice.\n          items[i] = items[items.length - 1];\n          items.pop();\n        }\n      }\n\n      if (draw) {\n        chart.draw();\n        this._notify(chart, anims, date, 'progress');\n      }\n\n      if (!items.length) {\n        anims.running = false;\n        this._notify(chart, anims, date, 'complete');\n        anims.initial = false;\n      }\n\n      remaining += items.length;\n    });\n\n    this._lastDate = date;\n\n    if (remaining === 0) {\n      this._running = false;\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _getAnims(chart) {\n    const charts = this._charts;\n    let anims = charts.get(chart);\n    if (!anims) {\n      anims = {\n        running: false,\n        initial: true,\n        items: [],\n        listeners: {\n          complete: [],\n          progress: []\n        }\n      };\n      charts.set(chart, anims);\n    }\n    return anims;\n  }\n\n  /**\n\t * @param {Chart} chart\n\t * @param {string} event - event name\n\t * @param {Function} cb - callback\n\t */\n  listen(chart, event, cb) {\n    this._getAnims(chart).listeners[event].push(cb);\n  }\n\n  /**\n\t * Add animations\n\t * @param {Chart} chart\n\t * @param {Animation[]} items - animations\n\t */\n  add(chart, items) {\n    if (!items || !items.length) {\n      return;\n    }\n    this._getAnims(chart).items.push(...items);\n  }\n\n  /**\n\t * Counts number of active animations for the chart\n\t * @param {Chart} chart\n\t */\n  has(chart) {\n    return this._getAnims(chart).items.length > 0;\n  }\n\n  /**\n\t * Start animating (all charts)\n\t * @param {Chart} chart\n\t */\n  start(chart) {\n    const anims = this._charts.get(chart);\n    if (!anims) {\n      return;\n    }\n    anims.running = true;\n    anims.start = Date.now();\n    anims.duration = anims.items.reduce((acc, cur) => Math.max(acc, cur._duration), 0);\n    this._refresh();\n  }\n\n  running(chart) {\n    if (!this._running) {\n      return false;\n    }\n    const anims = this._charts.get(chart);\n    if (!anims || !anims.running || !anims.items.length) {\n      return false;\n    }\n    return true;\n  }\n\n  /**\n\t * Stop all animations for the chart\n\t * @param {Chart} chart\n\t */\n  stop(chart) {\n    const anims = this._charts.get(chart);\n    if (!anims || !anims.items.length) {\n      return;\n    }\n    const items = anims.items;\n    let i = items.length - 1;\n\n    for (; i >= 0; --i) {\n      items[i].cancel();\n    }\n    anims.items = [];\n    this._notify(chart, anims, Date.now(), 'complete');\n  }\n\n  /**\n\t * Remove chart from Animator\n\t * @param {Chart} chart\n\t */\n  remove(chart) {\n    return this._charts.delete(chart);\n  }\n}\n\n// singleton instance\nexport default /* #__PURE__ */ new Animator();\n","import effects from '../helpers/helpers.easing.js';\nimport {resolve} from '../helpers/helpers.options.js';\nimport {color as helpersColor} from '../helpers/helpers.color.js';\n\nconst transparent = 'transparent';\nconst interpolators = {\n  boolean(from, to, factor) {\n    return factor > 0.5 ? to : from;\n  },\n  /**\n   * @param {string} from\n   * @param {string} to\n   * @param {number} factor\n   */\n  color(from, to, factor) {\n    const c0 = helpersColor(from || transparent);\n    const c1 = c0.valid && helpersColor(to || transparent);\n    return c1 && c1.valid\n      ? c1.mix(c0, factor).hexString()\n      : to;\n  },\n  number(from, to, factor) {\n    return from + (to - from) * factor;\n  }\n};\n\nexport default class Animation {\n  constructor(cfg, target, prop, to) {\n    const currentValue = target[prop];\n\n    to = resolve([cfg.to, to, currentValue, cfg.from]);\n    const from = resolve([cfg.from, currentValue, to]);\n\n    this._active = true;\n    this._fn = cfg.fn || interpolators[cfg.type || typeof from];\n    this._easing = effects[cfg.easing] || effects.linear;\n    this._start = Math.floor(Date.now() + (cfg.delay || 0));\n    this._duration = this._total = Math.floor(cfg.duration);\n    this._loop = !!cfg.loop;\n    this._target = target;\n    this._prop = prop;\n    this._from = from;\n    this._to = to;\n    this._promises = undefined;\n  }\n\n  active() {\n    return this._active;\n  }\n\n  update(cfg, to, date) {\n    if (this._active) {\n      this._notify(false);\n\n      const currentValue = this._target[this._prop];\n      const elapsed = date - this._start;\n      const remain = this._duration - elapsed;\n      this._start = date;\n      this._duration = Math.floor(Math.max(remain, cfg.duration));\n      this._total += elapsed;\n      this._loop = !!cfg.loop;\n      this._to = resolve([cfg.to, to, currentValue, cfg.from]);\n      this._from = resolve([cfg.from, currentValue, to]);\n    }\n  }\n\n  cancel() {\n    if (this._active) {\n      // update current evaluated value, for smoother animations\n      this.tick(Date.now());\n      this._active = false;\n      this._notify(false);\n    }\n  }\n\n  tick(date) {\n    const elapsed = date - this._start;\n    const duration = this._duration;\n    const prop = this._prop;\n    const from = this._from;\n    const loop = this._loop;\n    const to = this._to;\n    let factor;\n\n    this._active = from !== to && (loop || (elapsed < duration));\n\n    if (!this._active) {\n      this._target[prop] = to;\n      this._notify(true);\n      return;\n    }\n\n    if (elapsed < 0) {\n      this._target[prop] = from;\n      return;\n    }\n\n    factor = (elapsed / duration) % 2;\n    factor = loop && factor > 1 ? 2 - factor : factor;\n    factor = this._easing(Math.min(1, Math.max(0, factor)));\n\n    this._target[prop] = this._fn(from, to, factor);\n  }\n\n  wait() {\n    const promises = this._promises || (this._promises = []);\n    return new Promise((res, rej) => {\n      promises.push({res, rej});\n    });\n  }\n\n  _notify(resolved) {\n    const method = resolved ? 'res' : 'rej';\n    const promises = this._promises || [];\n    for (let i = 0; i < promises.length; i++) {\n      promises[i][method]();\n    }\n  }\n}\n","import animator from './core.animator.js';\nimport Animation from './core.animation.js';\nimport defaults from './core.defaults.js';\nimport {isArray, isObject} from '../helpers/helpers.core.js';\n\nexport default class Animations {\n  constructor(chart, config) {\n    this._chart = chart;\n    this._properties = new Map();\n    this.configure(config);\n  }\n\n  configure(config) {\n    if (!isObject(config)) {\n      return;\n    }\n\n    const animationOptions = Object.keys(defaults.animation);\n    const animatedProps = this._properties;\n\n    Object.getOwnPropertyNames(config).forEach(key => {\n      const cfg = config[key];\n      if (!isObject(cfg)) {\n        return;\n      }\n      const resolved = {};\n      for (const option of animationOptions) {\n        resolved[option] = cfg[option];\n      }\n\n      (isArray(cfg.properties) && cfg.properties || [key]).forEach((prop) => {\n        if (prop === key || !animatedProps.has(prop)) {\n          animatedProps.set(prop, resolved);\n        }\n      });\n    });\n  }\n\n  /**\n\t * Utility to handle animation of `options`.\n\t * @private\n\t */\n  _animateOptions(target, values) {\n    const newOptions = values.options;\n    const options = resolveTargetOptions(target, newOptions);\n    if (!options) {\n      return [];\n    }\n\n    const animations = this._createAnimations(options, newOptions);\n    if (newOptions.$shared) {\n      // Going to shared options:\n      // After all animations are done, assign the shared options object to the element\n      // So any new updates to the shared options are observed\n      awaitAll(target.options.$animations, newOptions).then(() => {\n        target.options = newOptions;\n      }, () => {\n        // rejected, noop\n      });\n    }\n\n    return animations;\n  }\n\n  /**\n\t * @private\n\t */\n  _createAnimations(target, values) {\n    const animatedProps = this._properties;\n    const animations = [];\n    const running = target.$animations || (target.$animations = {});\n    const props = Object.keys(values);\n    const date = Date.now();\n    let i;\n\n    for (i = props.length - 1; i >= 0; --i) {\n      const prop = props[i];\n      if (prop.charAt(0) === '$') {\n        continue;\n      }\n\n      if (prop === 'options') {\n        animations.push(...this._animateOptions(target, values));\n        continue;\n      }\n      const value = values[prop];\n      let animation = running[prop];\n      const cfg = animatedProps.get(prop);\n\n      if (animation) {\n        if (cfg && animation.active()) {\n          // There is an existing active animation, let's update that\n          animation.update(cfg, value, date);\n          continue;\n        } else {\n          animation.cancel();\n        }\n      }\n      if (!cfg || !cfg.duration) {\n        // not animated, set directly to new value\n        target[prop] = value;\n        continue;\n      }\n\n      running[prop] = animation = new Animation(cfg, target, prop, value);\n      animations.push(animation);\n    }\n    return animations;\n  }\n\n\n  /**\n\t * Update `target` properties to new values, using configured animations\n\t * @param {object} target - object to update\n\t * @param {object} values - new target properties\n\t * @returns {boolean|undefined} - `true` if animations were started\n\t **/\n  update(target, values) {\n    if (this._properties.size === 0) {\n      // Nothing is animated, just apply the new values.\n      Object.assign(target, values);\n      return;\n    }\n\n    const animations = this._createAnimations(target, values);\n\n    if (animations.length) {\n      animator.add(this._chart, animations);\n      return true;\n    }\n  }\n}\n\nfunction awaitAll(animations, properties) {\n  const running = [];\n  const keys = Object.keys(properties);\n  for (let i = 0; i < keys.length; i++) {\n    const anim = animations[keys[i]];\n    if (anim && anim.active()) {\n      running.push(anim.wait());\n    }\n  }\n  // @ts-ignore\n  return Promise.all(running);\n}\n\nfunction resolveTargetOptions(target, newOptions) {\n  if (!newOptions) {\n    return;\n  }\n  let options = target.options;\n  if (!options) {\n    target.options = newOptions;\n    return;\n  }\n  if (options.$shared) {\n    // Going from shared options to distinct one:\n    // Create new options object containing the old shared values and start updating that.\n    target.options = options = Object.assign({}, options, {$shared: false, $animations: {}});\n  }\n  return options;\n}\n","import Animations from './core.animations.js';\nimport defaults from './core.defaults.js';\nimport {isArray, isFinite, isObject, valueOrDefault, resolveObjectKey, defined} from '../helpers/helpers.core.js';\nimport {listenArrayEvents, unlistenArrayEvents} from '../helpers/helpers.collection.js';\nimport {createContext, sign} from '../helpers/index.js';\n\n/**\n * @typedef { import('./core.controller.js').default } Chart\n * @typedef { import('./core.scale.js').default } Scale\n */\n\nfunction scaleClip(scale, allowedOverflow) {\n  const opts = scale && scale.options || {};\n  const reverse = opts.reverse;\n  const min = opts.min === undefined ? allowedOverflow : 0;\n  const max = opts.max === undefined ? allowedOverflow : 0;\n  return {\n    start: reverse ? max : min,\n    end: reverse ? min : max\n  };\n}\n\nfunction defaultClip(xScale, yScale, allowedOverflow) {\n  if (allowedOverflow === false) {\n    return false;\n  }\n  const x = scaleClip(xScale, allowedOverflow);\n  const y = scaleClip(yScale, allowedOverflow);\n\n  return {\n    top: y.end,\n    right: x.end,\n    bottom: y.start,\n    left: x.start\n  };\n}\n\nfunction toClip(value) {\n  let t, r, b, l;\n\n  if (isObject(value)) {\n    t = value.top;\n    r = value.right;\n    b = value.bottom;\n    l = value.left;\n  } else {\n    t = r = b = l = value;\n  }\n\n  return {\n    top: t,\n    right: r,\n    bottom: b,\n    left: l,\n    disabled: value === false\n  };\n}\n\nfunction getSortedDatasetIndices(chart, filterVisible) {\n  const keys = [];\n  const metasets = chart._getSortedDatasetMetas(filterVisible);\n  let i, ilen;\n\n  for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n    keys.push(metasets[i].index);\n  }\n  return keys;\n}\n\nfunction applyStack(stack, value, dsIndex, options = {}) {\n  const keys = stack.keys;\n  const singleMode = options.mode === 'single';\n  let i, ilen, datasetIndex, otherValue;\n\n  if (value === null) {\n    return;\n  }\n\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    datasetIndex = +keys[i];\n    if (datasetIndex === dsIndex) {\n      if (options.all) {\n        continue;\n      }\n      break;\n    }\n    otherValue = stack.values[datasetIndex];\n    if (isFinite(otherValue) && (singleMode || (value === 0 || sign(value) === sign(otherValue)))) {\n      value += otherValue;\n    }\n  }\n  return value;\n}\n\nfunction convertObjectDataToArray(data, meta) {\n  const {iScale, vScale} = meta;\n  const iAxisKey = iScale.axis === 'x' ? 'x' : 'y';\n  const vAxisKey = vScale.axis === 'x' ? 'x' : 'y';\n  const keys = Object.keys(data);\n  const adata = new Array(keys.length);\n  let i, ilen, key;\n  for (i = 0, ilen = keys.length; i < ilen; ++i) {\n    key = keys[i];\n    adata[i] = {\n      [iAxisKey]: key,\n      [vAxisKey]: data[key]\n    };\n  }\n  return adata;\n}\n\nfunction isStacked(scale, meta) {\n  const stacked = scale && scale.options.stacked;\n  return stacked || (stacked === undefined && meta.stack !== undefined);\n}\n\nfunction getStackKey(indexScale, valueScale, meta) {\n  return `${indexScale.id}.${valueScale.id}.${meta.stack || meta.type}`;\n}\n\nfunction getUserBounds(scale) {\n  const {min, max, minDefined, maxDefined} = scale.getUserBounds();\n  return {\n    min: minDefined ? min : Number.NEGATIVE_INFINITY,\n    max: maxDefined ? max : Number.POSITIVE_INFINITY\n  };\n}\n\nfunction getOrCreateStack(stacks, stackKey, indexValue) {\n  const subStack = stacks[stackKey] || (stacks[stackKey] = {});\n  return subStack[indexValue] || (subStack[indexValue] = {});\n}\n\nfunction getLastIndexInStack(stack, vScale, positive, type) {\n  for (const meta of vScale.getMatchingVisibleMetas(type).reverse()) {\n    const value = stack[meta.index];\n    if ((positive && value > 0) || (!positive && value < 0)) {\n      return meta.index;\n    }\n  }\n\n  return null;\n}\n\nfunction updateStacks(controller, parsed) {\n  const {chart, _cachedMeta: meta} = controller;\n  const stacks = chart._stacks || (chart._stacks = {}); // map structure is {stackKey: {datasetIndex: value}}\n  const {iScale, vScale, index: datasetIndex} = meta;\n  const iAxis = iScale.axis;\n  const vAxis = vScale.axis;\n  const key = getStackKey(iScale, vScale, meta);\n  const ilen = parsed.length;\n  let stack;\n\n  for (let i = 0; i < ilen; ++i) {\n    const item = parsed[i];\n    const {[iAxis]: index, [vAxis]: value} = item;\n    const itemStacks = item._stacks || (item._stacks = {});\n    stack = itemStacks[vAxis] = getOrCreateStack(stacks, key, index);\n    stack[datasetIndex] = value;\n\n    stack._top = getLastIndexInStack(stack, vScale, true, meta.type);\n    stack._bottom = getLastIndexInStack(stack, vScale, false, meta.type);\n\n    const visualValues = stack._visualValues || (stack._visualValues = {});\n    visualValues[datasetIndex] = value;\n  }\n}\n\nfunction getFirstScaleId(chart, axis) {\n  const scales = chart.scales;\n  return Object.keys(scales).filter(key => scales[key].axis === axis).shift();\n}\n\nfunction createDatasetContext(parent, index) {\n  return createContext(parent,\n    {\n      active: false,\n      dataset: undefined,\n      datasetIndex: index,\n      index,\n      mode: 'default',\n      type: 'dataset'\n    }\n  );\n}\n\nfunction createDataContext(parent, index, element) {\n  return createContext(parent, {\n    active: false,\n    dataIndex: index,\n    parsed: undefined,\n    raw: undefined,\n    element,\n    index,\n    mode: 'default',\n    type: 'data'\n  });\n}\n\nfunction clearStacks(meta, items) {\n  // Not using meta.index here, because it might be already updated if the dataset changed location\n  const datasetIndex = meta.controller.index;\n  const axis = meta.vScale && meta.vScale.axis;\n  if (!axis) {\n    return;\n  }\n\n  items = items || meta._parsed;\n  for (const parsed of items) {\n    const stacks = parsed._stacks;\n    if (!stacks || stacks[axis] === undefined || stacks[axis][datasetIndex] === undefined) {\n      return;\n    }\n    delete stacks[axis][datasetIndex];\n    if (stacks[axis]._visualValues !== undefined && stacks[axis]._visualValues[datasetIndex] !== undefined) {\n      delete stacks[axis]._visualValues[datasetIndex];\n    }\n  }\n}\n\nconst isDirectUpdateMode = (mode) => mode === 'reset' || mode === 'none';\nconst cloneIfNotShared = (cached, shared) => shared ? cached : Object.assign({}, cached);\nconst createStack = (canStack, meta, chart) => canStack && !meta.hidden && meta._stacked\n  && {keys: getSortedDatasetIndices(chart, true), values: null};\n\nexport default class DatasetController {\n\n  /**\n   * @type {any}\n   */\n  static defaults = {};\n\n  /**\n   * Element type used to generate a meta dataset (e.g. Chart.element.LineElement).\n   */\n  static datasetElementType = null;\n\n  /**\n   * Element type used to generate a meta data (e.g. Chart.element.PointElement).\n   */\n  static dataElementType = null;\n\n  /**\n\t * @param {Chart} chart\n\t * @param {number} datasetIndex\n\t */\n  constructor(chart, datasetIndex) {\n    this.chart = chart;\n    this._ctx = chart.ctx;\n    this.index = datasetIndex;\n    this._cachedDataOpts = {};\n    this._cachedMeta = this.getMeta();\n    this._type = this._cachedMeta.type;\n    this.options = undefined;\n    /** @type {boolean | object} */\n    this._parsing = false;\n    this._data = undefined;\n    this._objectData = undefined;\n    this._sharedOptions = undefined;\n    this._drawStart = undefined;\n    this._drawCount = undefined;\n    this.enableOptionSharing = false;\n    this.supportsDecimation = false;\n    this.$context = undefined;\n    this._syncList = [];\n    this.datasetElementType = new.target.datasetElementType;\n    this.dataElementType = new.target.dataElementType;\n\n    this.initialize();\n  }\n\n  initialize() {\n    const meta = this._cachedMeta;\n    this.configure();\n    this.linkScales();\n    meta._stacked = isStacked(meta.vScale, meta);\n    this.addElements();\n\n    if (this.options.fill && !this.chart.isPluginEnabled('filler')) {\n      console.warn(\"Tried to use the 'fill' option without the 'Filler' plugin enabled. Please import and register the 'Filler' plugin and make sure it is not disabled in the options\");\n    }\n  }\n\n  updateIndex(datasetIndex) {\n    if (this.index !== datasetIndex) {\n      clearStacks(this._cachedMeta);\n    }\n    this.index = datasetIndex;\n  }\n\n  linkScales() {\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const dataset = this.getDataset();\n\n    const chooseId = (axis, x, y, r) => axis === 'x' ? x : axis === 'r' ? r : y;\n\n    const xid = meta.xAxisID = valueOrDefault(dataset.xAxisID, getFirstScaleId(chart, 'x'));\n    const yid = meta.yAxisID = valueOrDefault(dataset.yAxisID, getFirstScaleId(chart, 'y'));\n    const rid = meta.rAxisID = valueOrDefault(dataset.rAxisID, getFirstScaleId(chart, 'r'));\n    const indexAxis = meta.indexAxis;\n    const iid = meta.iAxisID = chooseId(indexAxis, xid, yid, rid);\n    const vid = meta.vAxisID = chooseId(indexAxis, yid, xid, rid);\n    meta.xScale = this.getScaleForId(xid);\n    meta.yScale = this.getScaleForId(yid);\n    meta.rScale = this.getScaleForId(rid);\n    meta.iScale = this.getScaleForId(iid);\n    meta.vScale = this.getScaleForId(vid);\n  }\n\n  getDataset() {\n    return this.chart.data.datasets[this.index];\n  }\n\n  getMeta() {\n    return this.chart.getDatasetMeta(this.index);\n  }\n\n  /**\n\t * @param {string} scaleID\n\t * @return {Scale}\n\t */\n  getScaleForId(scaleID) {\n    return this.chart.scales[scaleID];\n  }\n\n  /**\n\t * @private\n\t */\n  _getOtherScale(scale) {\n    const meta = this._cachedMeta;\n    return scale === meta.iScale\n      ? meta.vScale\n      : meta.iScale;\n  }\n\n  reset() {\n    this._update('reset');\n  }\n\n  /**\n\t * @private\n\t */\n  _destroy() {\n    const meta = this._cachedMeta;\n    if (this._data) {\n      unlistenArrayEvents(this._data, this);\n    }\n    if (meta._stacked) {\n      clearStacks(meta);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _dataCheck() {\n    const dataset = this.getDataset();\n    const data = dataset.data || (dataset.data = []);\n    const _data = this._data;\n\n    // In order to correctly handle data addition/deletion animation (and thus simulate\n    // real-time charts), we need to monitor these data modifications and synchronize\n    // the internal metadata accordingly.\n\n    if (isObject(data)) {\n      const meta = this._cachedMeta;\n      this._data = convertObjectDataToArray(data, meta);\n    } else if (_data !== data) {\n      if (_data) {\n        // This case happens when the user replaced the data array instance.\n        unlistenArrayEvents(_data, this);\n        // Discard old parsed data and stacks\n        const meta = this._cachedMeta;\n        clearStacks(meta);\n        meta._parsed = [];\n      }\n      if (data && Object.isExtensible(data)) {\n        listenArrayEvents(data, this);\n      }\n      this._syncList = [];\n      this._data = data;\n    }\n  }\n\n  addElements() {\n    const meta = this._cachedMeta;\n\n    this._dataCheck();\n\n    if (this.datasetElementType) {\n      meta.dataset = new this.datasetElementType();\n    }\n  }\n\n  buildOrUpdateElements(resetNewElements) {\n    const meta = this._cachedMeta;\n    const dataset = this.getDataset();\n    let stackChanged = false;\n\n    this._dataCheck();\n\n    // make sure cached _stacked status is current\n    const oldStacked = meta._stacked;\n    meta._stacked = isStacked(meta.vScale, meta);\n\n    // detect change in stack option\n    if (meta.stack !== dataset.stack) {\n      stackChanged = true;\n      // remove values from old stack\n      clearStacks(meta);\n      meta.stack = dataset.stack;\n    }\n\n    // Re-sync meta data in case the user replaced the data array or if we missed\n    // any updates and so make sure that we handle number of datapoints changing.\n    this._resyncElements(resetNewElements);\n\n    // if stack changed, update stack values for the whole dataset\n    if (stackChanged || oldStacked !== meta._stacked) {\n      updateStacks(this, meta._parsed);\n    }\n  }\n\n  /**\n\t * Merges user-supplied and default dataset-level options\n\t * @private\n\t */\n  configure() {\n    const config = this.chart.config;\n    const scopeKeys = config.datasetScopeKeys(this._type);\n    const scopes = config.getOptionScopes(this.getDataset(), scopeKeys, true);\n    this.options = config.createResolver(scopes, this.getContext());\n    this._parsing = this.options.parsing;\n    this._cachedDataOpts = {};\n  }\n\n  /**\n\t * @param {number} start\n\t * @param {number} count\n\t */\n  parse(start, count) {\n    const {_cachedMeta: meta, _data: data} = this;\n    const {iScale, _stacked} = meta;\n    const iAxis = iScale.axis;\n\n    let sorted = start === 0 && count === data.length ? true : meta._sorted;\n    let prev = start > 0 && meta._parsed[start - 1];\n    let i, cur, parsed;\n\n    if (this._parsing === false) {\n      meta._parsed = data;\n      meta._sorted = true;\n      parsed = data;\n    } else {\n      if (isArray(data[start])) {\n        parsed = this.parseArrayData(meta, data, start, count);\n      } else if (isObject(data[start])) {\n        parsed = this.parseObjectData(meta, data, start, count);\n      } else {\n        parsed = this.parsePrimitiveData(meta, data, start, count);\n      }\n\n      const isNotInOrderComparedToPrev = () => cur[iAxis] === null || (prev && cur[iAxis] < prev[iAxis]);\n      for (i = 0; i < count; ++i) {\n        meta._parsed[i + start] = cur = parsed[i];\n        if (sorted) {\n          if (isNotInOrderComparedToPrev()) {\n            sorted = false;\n          }\n          prev = cur;\n        }\n      }\n      meta._sorted = sorted;\n    }\n\n    if (_stacked) {\n      updateStacks(this, parsed);\n    }\n  }\n\n  /**\n\t * Parse array of primitive values\n\t * @param {object} meta - dataset meta\n\t * @param {array} data - data array. Example [1,3,4]\n\t * @param {number} start - start index\n\t * @param {number} count - number of items to parse\n\t * @returns {object} parsed item - item containing index and a parsed value\n\t * for each scale id.\n\t * Example: {xScale0: 0, yScale0: 1}\n\t * @protected\n\t */\n  parsePrimitiveData(meta, data, start, count) {\n    const {iScale, vScale} = meta;\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const labels = iScale.getLabels();\n    const singleScale = iScale === vScale;\n    const parsed = new Array(count);\n    let i, ilen, index;\n\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      parsed[i] = {\n        [iAxis]: singleScale || iScale.parse(labels[index], index),\n        [vAxis]: vScale.parse(data[index], index)\n      };\n    }\n    return parsed;\n  }\n\n  /**\n\t * Parse array of arrays\n\t * @param {object} meta - dataset meta\n\t * @param {array} data - data array. Example [[1,2],[3,4]]\n\t * @param {number} start - start index\n\t * @param {number} count - number of items to parse\n\t * @returns {object} parsed item - item containing index and a parsed value\n\t * for each scale id.\n\t * Example: {x: 0, y: 1}\n\t * @protected\n\t */\n  parseArrayData(meta, data, start, count) {\n    const {xScale, yScale} = meta;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      item = data[index];\n      parsed[i] = {\n        x: xScale.parse(item[0], index),\n        y: yScale.parse(item[1], index)\n      };\n    }\n    return parsed;\n  }\n\n  /**\n\t * Parse array of objects\n\t * @param {object} meta - dataset meta\n\t * @param {array} data - data array. Example [{x:1, y:5}, {x:2, y:10}]\n\t * @param {number} start - start index\n\t * @param {number} count - number of items to parse\n\t * @returns {object} parsed item - item containing index and a parsed value\n\t * for each scale id. _custom is optional\n\t * Example: {xScale0: 0, yScale0: 1, _custom: {r: 10, foo: 'bar'}}\n\t * @protected\n\t */\n  parseObjectData(meta, data, start, count) {\n    const {xScale, yScale} = meta;\n    const {xAxisKey = 'x', yAxisKey = 'y'} = this._parsing;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n\n    for (i = 0, ilen = count; i < ilen; ++i) {\n      index = i + start;\n      item = data[index];\n      parsed[i] = {\n        x: xScale.parse(resolveObjectKey(item, xAxisKey), index),\n        y: yScale.parse(resolveObjectKey(item, yAxisKey), index)\n      };\n    }\n    return parsed;\n  }\n\n  /**\n\t * @protected\n\t */\n  getParsed(index) {\n    return this._cachedMeta._parsed[index];\n  }\n\n  /**\n\t * @protected\n\t */\n  getDataElement(index) {\n    return this._cachedMeta.data[index];\n  }\n\n  /**\n\t * @protected\n\t */\n  applyStack(scale, parsed, mode) {\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const value = parsed[scale.axis];\n    const stack = {\n      keys: getSortedDatasetIndices(chart, true),\n      values: parsed._stacks[scale.axis]._visualValues\n    };\n    return applyStack(stack, value, meta.index, {mode});\n  }\n\n  /**\n\t * @protected\n\t */\n  updateRangeFromParsed(range, scale, parsed, stack) {\n    const parsedValue = parsed[scale.axis];\n    let value = parsedValue === null ? NaN : parsedValue;\n    const values = stack && parsed._stacks[scale.axis];\n    if (stack && values) {\n      stack.values = values;\n      value = applyStack(stack, parsedValue, this._cachedMeta.index);\n    }\n    range.min = Math.min(range.min, value);\n    range.max = Math.max(range.max, value);\n  }\n\n  /**\n\t * @protected\n\t */\n  getMinMax(scale, canStack) {\n    const meta = this._cachedMeta;\n    const _parsed = meta._parsed;\n    const sorted = meta._sorted && scale === meta.iScale;\n    const ilen = _parsed.length;\n    const otherScale = this._getOtherScale(scale);\n    const stack = createStack(canStack, meta, this.chart);\n    const range = {min: Number.POSITIVE_INFINITY, max: Number.NEGATIVE_INFINITY};\n    const {min: otherMin, max: otherMax} = getUserBounds(otherScale);\n    let i, parsed;\n\n    function _skip() {\n      parsed = _parsed[i];\n      const otherValue = parsed[otherScale.axis];\n      return !isFinite(parsed[scale.axis]) || otherMin > otherValue || otherMax < otherValue;\n    }\n\n    for (i = 0; i < ilen; ++i) {\n      if (_skip()) {\n        continue;\n      }\n      this.updateRangeFromParsed(range, scale, parsed, stack);\n      if (sorted) {\n        // if the data is sorted, we don't need to check further from this end of array\n        break;\n      }\n    }\n    if (sorted) {\n      // in the sorted case, find first non-skipped value from other end of array\n      for (i = ilen - 1; i >= 0; --i) {\n        if (_skip()) {\n          continue;\n        }\n        this.updateRangeFromParsed(range, scale, parsed, stack);\n        break;\n      }\n    }\n    return range;\n  }\n\n  getAllParsedValues(scale) {\n    const parsed = this._cachedMeta._parsed;\n    const values = [];\n    let i, ilen, value;\n\n    for (i = 0, ilen = parsed.length; i < ilen; ++i) {\n      value = parsed[i][scale.axis];\n      if (isFinite(value)) {\n        values.push(value);\n      }\n    }\n    return values;\n  }\n\n  /**\n\t * @return {number|boolean}\n\t * @protected\n\t */\n  getMaxOverflow() {\n    return false;\n  }\n\n  /**\n\t * @protected\n\t */\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const iScale = meta.iScale;\n    const vScale = meta.vScale;\n    const parsed = this.getParsed(index);\n    return {\n      label: iScale ? '' + iScale.getLabelForValue(parsed[iScale.axis]) : '',\n      value: vScale ? '' + vScale.getLabelForValue(parsed[vScale.axis]) : ''\n    };\n  }\n\n  /**\n\t * @private\n\t */\n  _update(mode) {\n    const meta = this._cachedMeta;\n    this.update(mode || 'default');\n    meta._clip = toClip(valueOrDefault(this.options.clip, defaultClip(meta.xScale, meta.yScale, this.getMaxOverflow())));\n  }\n\n  /**\n\t * @param {string} mode\n\t */\n  update(mode) {} // eslint-disable-line no-unused-vars\n\n  draw() {\n    const ctx = this._ctx;\n    const chart = this.chart;\n    const meta = this._cachedMeta;\n    const elements = meta.data || [];\n    const area = chart.chartArea;\n    const active = [];\n    const start = this._drawStart || 0;\n    const count = this._drawCount || (elements.length - start);\n    const drawActiveElementsOnTop = this.options.drawActiveElementsOnTop;\n    let i;\n\n    if (meta.dataset) {\n      meta.dataset.draw(ctx, area, start, count);\n    }\n\n    for (i = start; i < start + count; ++i) {\n      const element = elements[i];\n      if (element.hidden) {\n        continue;\n      }\n      if (element.active && drawActiveElementsOnTop) {\n        active.push(element);\n      } else {\n        element.draw(ctx, area);\n      }\n    }\n\n    for (i = 0; i < active.length; ++i) {\n      active[i].draw(ctx, area);\n    }\n  }\n\n  /**\n\t * Returns a set of predefined style properties that should be used to represent the dataset\n\t * or the data if the index is specified\n\t * @param {number} index - data index\n\t * @param {boolean} [active] - true if hover\n\t * @return {object} style object\n\t */\n  getStyle(index, active) {\n    const mode = active ? 'active' : 'default';\n    return index === undefined && this._cachedMeta.dataset\n      ? this.resolveDatasetElementOptions(mode)\n      : this.resolveDataElementOptions(index || 0, mode);\n  }\n\n  /**\n\t * @protected\n\t */\n  getContext(index, active, mode) {\n    const dataset = this.getDataset();\n    let context;\n    if (index >= 0 && index < this._cachedMeta.data.length) {\n      const element = this._cachedMeta.data[index];\n      context = element.$context ||\n        (element.$context = createDataContext(this.getContext(), index, element));\n      context.parsed = this.getParsed(index);\n      context.raw = dataset.data[index];\n      context.index = context.dataIndex = index;\n    } else {\n      context = this.$context ||\n        (this.$context = createDatasetContext(this.chart.getContext(), this.index));\n      context.dataset = dataset;\n      context.index = context.datasetIndex = this.index;\n    }\n\n    context.active = !!active;\n    context.mode = mode;\n    return context;\n  }\n\n  /**\n\t * @param {string} [mode]\n\t * @protected\n\t */\n  resolveDatasetElementOptions(mode) {\n    return this._resolveElementOptions(this.datasetElementType.id, mode);\n  }\n\n  /**\n\t * @param {number} index\n\t * @param {string} [mode]\n\t * @protected\n\t */\n  resolveDataElementOptions(index, mode) {\n    return this._resolveElementOptions(this.dataElementType.id, mode, index);\n  }\n\n  /**\n\t * @private\n\t */\n  _resolveElementOptions(elementType, mode = 'default', index) {\n    const active = mode === 'active';\n    const cache = this._cachedDataOpts;\n    const cacheKey = elementType + '-' + mode;\n    const cached = cache[cacheKey];\n    const sharing = this.enableOptionSharing && defined(index);\n    if (cached) {\n      return cloneIfNotShared(cached, sharing);\n    }\n    const config = this.chart.config;\n    const scopeKeys = config.datasetElementScopeKeys(this._type, elementType);\n    const prefixes = active ? [`${elementType}Hover`, 'hover', elementType, ''] : [elementType, ''];\n    const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n    const names = Object.keys(defaults.elements[elementType]);\n    // context is provided as a function, and is called only if needed,\n    // so we don't create a context for each element if not needed.\n    const context = () => this.getContext(index, active, mode);\n    const values = config.resolveNamedOptions(scopes, names, context, prefixes);\n\n    if (values.$shared) {\n      // `$shared` indicates this set of options can be shared between multiple elements.\n      // Sharing is used to reduce number of properties to change during animation.\n      values.$shared = sharing;\n\n      // We cache options by `mode`, which can be 'active' for example. This enables us\n      // to have the 'active' element options and 'default' options to switch between\n      // when interacting.\n      cache[cacheKey] = Object.freeze(cloneIfNotShared(values, sharing));\n    }\n\n    return values;\n  }\n\n\n  /**\n\t * @private\n\t */\n  _resolveAnimations(index, transition, active) {\n    const chart = this.chart;\n    const cache = this._cachedDataOpts;\n    const cacheKey = `animation-${transition}`;\n    const cached = cache[cacheKey];\n    if (cached) {\n      return cached;\n    }\n    let options;\n    if (chart.options.animation !== false) {\n      const config = this.chart.config;\n      const scopeKeys = config.datasetAnimationScopeKeys(this._type, transition);\n      const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n      options = config.createResolver(scopes, this.getContext(index, active, transition));\n    }\n    const animations = new Animations(chart, options && options.animations);\n    if (options && options._cacheable) {\n      cache[cacheKey] = Object.freeze(animations);\n    }\n    return animations;\n  }\n\n  /**\n\t * Utility for getting the options object shared between elements\n\t * @protected\n\t */\n  getSharedOptions(options) {\n    if (!options.$shared) {\n      return;\n    }\n    return this._sharedOptions || (this._sharedOptions = Object.assign({}, options));\n  }\n\n  /**\n\t * Utility for determining if `options` should be included in the updated properties\n\t * @protected\n\t */\n  includeOptions(mode, sharedOptions) {\n    return !sharedOptions || isDirectUpdateMode(mode) || this.chart._animationsDisabled;\n  }\n\n  /**\n   * @todo v4, rename to getSharedOptions and remove excess functions\n   */\n  _getSharedOptions(start, mode) {\n    const firstOpts = this.resolveDataElementOptions(start, mode);\n    const previouslySharedOptions = this._sharedOptions;\n    const sharedOptions = this.getSharedOptions(firstOpts);\n    const includeOptions = this.includeOptions(mode, sharedOptions) || (sharedOptions !== previouslySharedOptions);\n    this.updateSharedOptions(sharedOptions, mode, firstOpts);\n    return {sharedOptions, includeOptions};\n  }\n\n  /**\n\t * Utility for updating an element with new properties, using animations when appropriate.\n\t * @protected\n\t */\n  updateElement(element, index, properties, mode) {\n    if (isDirectUpdateMode(mode)) {\n      Object.assign(element, properties);\n    } else {\n      this._resolveAnimations(index, mode).update(element, properties);\n    }\n  }\n\n  /**\n\t * Utility to animate the shared options, that are potentially affecting multiple elements.\n\t * @protected\n\t */\n  updateSharedOptions(sharedOptions, mode, newOptions) {\n    if (sharedOptions && !isDirectUpdateMode(mode)) {\n      this._resolveAnimations(undefined, mode).update(sharedOptions, newOptions);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _setStyle(element, index, mode, active) {\n    element.active = active;\n    const options = this.getStyle(index, active);\n    this._resolveAnimations(index, mode, active).update(element, {\n      // When going from active to inactive, we need to update to the shared options.\n      // This way the once hovered element will end up with the same original shared options instance, after animation.\n      options: (!active && this.getSharedOptions(options)) || options\n    });\n  }\n\n  removeHoverStyle(element, datasetIndex, index) {\n    this._setStyle(element, index, 'active', false);\n  }\n\n  setHoverStyle(element, datasetIndex, index) {\n    this._setStyle(element, index, 'active', true);\n  }\n\n  /**\n\t * @private\n\t */\n  _removeDatasetHoverStyle() {\n    const element = this._cachedMeta.dataset;\n\n    if (element) {\n      this._setStyle(element, undefined, 'active', false);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _setDatasetHoverStyle() {\n    const element = this._cachedMeta.dataset;\n\n    if (element) {\n      this._setStyle(element, undefined, 'active', true);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _resyncElements(resetNewElements) {\n    const data = this._data;\n    const elements = this._cachedMeta.data;\n\n    // Apply changes detected through array listeners\n    for (const [method, arg1, arg2] of this._syncList) {\n      this[method](arg1, arg2);\n    }\n    this._syncList = [];\n\n    const numMeta = elements.length;\n    const numData = data.length;\n    const count = Math.min(numData, numMeta);\n\n    if (count) {\n      // TODO: It is not optimal to always parse the old data\n      // This is done because we are not detecting direct assignments:\n      // chart.data.datasets[0].data[5] = 10;\n      // chart.data.datasets[0].data[5].y = 10;\n      this.parse(0, count);\n    }\n\n    if (numData > numMeta) {\n      this._insertElements(numMeta, numData - numMeta, resetNewElements);\n    } else if (numData < numMeta) {\n      this._removeElements(numData, numMeta - numData);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _insertElements(start, count, resetNewElements = true) {\n    const meta = this._cachedMeta;\n    const data = meta.data;\n    const end = start + count;\n    let i;\n\n    const move = (arr) => {\n      arr.length += count;\n      for (i = arr.length - 1; i >= end; i--) {\n        arr[i] = arr[i - count];\n      }\n    };\n    move(data);\n\n    for (i = start; i < end; ++i) {\n      data[i] = new this.dataElementType();\n    }\n\n    if (this._parsing) {\n      move(meta._parsed);\n    }\n    this.parse(start, count);\n\n    if (resetNewElements) {\n      this.updateElements(data, start, count, 'reset');\n    }\n  }\n\n  updateElements(element, start, count, mode) {} // eslint-disable-line no-unused-vars\n\n  /**\n\t * @private\n\t */\n  _removeElements(start, count) {\n    const meta = this._cachedMeta;\n    if (this._parsing) {\n      const removed = meta._parsed.splice(start, count);\n      if (meta._stacked) {\n        clearStacks(meta, removed);\n      }\n    }\n    meta.data.splice(start, count);\n  }\n\n  /**\n\t * @private\n   */\n  _sync(args) {\n    if (this._parsing) {\n      this._syncList.push(args);\n    } else {\n      const [method, arg1, arg2] = args;\n      this[method](arg1, arg2);\n    }\n    this.chart._dataChanges.push([this.index, ...args]);\n  }\n\n  _onDataPush() {\n    const count = arguments.length;\n    this._sync(['_insertElements', this.getDataset().data.length - count, count]);\n  }\n\n  _onDataPop() {\n    this._sync(['_removeElements', this._cachedMeta.data.length - 1, 1]);\n  }\n\n  _onDataShift() {\n    this._sync(['_removeElements', 0, 1]);\n  }\n\n  _onDataSplice(start, count) {\n    if (count) {\n      this._sync(['_removeElements', start, count]);\n    }\n    const newCount = arguments.length - 2;\n    if (newCount) {\n      this._sync(['_insertElements', start, newCount]);\n    }\n  }\n\n  _onDataUnshift() {\n    this._sync(['_insertElements', 0, arguments.length]);\n  }\n}\n","import DatasetController from '../core/core.datasetController.js';\nimport {\n  _arrayUnique, isArray, isNullOrUndef,\n  valueOrDefault, resolveObjectKey, sign, defined\n} from '../helpers/index.js';\n\nfunction getAllScaleValues(scale, type) {\n  if (!scale._cache.$bar) {\n    const visibleMetas = scale.getMatchingVisibleMetas(type);\n    let values = [];\n\n    for (let i = 0, ilen = visibleMetas.length; i < ilen; i++) {\n      values = values.concat(visibleMetas[i].controller.getAllParsedValues(scale));\n    }\n    scale._cache.$bar = _arrayUnique(values.sort((a, b) => a - b));\n  }\n  return scale._cache.$bar;\n}\n\n/**\n * Computes the \"optimal\" sample size to maintain bars equally sized while preventing overlap.\n * @private\n */\nfunction computeMinSampleSize(meta) {\n  const scale = meta.iScale;\n  const values = getAllScaleValues(scale, meta.type);\n  let min = scale._length;\n  let i, ilen, curr, prev;\n  const updateMinAndPrev = () => {\n    if (curr === 32767 || curr === -32768) {\n      // Ignore truncated pixels\n      return;\n    }\n    if (defined(prev)) {\n      // curr - prev === 0 is ignored\n      min = Math.min(min, Math.abs(curr - prev) || min);\n    }\n    prev = curr;\n  };\n\n  for (i = 0, ilen = values.length; i < ilen; ++i) {\n    curr = scale.getPixelForValue(values[i]);\n    updateMinAndPrev();\n  }\n\n  prev = undefined;\n  for (i = 0, ilen = scale.ticks.length; i < ilen; ++i) {\n    curr = scale.getPixelForTick(i);\n    updateMinAndPrev();\n  }\n\n  return min;\n}\n\n/**\n * Computes an \"ideal\" category based on the absolute bar thickness or, if undefined or null,\n * uses the smallest interval (see computeMinSampleSize) that prevents bar overlapping. This\n * mode currently always generates bars equally sized (until we introduce scriptable options?).\n * @private\n */\nfunction computeFitCategoryTraits(index, ruler, options, stackCount) {\n  const thickness = options.barThickness;\n  let size, ratio;\n\n  if (isNullOrUndef(thickness)) {\n    size = ruler.min * options.categoryPercentage;\n    ratio = options.barPercentage;\n  } else {\n    // When bar thickness is enforced, category and bar percentages are ignored.\n    // Note(SB): we could add support for relative bar thickness (e.g. barThickness: '50%')\n    // and deprecate barPercentage since this value is ignored when thickness is absolute.\n    size = thickness * stackCount;\n    ratio = 1;\n  }\n\n  return {\n    chunk: size / stackCount,\n    ratio,\n    start: ruler.pixels[index] - (size / 2)\n  };\n}\n\n/**\n * Computes an \"optimal\" category that globally arranges bars side by side (no gap when\n * percentage options are 1), based on the previous and following categories. This mode\n * generates bars with different widths when data are not evenly spaced.\n * @private\n */\nfunction computeFlexCategoryTraits(index, ruler, options, stackCount) {\n  const pixels = ruler.pixels;\n  const curr = pixels[index];\n  let prev = index > 0 ? pixels[index - 1] : null;\n  let next = index < pixels.length - 1 ? pixels[index + 1] : null;\n  const percent = options.categoryPercentage;\n\n  if (prev === null) {\n    // first data: its size is double based on the next point or,\n    // if it's also the last data, we use the scale size.\n    prev = curr - (next === null ? ruler.end - ruler.start : next - curr);\n  }\n\n  if (next === null) {\n    // last data: its size is also double based on the previous point.\n    next = curr + curr - prev;\n  }\n\n  const start = curr - (curr - Math.min(prev, next)) / 2 * percent;\n  const size = Math.abs(next - prev) / 2 * percent;\n\n  return {\n    chunk: size / stackCount,\n    ratio: options.barPercentage,\n    start\n  };\n}\n\nfunction parseFloatBar(entry, item, vScale, i) {\n  const startValue = vScale.parse(entry[0], i);\n  const endValue = vScale.parse(entry[1], i);\n  const min = Math.min(startValue, endValue);\n  const max = Math.max(startValue, endValue);\n  let barStart = min;\n  let barEnd = max;\n\n  if (Math.abs(min) > Math.abs(max)) {\n    barStart = max;\n    barEnd = min;\n  }\n\n  // Store `barEnd` (furthest away from origin) as parsed value,\n  // to make stacking straight forward\n  item[vScale.axis] = barEnd;\n\n  item._custom = {\n    barStart,\n    barEnd,\n    start: startValue,\n    end: endValue,\n    min,\n    max\n  };\n}\n\nfunction parseValue(entry, item, vScale, i) {\n  if (isArray(entry)) {\n    parseFloatBar(entry, item, vScale, i);\n  } else {\n    item[vScale.axis] = vScale.parse(entry, i);\n  }\n  return item;\n}\n\nfunction parseArrayOrPrimitive(meta, data, start, count) {\n  const iScale = meta.iScale;\n  const vScale = meta.vScale;\n  const labels = iScale.getLabels();\n  const singleScale = iScale === vScale;\n  const parsed = [];\n  let i, ilen, item, entry;\n\n  for (i = start, ilen = start + count; i < ilen; ++i) {\n    entry = data[i];\n    item = {};\n    item[iScale.axis] = singleScale || iScale.parse(labels[i], i);\n    parsed.push(parseValue(entry, item, vScale, i));\n  }\n  return parsed;\n}\n\nfunction isFloatBar(custom) {\n  return custom && custom.barStart !== undefined && custom.barEnd !== undefined;\n}\n\nfunction barSign(size, vScale, actualBase) {\n  if (size !== 0) {\n    return sign(size);\n  }\n  return (vScale.isHorizontal() ? 1 : -1) * (vScale.min >= actualBase ? 1 : -1);\n}\n\nfunction borderProps(properties) {\n  let reverse, start, end, top, bottom;\n  if (properties.horizontal) {\n    reverse = properties.base > properties.x;\n    start = 'left';\n    end = 'right';\n  } else {\n    reverse = properties.base < properties.y;\n    start = 'bottom';\n    end = 'top';\n  }\n  if (reverse) {\n    top = 'end';\n    bottom = 'start';\n  } else {\n    top = 'start';\n    bottom = 'end';\n  }\n  return {start, end, reverse, top, bottom};\n}\n\nfunction setBorderSkipped(properties, options, stack, index) {\n  let edge = options.borderSkipped;\n  const res = {};\n\n  if (!edge) {\n    properties.borderSkipped = res;\n    return;\n  }\n\n  if (edge === true) {\n    properties.borderSkipped = {top: true, right: true, bottom: true, left: true};\n    return;\n  }\n\n  const {start, end, reverse, top, bottom} = borderProps(properties);\n\n  if (edge === 'middle' && stack) {\n    properties.enableBorderRadius = true;\n    if ((stack._top || 0) === index) {\n      edge = top;\n    } else if ((stack._bottom || 0) === index) {\n      edge = bottom;\n    } else {\n      res[parseEdge(bottom, start, end, reverse)] = true;\n      edge = top;\n    }\n  }\n\n  res[parseEdge(edge, start, end, reverse)] = true;\n  properties.borderSkipped = res;\n}\n\nfunction parseEdge(edge, a, b, reverse) {\n  if (reverse) {\n    edge = swap(edge, a, b);\n    edge = startEnd(edge, b, a);\n  } else {\n    edge = startEnd(edge, a, b);\n  }\n  return edge;\n}\n\nfunction swap(orig, v1, v2) {\n  return orig === v1 ? v2 : orig === v2 ? v1 : orig;\n}\n\nfunction startEnd(v, start, end) {\n  return v === 'start' ? start : v === 'end' ? end : v;\n}\n\nfunction setInflateAmount(properties, {inflateAmount}, ratio) {\n  properties.inflateAmount = inflateAmount === 'auto'\n    ? ratio === 1 ? 0.33 : 0\n    : inflateAmount;\n}\n\nexport default class BarController extends DatasetController {\n\n  static id = 'bar';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: false,\n    dataElementType: 'bar',\n\n    categoryPercentage: 0.8,\n    barPercentage: 0.9,\n    grouped: true,\n\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'base', 'width', 'height']\n      }\n    }\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    scales: {\n      _index_: {\n        type: 'category',\n        offset: true,\n        grid: {\n          offset: true\n        }\n      },\n      _value_: {\n        type: 'linear',\n        beginAtZero: true,\n      }\n    }\n  };\n\n\n  /**\n\t * Overriding primitive data parsing since we support mixed primitive/array\n\t * data for float bars\n\t * @protected\n\t */\n  parsePrimitiveData(meta, data, start, count) {\n    return parseArrayOrPrimitive(meta, data, start, count);\n  }\n\n  /**\n\t * Overriding array data parsing since we support mixed primitive/array\n\t * data for float bars\n\t * @protected\n\t */\n  parseArrayData(meta, data, start, count) {\n    return parseArrayOrPrimitive(meta, data, start, count);\n  }\n\n  /**\n\t * Overriding object data parsing since we support mixed primitive/array\n\t * value-scale data for float bars\n\t * @protected\n\t */\n  parseObjectData(meta, data, start, count) {\n    const {iScale, vScale} = meta;\n    const {xAxisKey = 'x', yAxisKey = 'y'} = this._parsing;\n    const iAxisKey = iScale.axis === 'x' ? xAxisKey : yAxisKey;\n    const vAxisKey = vScale.axis === 'x' ? xAxisKey : yAxisKey;\n    const parsed = [];\n    let i, ilen, item, obj;\n    for (i = start, ilen = start + count; i < ilen; ++i) {\n      obj = data[i];\n      item = {};\n      item[iScale.axis] = iScale.parse(resolveObjectKey(obj, iAxisKey), i);\n      parsed.push(parseValue(resolveObjectKey(obj, vAxisKey), item, vScale, i));\n    }\n    return parsed;\n  }\n\n  /**\n\t * @protected\n\t */\n  updateRangeFromParsed(range, scale, parsed, stack) {\n    super.updateRangeFromParsed(range, scale, parsed, stack);\n    const custom = parsed._custom;\n    if (custom && scale === this._cachedMeta.vScale) {\n      // float bar: only one end of the bar is considered by `super`\n      range.min = Math.min(range.min, custom.min);\n      range.max = Math.max(range.max, custom.max);\n    }\n  }\n\n  /**\n\t * @return {number|boolean}\n\t * @protected\n\t */\n  getMaxOverflow() {\n    return 0;\n  }\n\n  /**\n\t * @protected\n\t */\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const {iScale, vScale} = meta;\n    const parsed = this.getParsed(index);\n    const custom = parsed._custom;\n    const value = isFloatBar(custom)\n      ? '[' + custom.start + ', ' + custom.end + ']'\n      : '' + vScale.getLabelForValue(parsed[vScale.axis]);\n\n    return {\n      label: '' + iScale.getLabelForValue(parsed[iScale.axis]),\n      value\n    };\n  }\n\n  initialize() {\n    this.enableOptionSharing = true;\n\n    super.initialize();\n\n    const meta = this._cachedMeta;\n    meta.stack = this.getDataset().stack;\n  }\n\n  update(mode) {\n    const meta = this._cachedMeta;\n    this.updateElements(meta.data, 0, meta.data.length, mode);\n  }\n\n  updateElements(bars, start, count, mode) {\n    const reset = mode === 'reset';\n    const {index, _cachedMeta: {vScale}} = this;\n    const base = vScale.getBasePixel();\n    const horizontal = vScale.isHorizontal();\n    const ruler = this._getRuler();\n    const {sharedOptions, includeOptions} = this._getSharedOptions(start, mode);\n\n    for (let i = start; i < start + count; i++) {\n      const parsed = this.getParsed(i);\n      const vpixels = reset || isNullOrUndef(parsed[vScale.axis]) ? {base, head: base} : this._calculateBarValuePixels(i);\n      const ipixels = this._calculateBarIndexPixels(i, ruler);\n      const stack = (parsed._stacks || {})[vScale.axis];\n\n      const properties = {\n        horizontal,\n        base: vpixels.base,\n        enableBorderRadius: !stack || isFloatBar(parsed._custom) || (index === stack._top || index === stack._bottom),\n        x: horizontal ? vpixels.head : ipixels.center,\n        y: horizontal ? ipixels.center : vpixels.head,\n        height: horizontal ? ipixels.size : Math.abs(vpixels.size),\n        width: horizontal ? Math.abs(vpixels.size) : ipixels.size\n      };\n\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, bars[i].active ? 'active' : mode);\n      }\n      const options = properties.options || bars[i].options;\n      setBorderSkipped(properties, options, stack, index);\n      setInflateAmount(properties, options, ruler.ratio);\n      this.updateElement(bars[i], i, properties, mode);\n    }\n  }\n\n  /**\n\t * Returns the stacks based on groups and bar visibility.\n\t * @param {number} [last] - The dataset index\n\t * @param {number} [dataIndex] - The data index of the ruler\n\t * @returns {string[]} The list of stack IDs\n\t * @private\n\t */\n  _getStacks(last, dataIndex) {\n    const {iScale} = this._cachedMeta;\n    const metasets = iScale.getMatchingVisibleMetas(this._type)\n      .filter(meta => meta.controller.options.grouped);\n    const stacked = iScale.options.stacked;\n    const stacks = [];\n    const currentParsed = this._cachedMeta.controller.getParsed(dataIndex);\n    const iScaleValue = currentParsed && currentParsed[iScale.axis];\n\n    const skipNull = (meta) => {\n      const parsed = meta._parsed.find(item => item[iScale.axis] === iScaleValue);\n      const val = parsed && parsed[meta.vScale.axis];\n\n      if (isNullOrUndef(val) || isNaN(val)) {\n        return true;\n      }\n    };\n\n    for (const meta of metasets) {\n      if (dataIndex !== undefined && skipNull(meta)) {\n        continue;\n      }\n\n      // stacked   | meta.stack\n      //           | found | not found | undefined\n      // false     |   x   |     x     |     x\n      // true      |       |     x     |\n      // undefined |       |     x     |     x\n      if (stacked === false || stacks.indexOf(meta.stack) === -1 ||\n\t\t\t\t(stacked === undefined && meta.stack === undefined)) {\n        stacks.push(meta.stack);\n      }\n      if (meta.index === last) {\n        break;\n      }\n    }\n\n    // No stacks? that means there is no visible data. Let's still initialize an `undefined`\n    // stack where possible invisible bars will be located.\n    // https://github.com/chartjs/Chart.js/issues/6368\n    if (!stacks.length) {\n      stacks.push(undefined);\n    }\n\n    return stacks;\n  }\n\n  /**\n\t * Returns the effective number of stacks based on groups and bar visibility.\n\t * @private\n\t */\n  _getStackCount(index) {\n    return this._getStacks(undefined, index).length;\n  }\n\n  /**\n\t * Returns the stack index for the given dataset based on groups and bar visibility.\n\t * @param {number} [datasetIndex] - The dataset index\n\t * @param {string} [name] - The stack name to find\n   * @param {number} [dataIndex]\n\t * @returns {number} The stack index\n\t * @private\n\t */\n  _getStackIndex(datasetIndex, name, dataIndex) {\n    const stacks = this._getStacks(datasetIndex, dataIndex);\n    const index = (name !== undefined)\n      ? stacks.indexOf(name)\n      : -1; // indexOf returns -1 if element is not present\n\n    return (index === -1)\n      ? stacks.length - 1\n      : index;\n  }\n\n  /**\n\t * @private\n\t */\n  _getRuler() {\n    const opts = this.options;\n    const meta = this._cachedMeta;\n    const iScale = meta.iScale;\n    const pixels = [];\n    let i, ilen;\n\n    for (i = 0, ilen = meta.data.length; i < ilen; ++i) {\n      pixels.push(iScale.getPixelForValue(this.getParsed(i)[iScale.axis], i));\n    }\n\n    const barThickness = opts.barThickness;\n    const min = barThickness || computeMinSampleSize(meta);\n\n    return {\n      min,\n      pixels,\n      start: iScale._startPixel,\n      end: iScale._endPixel,\n      stackCount: this._getStackCount(),\n      scale: iScale,\n      grouped: opts.grouped,\n      // bar thickness ratio used for non-grouped bars\n      ratio: barThickness ? 1 : opts.categoryPercentage * opts.barPercentage\n    };\n  }\n\n  /**\n\t * Note: pixel values are not clamped to the scale area.\n\t * @private\n\t */\n  _calculateBarValuePixels(index) {\n    const {_cachedMeta: {vScale, _stacked, index: datasetIndex}, options: {base: baseValue, minBarLength}} = this;\n    const actualBase = baseValue || 0;\n    const parsed = this.getParsed(index);\n    const custom = parsed._custom;\n    const floating = isFloatBar(custom);\n    let value = parsed[vScale.axis];\n    let start = 0;\n    let length = _stacked ? this.applyStack(vScale, parsed, _stacked) : value;\n    let head, size;\n\n    if (length !== value) {\n      start = length - value;\n      length = value;\n    }\n\n    if (floating) {\n      value = custom.barStart;\n      length = custom.barEnd - custom.barStart;\n      // bars crossing origin are not stacked\n      if (value !== 0 && sign(value) !== sign(custom.barEnd)) {\n        start = 0;\n      }\n      start += value;\n    }\n\n    const startValue = !isNullOrUndef(baseValue) && !floating ? baseValue : start;\n    let base = vScale.getPixelForValue(startValue);\n\n    if (this.chart.getDataVisibility(index)) {\n      head = vScale.getPixelForValue(start + length);\n    } else {\n      // When not visible, no height\n      head = base;\n    }\n\n    size = head - base;\n\n    if (Math.abs(size) < minBarLength) {\n      size = barSign(size, vScale, actualBase) * minBarLength;\n      if (value === actualBase) {\n        base -= size / 2;\n      }\n      const startPixel = vScale.getPixelForDecimal(0);\n      const endPixel = vScale.getPixelForDecimal(1);\n      const min = Math.min(startPixel, endPixel);\n      const max = Math.max(startPixel, endPixel);\n      base = Math.max(Math.min(base, max), min);\n      head = base + size;\n\n      if (_stacked && !floating) {\n        // visual data coordinates after applying minBarLength\n        parsed._stacks[vScale.axis]._visualValues[datasetIndex] = vScale.getValueForPixel(head) - vScale.getValueForPixel(base);\n      }\n    }\n\n    if (base === vScale.getPixelForValue(actualBase)) {\n      const halfGrid = sign(size) * vScale.getLineWidthForValue(actualBase) / 2;\n      base += halfGrid;\n      size -= halfGrid;\n    }\n\n    return {\n      size,\n      base,\n      head,\n      center: head + size / 2\n    };\n  }\n\n  /**\n\t * @private\n\t */\n  _calculateBarIndexPixels(index, ruler) {\n    const scale = ruler.scale;\n    const options = this.options;\n    const skipNull = options.skipNull;\n    const maxBarThickness = valueOrDefault(options.maxBarThickness, Infinity);\n    let center, size;\n    if (ruler.grouped) {\n      const stackCount = skipNull ? this._getStackCount(index) : ruler.stackCount;\n      const range = options.barThickness === 'flex'\n        ? computeFlexCategoryTraits(index, ruler, options, stackCount)\n        : computeFitCategoryTraits(index, ruler, options, stackCount);\n\n      const stackIndex = this._getStackIndex(this.index, this._cachedMeta.stack, skipNull ? index : undefined);\n      center = range.start + (range.chunk * stackIndex) + (range.chunk / 2);\n      size = Math.min(maxBarThickness, range.chunk * range.ratio);\n    } else {\n      // For non-grouped bar charts, exact pixel values are used\n      center = scale.getPixelForValue(this.getParsed(index)[scale.axis], index);\n      size = Math.min(maxBarThickness, ruler.min * ruler.ratio);\n    }\n\n    return {\n      base: center - size / 2,\n      head: center + size / 2,\n      center,\n      size\n    };\n  }\n\n  draw() {\n    const meta = this._cachedMeta;\n    const vScale = meta.vScale;\n    const rects = meta.data;\n    const ilen = rects.length;\n    let i = 0;\n\n    for (; i < ilen; ++i) {\n      if (this.getParsed(i)[vScale.axis] !== null && !rects[i].hidden) {\n        rects[i].draw(this._ctx);\n      }\n    }\n  }\n\n}\n","import DatasetController from '../core/core.datasetController.js';\nimport {valueOrDefault} from '../helpers/helpers.core.js';\n\nexport default class BubbleController extends DatasetController {\n\n  static id = 'bubble';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: false,\n    dataElementType: 'point',\n\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'borderWidth', 'radius']\n      }\n    }\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    scales: {\n      x: {\n        type: 'linear'\n      },\n      y: {\n        type: 'linear'\n      }\n    }\n  };\n\n  initialize() {\n    this.enableOptionSharing = true;\n    super.initialize();\n  }\n\n  /**\n\t * Parse array of primitive values\n\t * @protected\n\t */\n  parsePrimitiveData(meta, data, start, count) {\n    const parsed = super.parsePrimitiveData(meta, data, start, count);\n    for (let i = 0; i < parsed.length; i++) {\n      parsed[i]._custom = this.resolveDataElementOptions(i + start).radius;\n    }\n    return parsed;\n  }\n\n  /**\n\t * Parse array of arrays\n\t * @protected\n\t */\n  parseArrayData(meta, data, start, count) {\n    const parsed = super.parseArrayData(meta, data, start, count);\n    for (let i = 0; i < parsed.length; i++) {\n      const item = data[start + i];\n      parsed[i]._custom = valueOrDefault(item[2], this.resolveDataElementOptions(i + start).radius);\n    }\n    return parsed;\n  }\n\n  /**\n\t * Parse array of objects\n\t * @protected\n\t */\n  parseObjectData(meta, data, start, count) {\n    const parsed = super.parseObjectData(meta, data, start, count);\n    for (let i = 0; i < parsed.length; i++) {\n      const item = data[start + i];\n      parsed[i]._custom = valueOrDefault(item && item.r && +item.r, this.resolveDataElementOptions(i + start).radius);\n    }\n    return parsed;\n  }\n\n  /**\n\t * @protected\n\t */\n  getMaxOverflow() {\n    const data = this._cachedMeta.data;\n\n    let max = 0;\n    for (let i = data.length - 1; i >= 0; --i) {\n      max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n    }\n    return max > 0 && max;\n  }\n\n  /**\n\t * @protected\n\t */\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const labels = this.chart.data.labels || [];\n    const {xScale, yScale} = meta;\n    const parsed = this.getParsed(index);\n    const x = xScale.getLabelForValue(parsed.x);\n    const y = yScale.getLabelForValue(parsed.y);\n    const r = parsed._custom;\n\n    return {\n      label: labels[index] || '',\n      value: '(' + x + ', ' + y + (r ? ', ' + r : '') + ')'\n    };\n  }\n\n  update(mode) {\n    const points = this._cachedMeta.data;\n\n    // Update Points\n    this.updateElements(points, 0, points.length, mode);\n  }\n\n  updateElements(points, start, count, mode) {\n    const reset = mode === 'reset';\n    const {iScale, vScale} = this._cachedMeta;\n    const {sharedOptions, includeOptions} = this._getSharedOptions(start, mode);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n\n    for (let i = start; i < start + count; i++) {\n      const point = points[i];\n      const parsed = !reset && this.getParsed(i);\n      const properties = {};\n      const iPixel = properties[iAxis] = reset ? iScale.getPixelForDecimal(0.5) : iScale.getPixelForValue(parsed[iAxis]);\n      const vPixel = properties[vAxis] = reset ? vScale.getBasePixel() : vScale.getPixelForValue(parsed[vAxis]);\n\n      properties.skip = isNaN(iPixel) || isNaN(vPixel);\n\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n\n        if (reset) {\n          properties.options.radius = 0;\n        }\n      }\n\n      this.updateElement(point, i, properties, mode);\n    }\n  }\n\n  /**\n\t * @param {number} index\n\t * @param {string} [mode]\n\t * @protected\n\t */\n  resolveDataElementOptions(index, mode) {\n    const parsed = this.getParsed(index);\n    let values = super.resolveDataElementOptions(index, mode);\n\n    // In case values were cached (and thus frozen), we need to clone the values\n    if (values.$shared) {\n      values = Object.assign({}, values, {$shared: false});\n    }\n\n    // Custom radius resolution\n    const radius = values.radius;\n    if (mode !== 'active') {\n      values.radius = 0;\n    }\n    values.radius += valueOrDefault(parsed && parsed._custom, radius);\n\n    return values;\n  }\n}\n","import DatasetController from '../core/core.datasetController.js';\nimport {isObject, resolveObjectKey, toPercentage, toDimension, valueOrDefault} from '../helpers/helpers.core.js';\nimport {formatNumber} from '../helpers/helpers.intl.js';\nimport {toRadians, PI, TAU, HALF_PI, _angleBetween} from '../helpers/helpers.math.js';\n\n/**\n * @typedef { import('../core/core.controller.js').default } Chart\n */\n\nfunction getRatioAndOffset(rotation, circumference, cutout) {\n  let ratioX = 1;\n  let ratioY = 1;\n  let offsetX = 0;\n  let offsetY = 0;\n  // If the chart's circumference isn't a full circle, calculate size as a ratio of the width/height of the arc\n  if (circumference < TAU) {\n    const startAngle = rotation;\n    const endAngle = startAngle + circumference;\n    const startX = Math.cos(startAngle);\n    const startY = Math.sin(startAngle);\n    const endX = Math.cos(endAngle);\n    const endY = Math.sin(endAngle);\n    const calcMax = (angle, a, b) => _angleBetween(angle, startAngle, endAngle, true) ? 1 : Math.max(a, a * cutout, b, b * cutout);\n    const calcMin = (angle, a, b) => _angleBetween(angle, startAngle, endAngle, true) ? -1 : Math.min(a, a * cutout, b, b * cutout);\n    const maxX = calcMax(0, startX, endX);\n    const maxY = calcMax(HALF_PI, startY, endY);\n    const minX = calcMin(PI, startX, endX);\n    const minY = calcMin(PI + HALF_PI, startY, endY);\n    ratioX = (maxX - minX) / 2;\n    ratioY = (maxY - minY) / 2;\n    offsetX = -(maxX + minX) / 2;\n    offsetY = -(maxY + minY) / 2;\n  }\n  return {ratioX, ratioY, offsetX, offsetY};\n}\n\nexport default class DoughnutController extends DatasetController {\n\n  static id = 'doughnut';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: false,\n    dataElementType: 'arc',\n    animation: {\n      // Boolean - Whether we animate the rotation of the Doughnut\n      animateRotate: true,\n      // Boolean - Whether we animate scaling the Doughnut from the centre\n      animateScale: false\n    },\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['circumference', 'endAngle', 'innerRadius', 'outerRadius', 'startAngle', 'x', 'y', 'offset', 'borderWidth', 'spacing']\n      },\n    },\n    // The percentage of the chart that we cut out of the middle.\n    cutout: '50%',\n\n    // The rotation of the chart, where the first data arc begins.\n    rotation: 0,\n\n    // The total circumference of the chart.\n    circumference: 360,\n\n    // The outer radius of the chart\n    radius: '100%',\n\n    // Spacing between arcs\n    spacing: 0,\n\n    indexAxis: 'r',\n  };\n\n  static descriptors = {\n    _scriptable: (name) => name !== 'spacing',\n    _indexable: (name) => name !== 'spacing' && !name.startsWith('borderDash') && !name.startsWith('hoverBorderDash'),\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    aspectRatio: 1,\n\n    // Need to override these to give a nice default\n    plugins: {\n      legend: {\n        labels: {\n          generateLabels(chart) {\n            const data = chart.data;\n            if (data.labels.length && data.datasets.length) {\n              const {labels: {pointStyle, color}} = chart.legend.options;\n\n              return data.labels.map((label, i) => {\n                const meta = chart.getDatasetMeta(0);\n                const style = meta.controller.getStyle(i);\n\n                return {\n                  text: label,\n                  fillStyle: style.backgroundColor,\n                  strokeStyle: style.borderColor,\n                  fontColor: color,\n                  lineWidth: style.borderWidth,\n                  pointStyle: pointStyle,\n                  hidden: !chart.getDataVisibility(i),\n\n                  // Extra data used for toggling the correct item\n                  index: i\n                };\n              });\n            }\n            return [];\n          }\n        },\n\n        onClick(e, legendItem, legend) {\n          legend.chart.toggleDataVisibility(legendItem.index);\n          legend.chart.update();\n        }\n      }\n    }\n  };\n\n  constructor(chart, datasetIndex) {\n    super(chart, datasetIndex);\n\n    this.enableOptionSharing = true;\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n    this.offsetX = undefined;\n    this.offsetY = undefined;\n  }\n\n  linkScales() {}\n\n  /**\n\t * Override data parsing, since we are not using scales\n\t */\n  parse(start, count) {\n    const data = this.getDataset().data;\n    const meta = this._cachedMeta;\n\n    if (this._parsing === false) {\n      meta._parsed = data;\n    } else {\n      let getter = (i) => +data[i];\n\n      if (isObject(data[start])) {\n        const {key = 'value'} = this._parsing;\n        getter = (i) => +resolveObjectKey(data[i], key);\n      }\n\n      let i, ilen;\n      for (i = start, ilen = start + count; i < ilen; ++i) {\n        meta._parsed[i] = getter(i);\n      }\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _getRotation() {\n    return toRadians(this.options.rotation - 90);\n  }\n\n  /**\n\t * @private\n\t */\n  _getCircumference() {\n    return toRadians(this.options.circumference);\n  }\n\n  /**\n\t * Get the maximal rotation & circumference extents\n\t * across all visible datasets.\n\t */\n  _getRotationExtents() {\n    let min = TAU;\n    let max = -TAU;\n\n    for (let i = 0; i < this.chart.data.datasets.length; ++i) {\n      if (this.chart.isDatasetVisible(i) && this.chart.getDatasetMeta(i).type === this._type) {\n        const controller = this.chart.getDatasetMeta(i).controller;\n        const rotation = controller._getRotation();\n        const circumference = controller._getCircumference();\n\n        min = Math.min(min, rotation);\n        max = Math.max(max, rotation + circumference);\n      }\n    }\n\n    return {\n      rotation: min,\n      circumference: max - min,\n    };\n  }\n\n  /**\n\t * @param {string} mode\n\t */\n  update(mode) {\n    const chart = this.chart;\n    const {chartArea} = chart;\n    const meta = this._cachedMeta;\n    const arcs = meta.data;\n    const spacing = this.getMaxBorderWidth() + this.getMaxOffset(arcs) + this.options.spacing;\n    const maxSize = Math.max((Math.min(chartArea.width, chartArea.height) - spacing) / 2, 0);\n    const cutout = Math.min(toPercentage(this.options.cutout, maxSize), 1);\n    const chartWeight = this._getRingWeight(this.index);\n\n    // Compute the maximal rotation & circumference limits.\n    // If we only consider our dataset, this can cause problems when two datasets\n    // are both less than a circle with different rotations (starting angles)\n    const {circumference, rotation} = this._getRotationExtents();\n    const {ratioX, ratioY, offsetX, offsetY} = getRatioAndOffset(rotation, circumference, cutout);\n    const maxWidth = (chartArea.width - spacing) / ratioX;\n    const maxHeight = (chartArea.height - spacing) / ratioY;\n    const maxRadius = Math.max(Math.min(maxWidth, maxHeight) / 2, 0);\n    const outerRadius = toDimension(this.options.radius, maxRadius);\n    const innerRadius = Math.max(outerRadius * cutout, 0);\n    const radiusLength = (outerRadius - innerRadius) / this._getVisibleDatasetWeightTotal();\n    this.offsetX = offsetX * outerRadius;\n    this.offsetY = offsetY * outerRadius;\n\n    meta.total = this.calculateTotal();\n\n    this.outerRadius = outerRadius - radiusLength * this._getRingWeightOffset(this.index);\n    this.innerRadius = Math.max(this.outerRadius - radiusLength * chartWeight, 0);\n\n    this.updateElements(arcs, 0, arcs.length, mode);\n  }\n\n  /**\n   * @private\n   */\n  _circumference(i, reset) {\n    const opts = this.options;\n    const meta = this._cachedMeta;\n    const circumference = this._getCircumference();\n    if ((reset && opts.animation.animateRotate) || !this.chart.getDataVisibility(i) || meta._parsed[i] === null || meta.data[i].hidden) {\n      return 0;\n    }\n    return this.calculateCircumference(meta._parsed[i] * circumference / TAU);\n  }\n\n  updateElements(arcs, start, count, mode) {\n    const reset = mode === 'reset';\n    const chart = this.chart;\n    const chartArea = chart.chartArea;\n    const opts = chart.options;\n    const animationOpts = opts.animation;\n    const centerX = (chartArea.left + chartArea.right) / 2;\n    const centerY = (chartArea.top + chartArea.bottom) / 2;\n    const animateScale = reset && animationOpts.animateScale;\n    const innerRadius = animateScale ? 0 : this.innerRadius;\n    const outerRadius = animateScale ? 0 : this.outerRadius;\n    const {sharedOptions, includeOptions} = this._getSharedOptions(start, mode);\n    let startAngle = this._getRotation();\n    let i;\n\n    for (i = 0; i < start; ++i) {\n      startAngle += this._circumference(i, reset);\n    }\n\n    for (i = start; i < start + count; ++i) {\n      const circumference = this._circumference(i, reset);\n      const arc = arcs[i];\n      const properties = {\n        x: centerX + this.offsetX,\n        y: centerY + this.offsetY,\n        startAngle,\n        endAngle: startAngle + circumference,\n        circumference,\n        outerRadius,\n        innerRadius\n      };\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, arc.active ? 'active' : mode);\n      }\n      startAngle += circumference;\n\n      this.updateElement(arc, i, properties, mode);\n    }\n  }\n\n  calculateTotal() {\n    const meta = this._cachedMeta;\n    const metaData = meta.data;\n    let total = 0;\n    let i;\n\n    for (i = 0; i < metaData.length; i++) {\n      const value = meta._parsed[i];\n      if (value !== null && !isNaN(value) && this.chart.getDataVisibility(i) && !metaData[i].hidden) {\n        total += Math.abs(value);\n      }\n    }\n\n    return total;\n  }\n\n  calculateCircumference(value) {\n    const total = this._cachedMeta.total;\n    if (total > 0 && !isNaN(value)) {\n      return TAU * (Math.abs(value) / total);\n    }\n    return 0;\n  }\n\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const chart = this.chart;\n    const labels = chart.data.labels || [];\n    const value = formatNumber(meta._parsed[index], chart.options.locale);\n\n    return {\n      label: labels[index] || '',\n      value,\n    };\n  }\n\n  getMaxBorderWidth(arcs) {\n    let max = 0;\n    const chart = this.chart;\n    let i, ilen, meta, controller, options;\n\n    if (!arcs) {\n      // Find the outmost visible dataset\n      for (i = 0, ilen = chart.data.datasets.length; i < ilen; ++i) {\n        if (chart.isDatasetVisible(i)) {\n          meta = chart.getDatasetMeta(i);\n          arcs = meta.data;\n          controller = meta.controller;\n          break;\n        }\n      }\n    }\n\n    if (!arcs) {\n      return 0;\n    }\n\n    for (i = 0, ilen = arcs.length; i < ilen; ++i) {\n      options = controller.resolveDataElementOptions(i);\n      if (options.borderAlign !== 'inner') {\n        max = Math.max(max, options.borderWidth || 0, options.hoverBorderWidth || 0);\n      }\n    }\n    return max;\n  }\n\n  getMaxOffset(arcs) {\n    let max = 0;\n\n    for (let i = 0, ilen = arcs.length; i < ilen; ++i) {\n      const options = this.resolveDataElementOptions(i);\n      max = Math.max(max, options.offset || 0, options.hoverOffset || 0);\n    }\n    return max;\n  }\n\n  /**\n\t * Get radius length offset of the dataset in relation to the visible datasets weights. This allows determining the inner and outer radius correctly\n\t * @private\n\t */\n  _getRingWeightOffset(datasetIndex) {\n    let ringWeightOffset = 0;\n\n    for (let i = 0; i < datasetIndex; ++i) {\n      if (this.chart.isDatasetVisible(i)) {\n        ringWeightOffset += this._getRingWeight(i);\n      }\n    }\n\n    return ringWeightOffset;\n  }\n\n  /**\n\t * @private\n\t */\n  _getRingWeight(datasetIndex) {\n    return Math.max(valueOrDefault(this.chart.data.datasets[datasetIndex].weight, 1), 0);\n  }\n\n  /**\n\t * Returns the sum of all visible data set weights.\n\t * @private\n\t */\n  _getVisibleDatasetWeightTotal() {\n    return this._getRingWeightOffset(this.chart.data.datasets.length) || 1;\n  }\n}\n","import DatasetController from '../core/core.datasetController.js';\nimport {isNullOrUndef} from '../helpers/index.js';\nimport {isNumber} from '../helpers/helpers.math.js';\nimport {_getStartAndCountOfVisiblePoints, _scaleRangesChanged} from '../helpers/helpers.extras.js';\n\nexport default class LineController extends DatasetController {\n\n  static id = 'line';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: 'line',\n    dataElementType: 'point',\n\n    showLine: true,\n    spanGaps: false,\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    scales: {\n      _index_: {\n        type: 'category',\n      },\n      _value_: {\n        type: 'linear',\n      },\n    }\n  };\n\n  initialize() {\n    this.enableOptionSharing = true;\n    this.supportsDecimation = true;\n    super.initialize();\n  }\n\n  update(mode) {\n    const meta = this._cachedMeta;\n    const {dataset: line, data: points = [], _dataset} = meta;\n    // @ts-ignore\n    const animationsDisabled = this.chart._animationsDisabled;\n    let {start, count} = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n\n    this._drawStart = start;\n    this._drawCount = count;\n\n    if (_scaleRangesChanged(meta)) {\n      start = 0;\n      count = points.length;\n    }\n\n    // Update Line\n    line._chart = this.chart;\n    line._datasetIndex = this.index;\n    line._decimated = !!_dataset._decimated;\n    line.points = points;\n\n    const options = this.resolveDatasetElementOptions(mode);\n    if (!this.options.showLine) {\n      options.borderWidth = 0;\n    }\n    options.segment = this.options.segment;\n    this.updateElement(line, undefined, {\n      animated: !animationsDisabled,\n      options\n    }, mode);\n\n    // Update Points\n    this.updateElements(points, start, count, mode);\n  }\n\n  updateElements(points, start, count, mode) {\n    const reset = mode === 'reset';\n    const {iScale, vScale, _stacked, _dataset} = this._cachedMeta;\n    const {sharedOptions, includeOptions} = this._getSharedOptions(start, mode);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const {spanGaps, segment} = this.options;\n    const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n    const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n    const end = start + count;\n    const pointsCount = points.length;\n    let prevParsed = start > 0 && this.getParsed(start - 1);\n\n    for (let i = 0; i < pointsCount; ++i) {\n      const point = points[i];\n      const properties = directUpdate ? point : {};\n\n      if (i < start || i >= end) {\n        properties.skip = true;\n        continue;\n      }\n\n      const parsed = this.getParsed(i);\n      const nullData = isNullOrUndef(parsed[vAxis]);\n      const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n      const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n\n      properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n      properties.stop = i > 0 && (Math.abs(parsed[iAxis] - prevParsed[iAxis])) > maxGapLength;\n      if (segment) {\n        properties.parsed = parsed;\n        properties.raw = _dataset.data[i];\n      }\n\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      }\n\n      if (!directUpdate) {\n        this.updateElement(point, i, properties, mode);\n      }\n\n      prevParsed = parsed;\n    }\n  }\n\n  /**\n\t * @protected\n\t */\n  getMaxOverflow() {\n    const meta = this._cachedMeta;\n    const dataset = meta.dataset;\n    const border = dataset.options && dataset.options.borderWidth || 0;\n    const data = meta.data || [];\n    if (!data.length) {\n      return border;\n    }\n    const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n    const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n    return Math.max(border, firstPoint, lastPoint) / 2;\n  }\n\n  draw() {\n    const meta = this._cachedMeta;\n    meta.dataset.updateControlPoints(this.chart.chartArea, meta.iScale.axis);\n    super.draw();\n  }\n}\n","import DatasetController from '../core/core.datasetController.js';\nimport {toRadians, PI, formatNumber, _parseObjectDataRadialScale} from '../helpers/index.js';\n\nexport default class PolarAreaController extends DatasetController {\n\n  static id = 'polarArea';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    dataElementType: 'arc',\n    animation: {\n      animateRotate: true,\n      animateScale: true\n    },\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'startAngle', 'endAngle', 'innerRadius', 'outerRadius']\n      },\n    },\n    indexAxis: 'r',\n    startAngle: 0,\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    aspectRatio: 1,\n\n    plugins: {\n      legend: {\n        labels: {\n          generateLabels(chart) {\n            const data = chart.data;\n            if (data.labels.length && data.datasets.length) {\n              const {labels: {pointStyle, color}} = chart.legend.options;\n\n              return data.labels.map((label, i) => {\n                const meta = chart.getDatasetMeta(0);\n                const style = meta.controller.getStyle(i);\n\n                return {\n                  text: label,\n                  fillStyle: style.backgroundColor,\n                  strokeStyle: style.borderColor,\n                  fontColor: color,\n                  lineWidth: style.borderWidth,\n                  pointStyle: pointStyle,\n                  hidden: !chart.getDataVisibility(i),\n\n                  // Extra data used for toggling the correct item\n                  index: i\n                };\n              });\n            }\n            return [];\n          }\n        },\n\n        onClick(e, legendItem, legend) {\n          legend.chart.toggleDataVisibility(legendItem.index);\n          legend.chart.update();\n        }\n      }\n    },\n\n    scales: {\n      r: {\n        type: 'radialLinear',\n        angleLines: {\n          display: false\n        },\n        beginAtZero: true,\n        grid: {\n          circular: true\n        },\n        pointLabels: {\n          display: false\n        },\n        startAngle: 0\n      }\n    }\n  };\n\n  constructor(chart, datasetIndex) {\n    super(chart, datasetIndex);\n\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n  }\n\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const chart = this.chart;\n    const labels = chart.data.labels || [];\n    const value = formatNumber(meta._parsed[index].r, chart.options.locale);\n\n    return {\n      label: labels[index] || '',\n      value,\n    };\n  }\n\n  parseObjectData(meta, data, start, count) {\n    return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n  }\n\n  update(mode) {\n    const arcs = this._cachedMeta.data;\n\n    this._updateRadius();\n    this.updateElements(arcs, 0, arcs.length, mode);\n  }\n\n  /**\n   * @protected\n   */\n  getMinMax() {\n    const meta = this._cachedMeta;\n    const range = {min: Number.POSITIVE_INFINITY, max: Number.NEGATIVE_INFINITY};\n\n    meta.data.forEach((element, index) => {\n      const parsed = this.getParsed(index).r;\n\n      if (!isNaN(parsed) && this.chart.getDataVisibility(index)) {\n        if (parsed < range.min) {\n          range.min = parsed;\n        }\n\n        if (parsed > range.max) {\n          range.max = parsed;\n        }\n      }\n    });\n\n    return range;\n  }\n\n  /**\n\t * @private\n\t */\n  _updateRadius() {\n    const chart = this.chart;\n    const chartArea = chart.chartArea;\n    const opts = chart.options;\n    const minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\n\n    const outerRadius = Math.max(minSize / 2, 0);\n    const innerRadius = Math.max(opts.cutoutPercentage ? (outerRadius / 100) * (opts.cutoutPercentage) : 1, 0);\n    const radiusLength = (outerRadius - innerRadius) / chart.getVisibleDatasetCount();\n\n    this.outerRadius = outerRadius - (radiusLength * this.index);\n    this.innerRadius = this.outerRadius - radiusLength;\n  }\n\n  updateElements(arcs, start, count, mode) {\n    const reset = mode === 'reset';\n    const chart = this.chart;\n    const opts = chart.options;\n    const animationOpts = opts.animation;\n    const scale = this._cachedMeta.rScale;\n    const centerX = scale.xCenter;\n    const centerY = scale.yCenter;\n    const datasetStartAngle = scale.getIndexAngle(0) - 0.5 * PI;\n    let angle = datasetStartAngle;\n    let i;\n\n    const defaultAngle = 360 / this.countVisibleElements();\n\n    for (i = 0; i < start; ++i) {\n      angle += this._computeAngle(i, mode, defaultAngle);\n    }\n    for (i = start; i < start + count; i++) {\n      const arc = arcs[i];\n      let startAngle = angle;\n      let endAngle = angle + this._computeAngle(i, mode, defaultAngle);\n      let outerRadius = chart.getDataVisibility(i) ? scale.getDistanceFromCenterForValue(this.getParsed(i).r) : 0;\n      angle = endAngle;\n\n      if (reset) {\n        if (animationOpts.animateScale) {\n          outerRadius = 0;\n        }\n        if (animationOpts.animateRotate) {\n          startAngle = endAngle = datasetStartAngle;\n        }\n      }\n\n      const properties = {\n        x: centerX,\n        y: centerY,\n        innerRadius: 0,\n        outerRadius,\n        startAngle,\n        endAngle,\n        options: this.resolveDataElementOptions(i, arc.active ? 'active' : mode)\n      };\n\n      this.updateElement(arc, i, properties, mode);\n    }\n  }\n\n  countVisibleElements() {\n    const meta = this._cachedMeta;\n    let count = 0;\n\n    meta.data.forEach((element, index) => {\n      if (!isNaN(this.getParsed(index).r) && this.chart.getDataVisibility(index)) {\n        count++;\n      }\n    });\n\n    return count;\n  }\n\n  /**\n\t * @private\n\t */\n  _computeAngle(index, mode, defaultAngle) {\n    return this.chart.getDataVisibility(index)\n      ? toRadians(this.resolveDataElementOptions(index, mode).angle || defaultAngle)\n      : 0;\n  }\n}\n","import DoughnutController from './controller.doughnut.js';\n\n// Pie charts are Doughnut chart with different defaults\nexport default class PieController extends DoughnutController {\n\n  static id = 'pie';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    // The percentage of the chart that we cut out of the middle.\n    cutout: 0,\n\n    // The rotation of the chart, where the first data arc begins.\n    rotation: 0,\n\n    // The total circumference of the chart.\n    circumference: 360,\n\n    // The outer radius of the chart\n    radius: '100%'\n  };\n}\n","import DatasetController from '../core/core.datasetController.js';\nimport {_parseObjectDataRadialScale} from '../helpers/index.js';\n\nexport default class RadarController extends DatasetController {\n\n  static id = 'radar';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: 'line',\n    dataElementType: 'point',\n    indexAxis: 'r',\n    showLine: true,\n    elements: {\n      line: {\n        fill: 'start'\n      }\n    },\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n    aspectRatio: 1,\n\n    scales: {\n      r: {\n        type: 'radialLinear',\n      }\n    }\n  };\n\n  /**\n\t * @protected\n\t */\n  getLabelAndValue(index) {\n    const vScale = this._cachedMeta.vScale;\n    const parsed = this.getParsed(index);\n\n    return {\n      label: vScale.getLabels()[index],\n      value: '' + vScale.getLabelForValue(parsed[vScale.axis])\n    };\n  }\n\n  parseObjectData(meta, data, start, count) {\n    return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n  }\n\n  update(mode) {\n    const meta = this._cachedMeta;\n    const line = meta.dataset;\n    const points = meta.data || [];\n    const labels = meta.iScale.getLabels();\n\n    // Update Line\n    line.points = points;\n    // In resize mode only point locations change, so no need to set the points or options.\n    if (mode !== 'resize') {\n      const options = this.resolveDatasetElementOptions(mode);\n      if (!this.options.showLine) {\n        options.borderWidth = 0;\n      }\n\n      const properties = {\n        _loop: true,\n        _fullLoop: labels.length === points.length,\n        options\n      };\n\n      this.updateElement(line, undefined, properties, mode);\n    }\n\n    // Update Points\n    this.updateElements(points, 0, points.length, mode);\n  }\n\n  updateElements(points, start, count, mode) {\n    const scale = this._cachedMeta.rScale;\n    const reset = mode === 'reset';\n\n    for (let i = start; i < start + count; i++) {\n      const point = points[i];\n      const options = this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      const pointPosition = scale.getPointPositionForValue(i, this.getParsed(i).r);\n\n      const x = reset ? scale.xCenter : pointPosition.x;\n      const y = reset ? scale.yCenter : pointPosition.y;\n\n      const properties = {\n        x,\n        y,\n        angle: pointPosition.angle,\n        skip: isNaN(x) || isNaN(y),\n        options\n      };\n\n      this.updateElement(point, i, properties, mode);\n    }\n  }\n}\n","import DatasetController from '../core/core.datasetController.js';\nimport {isNullOrUndef} from '../helpers/index.js';\nimport {isNumber} from '../helpers/helpers.math.js';\nimport {_getStartAndCountOfVisiblePoints, _scaleRangesChanged} from '../helpers/helpers.extras.js';\n\nexport default class ScatterController extends DatasetController {\n\n  static id = 'scatter';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    datasetElementType: false,\n    dataElementType: 'point',\n    showLine: false,\n    fill: false\n  };\n\n  /**\n   * @type {any}\n   */\n  static overrides = {\n\n    interaction: {\n      mode: 'point'\n    },\n\n    scales: {\n      x: {\n        type: 'linear'\n      },\n      y: {\n        type: 'linear'\n      }\n    }\n  };\n\n  /**\n\t * @protected\n\t */\n  getLabelAndValue(index) {\n    const meta = this._cachedMeta;\n    const labels = this.chart.data.labels || [];\n    const {xScale, yScale} = meta;\n    const parsed = this.getParsed(index);\n    const x = xScale.getLabelForValue(parsed.x);\n    const y = yScale.getLabelForValue(parsed.y);\n\n    return {\n      label: labels[index] || '',\n      value: '(' + x + ', ' + y + ')'\n    };\n  }\n\n  update(mode) {\n    const meta = this._cachedMeta;\n    const {data: points = []} = meta;\n    // @ts-ignore\n    const animationsDisabled = this.chart._animationsDisabled;\n    let {start, count} = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n\n    this._drawStart = start;\n    this._drawCount = count;\n\n    if (_scaleRangesChanged(meta)) {\n      start = 0;\n      count = points.length;\n    }\n\n    if (this.options.showLine) {\n\n      // https://github.com/chartjs/Chart.js/issues/11333\n      if (!this.datasetElementType) {\n        this.addElements();\n      }\n      const {dataset: line, _dataset} = meta;\n\n      // Update Line\n      line._chart = this.chart;\n      line._datasetIndex = this.index;\n      line._decimated = !!_dataset._decimated;\n      line.points = points;\n\n      const options = this.resolveDatasetElementOptions(mode);\n      options.segment = this.options.segment;\n      this.updateElement(line, undefined, {\n        animated: !animationsDisabled,\n        options\n      }, mode);\n    } else if (this.datasetElementType) {\n      // https://github.com/chartjs/Chart.js/issues/11333\n      delete meta.dataset;\n      this.datasetElementType = false;\n    }\n\n    // Update Points\n    this.updateElements(points, start, count, mode);\n  }\n\n  addElements() {\n    const {showLine} = this.options;\n\n    if (!this.datasetElementType && showLine) {\n      this.datasetElementType = this.chart.registry.getElement('line');\n    }\n\n    super.addElements();\n  }\n\n  updateElements(points, start, count, mode) {\n    const reset = mode === 'reset';\n    const {iScale, vScale, _stacked, _dataset} = this._cachedMeta;\n    const firstOpts = this.resolveDataElementOptions(start, mode);\n    const sharedOptions = this.getSharedOptions(firstOpts);\n    const includeOptions = this.includeOptions(mode, sharedOptions);\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const {spanGaps, segment} = this.options;\n    const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n    const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n    let prevParsed = start > 0 && this.getParsed(start - 1);\n\n    for (let i = start; i < start + count; ++i) {\n      const point = points[i];\n      const parsed = this.getParsed(i);\n      const properties = directUpdate ? point : {};\n      const nullData = isNullOrUndef(parsed[vAxis]);\n      const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n      const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n\n      properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n      properties.stop = i > 0 && (Math.abs(parsed[iAxis] - prevParsed[iAxis])) > maxGapLength;\n      if (segment) {\n        properties.parsed = parsed;\n        properties.raw = _dataset.data[i];\n      }\n\n      if (includeOptions) {\n        properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n      }\n\n      if (!directUpdate) {\n        this.updateElement(point, i, properties, mode);\n      }\n\n      prevParsed = parsed;\n    }\n\n    this.updateSharedOptions(sharedOptions, mode, firstOpts);\n  }\n\n  /**\n\t * @protected\n\t */\n  getMaxOverflow() {\n    const meta = this._cachedMeta;\n    const data = meta.data || [];\n\n    if (!this.options.showLine) {\n      let max = 0;\n      for (let i = data.length - 1; i >= 0; --i) {\n        max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n      }\n      return max > 0 && max;\n    }\n\n    const dataset = meta.dataset;\n    const border = dataset.options && dataset.options.borderWidth || 0;\n\n    if (!data.length) {\n      return border;\n    }\n\n    const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n    const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n    return Math.max(border, firstPoint, lastPoint) / 2;\n  }\n}\n","/**\n * @namespace Chart._adapters\n * @since 2.8.0\n * @private\n */\n\nimport type {AnyObject} from '../types/basic.js';\nimport type {ChartOptions} from '../types/index.js';\n\nexport type TimeUnit = 'millisecond' | 'second' | 'minute' | 'hour' | 'day' | 'week' | 'month' | 'quarter' | 'year';\n\nexport interface DateAdapter<T extends AnyObject = AnyObject> {\n  readonly options: T;\n  /**\n   * Will called with chart options after adapter creation.\n   */\n  init(this: DateAdapter<T>, chartOptions: ChartOptions): void;\n  /**\n   * Returns a map of time formats for the supported formatting units defined\n   * in Unit as well as 'datetime' representing a detailed date/time string.\n   */\n  formats(this: DateAdapter<T>): Record<string, string>;\n  /**\n   * Parses the given `value` and return the associated timestamp.\n   * @param value - the value to parse (usually comes from the data)\n   * @param [format] - the expected data format\n   */\n  parse(this: DateAdapter<T>, value: unknown, format?: TimeUnit): number | null;\n  /**\n   * Returns the formatted date in the specified `format` for a given `timestamp`.\n   * @param timestamp - the timestamp to format\n   * @param format - the date/time token\n   */\n  format(this: DateAdapter<T>, timestamp: number, format: TimeUnit): string;\n  /**\n   * Adds the specified `amount` of `unit` to the given `timestamp`.\n   * @param timestamp - the input timestamp\n   * @param amount - the amount to add\n   * @param unit - the unit as string\n   */\n  add(this: DateAdapter<T>, timestamp: number, amount: number, unit: TimeUnit): number;\n  /**\n   * Returns the number of `unit` between the given timestamps.\n   * @param a - the input timestamp (reference)\n   * @param b - the timestamp to subtract\n   * @param unit - the unit as string\n   */\n  diff(this: DateAdapter<T>, a: number, b: number, unit: TimeUnit): number;\n  /**\n   * Returns start of `unit` for the given `timestamp`.\n   * @param timestamp - the input timestamp\n   * @param unit - the unit as string\n   * @param [weekday] - the ISO day of the week with 1 being Monday\n   * and 7 being Sunday (only needed if param *unit* is `isoWeek`).\n   */\n  startOf(this: DateAdapter<T>, timestamp: number, unit: TimeUnit | 'isoWeek', weekday?: number): number;\n  /**\n   * Returns end of `unit` for the given `timestamp`.\n   * @param timestamp - the input timestamp\n   * @param unit - the unit as string\n   */\n  endOf(this: DateAdapter<T>, timestamp: number, unit: TimeUnit | 'isoWeek'): number;\n}\n\nfunction abstract<T = void>(): T {\n  throw new Error('This method is not implemented: Check that a complete date adapter is provided.');\n}\n\n/**\n * Date adapter (current used by the time scale)\n * @namespace Chart._adapters._date\n * @memberof Chart._adapters\n * @private\n */\nclass DateAdapterBase implements DateAdapter {\n\n  /**\n   * Override default date adapter methods.\n   * Accepts type parameter to define options type.\n   * @example\n   * Chart._adapters._date.override<{myAdapterOption: string}>({\n   *   init() {\n   *     console.log(this.options.myAdapterOption);\n   *   }\n   * })\n   */\n  static override<T extends AnyObject = AnyObject>(\n    members: Partial<Omit<DateAdapter<T>, 'options'>>\n  ) {\n    Object.assign(DateAdapterBase.prototype, members);\n  }\n\n  readonly options: AnyObject;\n\n  constructor(options: AnyObject) {\n    this.options = options || {};\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-empty-function\n  init() {}\n\n  formats(): Record<string, string> {\n    return abstract();\n  }\n\n  parse(): number | null {\n    return abstract();\n  }\n\n  format(): string {\n    return abstract();\n  }\n\n  add(): number {\n    return abstract();\n  }\n\n  diff(): number {\n    return abstract();\n  }\n\n  startOf(): number {\n    return abstract();\n  }\n\n  endOf(): number {\n    return abstract();\n  }\n}\n\nexport default {\n  _date: DateAdapterBase\n};\n","import {_lookupByKey, _rlookupByKey} from '../helpers/helpers.collection.js';\nimport {getRelativePosition} from '../helpers/helpers.dom.js';\nimport {_angleBetween, getAngleFromPoint} from '../helpers/helpers.math.js';\nimport {_isPointInArea} from '../helpers/index.js';\n\n/**\n * @typedef { import('./core.controller.js').default } Chart\n * @typedef { import('../types/index.js').ChartEvent } ChartEvent\n * @typedef {{axis?: string, intersect?: boolean, includeInvisible?: boolean}} InteractionOptions\n * @typedef {{datasetIndex: number, index: number, element: import('./core.element.js').default}} InteractionItem\n * @typedef { import('../types/index.js').Point } Point\n */\n\n/**\n * Helper function to do binary search when possible\n * @param {object} metaset - the dataset meta\n * @param {string} axis - the axis mode. x|y|xy|r\n * @param {number} value - the value to find\n * @param {boolean} [intersect] - should the element intersect\n * @returns {{lo:number, hi:number}} indices to search data array between\n */\nfunction binarySearch(metaset, axis, value, intersect) {\n  const {controller, data, _sorted} = metaset;\n  const iScale = controller._cachedMeta.iScale;\n  if (iScale && axis === iScale.axis && axis !== 'r' && _sorted && data.length) {\n    const lookupMethod = iScale._reversePixels ? _rlookupByKey : _lookupByKey;\n    if (!intersect) {\n      return lookupMethod(data, axis, value);\n    } else if (controller._sharedOptions) {\n      // _sharedOptions indicates that each element has equal options -> equal proportions\n      // So we can do a ranged binary search based on the range of first element and\n      // be confident to get the full range of indices that can intersect with the value.\n      const el = data[0];\n      const range = typeof el.getRange === 'function' && el.getRange(axis);\n      if (range) {\n        const start = lookupMethod(data, axis, value - range);\n        const end = lookupMethod(data, axis, value + range);\n        return {lo: start.lo, hi: end.hi};\n      }\n    }\n  }\n  // Default to all elements, when binary search can not be used.\n  return {lo: 0, hi: data.length - 1};\n}\n\n/**\n * Helper function to select candidate elements for interaction\n * @param {Chart} chart - the chart\n * @param {string} axis - the axis mode. x|y|xy|r\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {function} handler - the callback to execute for each visible item\n * @param {boolean} [intersect] - consider intersecting items\n */\nfunction evaluateInteractionItems(chart, axis, position, handler, intersect) {\n  const metasets = chart.getSortedVisibleDatasetMetas();\n  const value = position[axis];\n  for (let i = 0, ilen = metasets.length; i < ilen; ++i) {\n    const {index, data} = metasets[i];\n    const {lo, hi} = binarySearch(metasets[i], axis, value, intersect);\n    for (let j = lo; j <= hi; ++j) {\n      const element = data[j];\n      if (!element.skip) {\n        handler(element, index, j);\n      }\n    }\n  }\n}\n\n/**\n * Get a distance metric function for two points based on the\n * axis mode setting\n * @param {string} axis - the axis mode. x|y|xy|r\n */\nfunction getDistanceMetricForAxis(axis) {\n  const useX = axis.indexOf('x') !== -1;\n  const useY = axis.indexOf('y') !== -1;\n\n  return function(pt1, pt2) {\n    const deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\n    const deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\n    return Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\n  };\n}\n\n/**\n * Helper function to get the items that intersect the event position\n * @param {Chart} chart - the chart\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {string} axis - the axis mode. x|y|xy|r\n * @param {boolean} [useFinalPosition] - use the element's animation target instead of current position\n * @param {boolean} [includeInvisible] - include invisible points that are outside of the chart area\n * @return {InteractionItem[]} the nearest items\n */\nfunction getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) {\n  const items = [];\n\n  if (!includeInvisible && !chart.isPointInArea(position)) {\n    return items;\n  }\n\n  const evaluationFunc = function(element, datasetIndex, index) {\n    if (!includeInvisible && !_isPointInArea(element, chart.chartArea, 0)) {\n      return;\n    }\n    if (element.inRange(position.x, position.y, useFinalPosition)) {\n      items.push({element, datasetIndex, index});\n    }\n  };\n\n  evaluateInteractionItems(chart, axis, position, evaluationFunc, true);\n  return items;\n}\n\n/**\n * Helper function to get the items nearest to the event position for a radial chart\n * @param {Chart} chart - the chart to look at elements from\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {string} axis - the axes along which to measure distance\n * @param {boolean} [useFinalPosition] - use the element's animation target instead of current position\n * @return {InteractionItem[]} the nearest items\n */\nfunction getNearestRadialItems(chart, position, axis, useFinalPosition) {\n  let items = [];\n\n  function evaluationFunc(element, datasetIndex, index) {\n    const {startAngle, endAngle} = element.getProps(['startAngle', 'endAngle'], useFinalPosition);\n    const {angle} = getAngleFromPoint(element, {x: position.x, y: position.y});\n\n    if (_angleBetween(angle, startAngle, endAngle)) {\n      items.push({element, datasetIndex, index});\n    }\n  }\n\n  evaluateInteractionItems(chart, axis, position, evaluationFunc);\n  return items;\n}\n\n/**\n * Helper function to get the items nearest to the event position for a cartesian chart\n * @param {Chart} chart - the chart to look at elements from\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {string} axis - the axes along which to measure distance\n * @param {boolean} [intersect] - if true, only consider items that intersect the position\n * @param {boolean} [useFinalPosition] - use the element's animation target instead of current position\n * @param {boolean} [includeInvisible] - include invisible points that are outside of the chart area\n * @return {InteractionItem[]} the nearest items\n */\nfunction getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n  let items = [];\n  const distanceMetric = getDistanceMetricForAxis(axis);\n  let minDistance = Number.POSITIVE_INFINITY;\n\n  function evaluationFunc(element, datasetIndex, index) {\n    const inRange = element.inRange(position.x, position.y, useFinalPosition);\n    if (intersect && !inRange) {\n      return;\n    }\n\n    const center = element.getCenterPoint(useFinalPosition);\n    const pointInArea = !!includeInvisible || chart.isPointInArea(center);\n    if (!pointInArea && !inRange) {\n      return;\n    }\n\n    const distance = distanceMetric(position, center);\n    if (distance < minDistance) {\n      items = [{element, datasetIndex, index}];\n      minDistance = distance;\n    } else if (distance === minDistance) {\n      // Can have multiple items at the same distance in which case we sort by size\n      items.push({element, datasetIndex, index});\n    }\n  }\n\n  evaluateInteractionItems(chart, axis, position, evaluationFunc);\n  return items;\n}\n\n/**\n * Helper function to get the items nearest to the event position considering all visible items in the chart\n * @param {Chart} chart - the chart to look at elements from\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {string} axis - the axes along which to measure distance\n * @param {boolean} [intersect] - if true, only consider items that intersect the position\n * @param {boolean} [useFinalPosition] - use the element's animation target instead of current position\n * @param {boolean} [includeInvisible] - include invisible points that are outside of the chart area\n * @return {InteractionItem[]} the nearest items\n */\nfunction getNearestItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n  if (!includeInvisible && !chart.isPointInArea(position)) {\n    return [];\n  }\n\n  return axis === 'r' && !intersect\n    ? getNearestRadialItems(chart, position, axis, useFinalPosition)\n    : getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible);\n}\n\n/**\n * Helper function to get the items matching along the given X or Y axis\n * @param {Chart} chart - the chart to look at elements from\n * @param {Point} position - the point to be nearest to, in relative coordinates\n * @param {string} axis - the axis to match\n * @param {boolean} [intersect] - if true, only consider items that intersect the position\n * @param {boolean} [useFinalPosition] - use the element's animation target instead of current position\n * @return {InteractionItem[]} the nearest items\n */\nfunction getAxisItems(chart, position, axis, intersect, useFinalPosition) {\n  const items = [];\n  const rangeMethod = axis === 'x' ? 'inXRange' : 'inYRange';\n  let intersectsItem = false;\n\n  evaluateInteractionItems(chart, axis, position, (element, datasetIndex, index) => {\n    if (element[rangeMethod] && element[rangeMethod](position[axis], useFinalPosition)) {\n      items.push({element, datasetIndex, index});\n      intersectsItem = intersectsItem || element.inRange(position.x, position.y, useFinalPosition);\n    }\n  });\n\n  // If we want to trigger on an intersect and we don't have any items\n  // that intersect the position, return nothing\n  if (intersect && !intersectsItem) {\n    return [];\n  }\n  return items;\n}\n\n/**\n * Contains interaction related functions\n * @namespace Chart.Interaction\n */\nexport default {\n  // Part of the public API to facilitate developers creating their own modes\n  evaluateInteractionItems,\n\n  // Helper function for different modes\n  modes: {\n    /**\n\t\t * Returns items at the same index. If the options.intersect parameter is true, we only return items if we intersect something\n\t\t * If the options.intersect mode is false, we find the nearest item and return the items at the same index as that item\n\t\t * @function Chart.Interaction.modes.index\n\t\t * @since v2.4.0\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    index(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      // Default axis for index mode is 'x' to match old behaviour\n      const axis = options.axis || 'x';\n      const includeInvisible = options.includeInvisible || false;\n      const items = options.intersect\n        ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible)\n        : getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n      const elements = [];\n\n      if (!items.length) {\n        return [];\n      }\n\n      chart.getSortedVisibleDatasetMetas().forEach((meta) => {\n        const index = items[0].index;\n        const element = meta.data[index];\n\n        // don't count items that are skipped (null data)\n        if (element && !element.skip) {\n          elements.push({element, datasetIndex: meta.index, index});\n        }\n      });\n\n      return elements;\n    },\n\n    /**\n\t\t * Returns items in the same dataset. If the options.intersect parameter is true, we only return items if we intersect something\n\t\t * If the options.intersect is false, we find the nearest item and return the items in that dataset\n\t\t * @function Chart.Interaction.modes.dataset\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    dataset(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      const includeInvisible = options.includeInvisible || false;\n      let items = options.intersect\n        ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) :\n        getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n\n      if (items.length > 0) {\n        const datasetIndex = items[0].datasetIndex;\n        const data = chart.getDatasetMeta(datasetIndex).data;\n        items = [];\n        for (let i = 0; i < data.length; ++i) {\n          items.push({element: data[i], datasetIndex, index: i});\n        }\n      }\n\n      return items;\n    },\n\n    /**\n\t\t * Point mode returns all elements that hit test based on the event position\n\t\t * of the event\n\t\t * @function Chart.Interaction.modes.intersect\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    point(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      const includeInvisible = options.includeInvisible || false;\n      return getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible);\n    },\n\n    /**\n\t\t * nearest mode returns the element closest to the point\n\t\t * @function Chart.Interaction.modes.intersect\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    nearest(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      const axis = options.axis || 'xy';\n      const includeInvisible = options.includeInvisible || false;\n      return getNearestItems(chart, position, axis, options.intersect, useFinalPosition, includeInvisible);\n    },\n\n    /**\n\t\t * x mode returns the elements that hit-test at the current x coordinate\n\t\t * @function Chart.Interaction.modes.x\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    x(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      return getAxisItems(chart, position, 'x', options.intersect, useFinalPosition);\n    },\n\n    /**\n\t\t * y mode returns the elements that hit-test at the current y coordinate\n\t\t * @function Chart.Interaction.modes.y\n\t\t * @param {Chart} chart - the chart we are returning items from\n\t\t * @param {Event} e - the event we are find things at\n\t\t * @param {InteractionOptions} options - options to use\n\t\t * @param {boolean} [useFinalPosition] - use final element position (animation target)\n\t\t * @return {InteractionItem[]} - items that are found\n\t\t */\n    y(chart, e, options, useFinalPosition) {\n      const position = getRelativePosition(e, chart);\n      return getAxisItems(chart, position, 'y', options.intersect, useFinalPosition);\n    }\n  }\n};\n","import {defined, each, isObject} from '../helpers/helpers.core.js';\nimport {toPadding} from '../helpers/helpers.options.js';\n\n/**\n * @typedef { import('./core.controller.js').default } Chart\n */\n\nconst STATIC_POSITIONS = ['left', 'top', 'right', 'bottom'];\n\nfunction filterByPosition(array, position) {\n  return array.filter(v => v.pos === position);\n}\n\nfunction filterDynamicPositionByAxis(array, axis) {\n  return array.filter(v => STATIC_POSITIONS.indexOf(v.pos) === -1 && v.box.axis === axis);\n}\n\nfunction sortByWeight(array, reverse) {\n  return array.sort((a, b) => {\n    const v0 = reverse ? b : a;\n    const v1 = reverse ? a : b;\n    return v0.weight === v1.weight ?\n      v0.index - v1.index :\n      v0.weight - v1.weight;\n  });\n}\n\nfunction wrapBoxes(boxes) {\n  const layoutBoxes = [];\n  let i, ilen, box, pos, stack, stackWeight;\n\n  for (i = 0, ilen = (boxes || []).length; i < ilen; ++i) {\n    box = boxes[i];\n    ({position: pos, options: {stack, stackWeight = 1}} = box);\n    layoutBoxes.push({\n      index: i,\n      box,\n      pos,\n      horizontal: box.isHorizontal(),\n      weight: box.weight,\n      stack: stack && (pos + stack),\n      stackWeight\n    });\n  }\n  return layoutBoxes;\n}\n\nfunction buildStacks(layouts) {\n  const stacks = {};\n  for (const wrap of layouts) {\n    const {stack, pos, stackWeight} = wrap;\n    if (!stack || !STATIC_POSITIONS.includes(pos)) {\n      continue;\n    }\n    const _stack = stacks[stack] || (stacks[stack] = {count: 0, placed: 0, weight: 0, size: 0});\n    _stack.count++;\n    _stack.weight += stackWeight;\n  }\n  return stacks;\n}\n\n/**\n * store dimensions used instead of available chartArea in fitBoxes\n **/\nfunction setLayoutDims(layouts, params) {\n  const stacks = buildStacks(layouts);\n  const {vBoxMaxWidth, hBoxMaxHeight} = params;\n  let i, ilen, layout;\n  for (i = 0, ilen = layouts.length; i < ilen; ++i) {\n    layout = layouts[i];\n    const {fullSize} = layout.box;\n    const stack = stacks[layout.stack];\n    const factor = stack && layout.stackWeight / stack.weight;\n    if (layout.horizontal) {\n      layout.width = factor ? factor * vBoxMaxWidth : fullSize && params.availableWidth;\n      layout.height = hBoxMaxHeight;\n    } else {\n      layout.width = vBoxMaxWidth;\n      layout.height = factor ? factor * hBoxMaxHeight : fullSize && params.availableHeight;\n    }\n  }\n  return stacks;\n}\n\nfunction buildLayoutBoxes(boxes) {\n  const layoutBoxes = wrapBoxes(boxes);\n  const fullSize = sortByWeight(layoutBoxes.filter(wrap => wrap.box.fullSize), true);\n  const left = sortByWeight(filterByPosition(layoutBoxes, 'left'), true);\n  const right = sortByWeight(filterByPosition(layoutBoxes, 'right'));\n  const top = sortByWeight(filterByPosition(layoutBoxes, 'top'), true);\n  const bottom = sortByWeight(filterByPosition(layoutBoxes, 'bottom'));\n  const centerHorizontal = filterDynamicPositionByAxis(layoutBoxes, 'x');\n  const centerVertical = filterDynamicPositionByAxis(layoutBoxes, 'y');\n\n  return {\n    fullSize,\n    leftAndTop: left.concat(top),\n    rightAndBottom: right.concat(centerVertical).concat(bottom).concat(centerHorizontal),\n    chartArea: filterByPosition(layoutBoxes, 'chartArea'),\n    vertical: left.concat(right).concat(centerVertical),\n    horizontal: top.concat(bottom).concat(centerHorizontal)\n  };\n}\n\nfunction getCombinedMax(maxPadding, chartArea, a, b) {\n  return Math.max(maxPadding[a], chartArea[a]) + Math.max(maxPadding[b], chartArea[b]);\n}\n\nfunction updateMaxPadding(maxPadding, boxPadding) {\n  maxPadding.top = Math.max(maxPadding.top, boxPadding.top);\n  maxPadding.left = Math.max(maxPadding.left, boxPadding.left);\n  maxPadding.bottom = Math.max(maxPadding.bottom, boxPadding.bottom);\n  maxPadding.right = Math.max(maxPadding.right, boxPadding.right);\n}\n\nfunction updateDims(chartArea, params, layout, stacks) {\n  const {pos, box} = layout;\n  const maxPadding = chartArea.maxPadding;\n\n  // dynamically placed boxes size is not considered\n  if (!isObject(pos)) {\n    if (layout.size) {\n      // this layout was already counted for, lets first reduce old size\n      chartArea[pos] -= layout.size;\n    }\n    const stack = stacks[layout.stack] || {size: 0, count: 1};\n    stack.size = Math.max(stack.size, layout.horizontal ? box.height : box.width);\n    layout.size = stack.size / stack.count;\n    chartArea[pos] += layout.size;\n  }\n\n  if (box.getPadding) {\n    updateMaxPadding(maxPadding, box.getPadding());\n  }\n\n  const newWidth = Math.max(0, params.outerWidth - getCombinedMax(maxPadding, chartArea, 'left', 'right'));\n  const newHeight = Math.max(0, params.outerHeight - getCombinedMax(maxPadding, chartArea, 'top', 'bottom'));\n  const widthChanged = newWidth !== chartArea.w;\n  const heightChanged = newHeight !== chartArea.h;\n  chartArea.w = newWidth;\n  chartArea.h = newHeight;\n\n  // return booleans on the changes per direction\n  return layout.horizontal\n    ? {same: widthChanged, other: heightChanged}\n    : {same: heightChanged, other: widthChanged};\n}\n\nfunction handleMaxPadding(chartArea) {\n  const maxPadding = chartArea.maxPadding;\n\n  function updatePos(pos) {\n    const change = Math.max(maxPadding[pos] - chartArea[pos], 0);\n    chartArea[pos] += change;\n    return change;\n  }\n  chartArea.y += updatePos('top');\n  chartArea.x += updatePos('left');\n  updatePos('right');\n  updatePos('bottom');\n}\n\nfunction getMargins(horizontal, chartArea) {\n  const maxPadding = chartArea.maxPadding;\n\n  function marginForPositions(positions) {\n    const margin = {left: 0, top: 0, right: 0, bottom: 0};\n    positions.forEach((pos) => {\n      margin[pos] = Math.max(chartArea[pos], maxPadding[pos]);\n    });\n    return margin;\n  }\n\n  return horizontal\n    ? marginForPositions(['left', 'right'])\n    : marginForPositions(['top', 'bottom']);\n}\n\nfunction fitBoxes(boxes, chartArea, params, stacks) {\n  const refitBoxes = [];\n  let i, ilen, layout, box, refit, changed;\n\n  for (i = 0, ilen = boxes.length, refit = 0; i < ilen; ++i) {\n    layout = boxes[i];\n    box = layout.box;\n\n    box.update(\n      layout.width || chartArea.w,\n      layout.height || chartArea.h,\n      getMargins(layout.horizontal, chartArea)\n    );\n    const {same, other} = updateDims(chartArea, params, layout, stacks);\n\n    // Dimensions changed and there were non full width boxes before this\n    // -> we have to refit those\n    refit |= same && refitBoxes.length;\n\n    // Chart area changed in the opposite direction\n    changed = changed || other;\n\n    if (!box.fullSize) { // fullSize boxes don't need to be re-fitted in any case\n      refitBoxes.push(layout);\n    }\n  }\n\n  return refit && fitBoxes(refitBoxes, chartArea, params, stacks) || changed;\n}\n\nfunction setBoxDims(box, left, top, width, height) {\n  box.top = top;\n  box.left = left;\n  box.right = left + width;\n  box.bottom = top + height;\n  box.width = width;\n  box.height = height;\n}\n\nfunction placeBoxes(boxes, chartArea, params, stacks) {\n  const userPadding = params.padding;\n  let {x, y} = chartArea;\n\n  for (const layout of boxes) {\n    const box = layout.box;\n    const stack = stacks[layout.stack] || {count: 1, placed: 0, weight: 1};\n    const weight = (layout.stackWeight / stack.weight) || 1;\n    if (layout.horizontal) {\n      const width = chartArea.w * weight;\n      const height = stack.size || box.height;\n      if (defined(stack.start)) {\n        y = stack.start;\n      }\n      if (box.fullSize) {\n        setBoxDims(box, userPadding.left, y, params.outerWidth - userPadding.right - userPadding.left, height);\n      } else {\n        setBoxDims(box, chartArea.left + stack.placed, y, width, height);\n      }\n      stack.start = y;\n      stack.placed += width;\n      y = box.bottom;\n    } else {\n      const height = chartArea.h * weight;\n      const width = stack.size || box.width;\n      if (defined(stack.start)) {\n        x = stack.start;\n      }\n      if (box.fullSize) {\n        setBoxDims(box, x, userPadding.top, width, params.outerHeight - userPadding.bottom - userPadding.top);\n      } else {\n        setBoxDims(box, x, chartArea.top + stack.placed, width, height);\n      }\n      stack.start = x;\n      stack.placed += height;\n      x = box.right;\n    }\n  }\n\n  chartArea.x = x;\n  chartArea.y = y;\n}\n\n/**\n * @interface LayoutItem\n * @typedef {object} LayoutItem\n * @prop {string} position - The position of the item in the chart layout. Possible values are\n * 'left', 'top', 'right', 'bottom', and 'chartArea'\n * @prop {number} weight - The weight used to sort the item. Higher weights are further away from the chart area\n * @prop {boolean} fullSize - if true, and the item is horizontal, then push vertical boxes down\n * @prop {function} isHorizontal - returns true if the layout item is horizontal (ie. top or bottom)\n * @prop {function} update - Takes two parameters: width and height. Returns size of item\n * @prop {function} draw - Draws the element\n * @prop {function} [getPadding] -  Returns an object with padding on the edges\n * @prop {number} width - Width of item. Must be valid after update()\n * @prop {number} height - Height of item. Must be valid after update()\n * @prop {number} left - Left edge of the item. Set by layout system and cannot be used in update\n * @prop {number} top - Top edge of the item. Set by layout system and cannot be used in update\n * @prop {number} right - Right edge of the item. Set by layout system and cannot be used in update\n * @prop {number} bottom - Bottom edge of the item. Set by layout system and cannot be used in update\n */\n\n// The layout service is very self explanatory.  It's responsible for the layout within a chart.\n// Scales, Legends and Plugins all rely on the layout service and can easily register to be placed anywhere they need\n// It is this service's responsibility of carrying out that layout.\nexport default {\n\n  /**\n\t * Register a box to a chart.\n\t * A box is simply a reference to an object that requires layout. eg. Scales, Legend, Title.\n\t * @param {Chart} chart - the chart to use\n\t * @param {LayoutItem} item - the item to add to be laid out\n\t */\n  addBox(chart, item) {\n    if (!chart.boxes) {\n      chart.boxes = [];\n    }\n\n    // initialize item with default values\n    item.fullSize = item.fullSize || false;\n    item.position = item.position || 'top';\n    item.weight = item.weight || 0;\n    // @ts-ignore\n    item._layers = item._layers || function() {\n      return [{\n        z: 0,\n        draw(chartArea) {\n          item.draw(chartArea);\n        }\n      }];\n    };\n\n    chart.boxes.push(item);\n  },\n\n  /**\n\t * Remove a layoutItem from a chart\n\t * @param {Chart} chart - the chart to remove the box from\n\t * @param {LayoutItem} layoutItem - the item to remove from the layout\n\t */\n  removeBox(chart, layoutItem) {\n    const index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\n    if (index !== -1) {\n      chart.boxes.splice(index, 1);\n    }\n  },\n\n  /**\n\t * Sets (or updates) options on the given `item`.\n\t * @param {Chart} chart - the chart in which the item lives (or will be added to)\n\t * @param {LayoutItem} item - the item to configure with the given options\n\t * @param {object} options - the new item options.\n\t */\n  configure(chart, item, options) {\n    item.fullSize = options.fullSize;\n    item.position = options.position;\n    item.weight = options.weight;\n  },\n\n  /**\n\t * Fits boxes of the given chart into the given size by having each box measure itself\n\t * then running a fitting algorithm\n\t * @param {Chart} chart - the chart\n\t * @param {number} width - the width to fit into\n\t * @param {number} height - the height to fit into\n   * @param {number} minPadding - minimum padding required for each side of chart area\n\t */\n  update(chart, width, height, minPadding) {\n    if (!chart) {\n      return;\n    }\n\n    const padding = toPadding(chart.options.layout.padding);\n    const availableWidth = Math.max(width - padding.width, 0);\n    const availableHeight = Math.max(height - padding.height, 0);\n    const boxes = buildLayoutBoxes(chart.boxes);\n    const verticalBoxes = boxes.vertical;\n    const horizontalBoxes = boxes.horizontal;\n\n    // Before any changes are made, notify boxes that an update is about to being\n    // This is used to clear any cached data (e.g. scale limits)\n    each(chart.boxes, box => {\n      if (typeof box.beforeLayout === 'function') {\n        box.beforeLayout();\n      }\n    });\n\n    // Essentially we now have any number of boxes on each of the 4 sides.\n    // Our canvas looks like the following.\n    // The areas L1 and L2 are the left axes. R1 is the right axis, T1 is the top axis and\n    // B1 is the bottom axis\n    // There are also 4 quadrant-like locations (left to right instead of clockwise) reserved for chart overlays\n    // These locations are single-box locations only, when trying to register a chartArea location that is already taken,\n    // an error will be thrown.\n    //\n    // |----------------------------------------------------|\n    // |                  T1 (Full Width)                   |\n    // |----------------------------------------------------|\n    // |    |    |                 T2                  |    |\n    // |    |----|-------------------------------------|----|\n    // |    |    | C1 |                           | C2 |    |\n    // |    |    |----|                           |----|    |\n    // |    |    |                                     |    |\n    // | L1 | L2 |           ChartArea (C0)            | R1 |\n    // |    |    |                                     |    |\n    // |    |    |----|                           |----|    |\n    // |    |    | C3 |                           | C4 |    |\n    // |    |----|-------------------------------------|----|\n    // |    |    |                 B1                  |    |\n    // |----------------------------------------------------|\n    // |                  B2 (Full Width)                   |\n    // |----------------------------------------------------|\n    //\n\n    const visibleVerticalBoxCount = verticalBoxes.reduce((total, wrap) =>\n      wrap.box.options && wrap.box.options.display === false ? total : total + 1, 0) || 1;\n\n    const params = Object.freeze({\n      outerWidth: width,\n      outerHeight: height,\n      padding,\n      availableWidth,\n      availableHeight,\n      vBoxMaxWidth: availableWidth / 2 / visibleVerticalBoxCount,\n      hBoxMaxHeight: availableHeight / 2\n    });\n    const maxPadding = Object.assign({}, padding);\n    updateMaxPadding(maxPadding, toPadding(minPadding));\n    const chartArea = Object.assign({\n      maxPadding,\n      w: availableWidth,\n      h: availableHeight,\n      x: padding.left,\n      y: padding.top\n    }, padding);\n\n    const stacks = setLayoutDims(verticalBoxes.concat(horizontalBoxes), params);\n\n    // First fit the fullSize boxes, to reduce probability of re-fitting.\n    fitBoxes(boxes.fullSize, chartArea, params, stacks);\n\n    // Then fit vertical boxes\n    fitBoxes(verticalBoxes, chartArea, params, stacks);\n\n    // Then fit horizontal boxes\n    if (fitBoxes(horizontalBoxes, chartArea, params, stacks)) {\n      // if the area changed, re-fit vertical boxes\n      fitBoxes(verticalBoxes, chartArea, params, stacks);\n    }\n\n    handleMaxPadding(chartArea);\n\n    // Finally place the boxes to correct coordinates\n    placeBoxes(boxes.leftAndTop, chartArea, params, stacks);\n\n    // Move to opposite side of chart\n    chartArea.x += chartArea.w;\n    chartArea.y += chartArea.h;\n\n    placeBoxes(boxes.rightAndBottom, chartArea, params, stacks);\n\n    chart.chartArea = {\n      left: chartArea.left,\n      top: chartArea.top,\n      right: chartArea.left + chartArea.w,\n      bottom: chartArea.top + chartArea.h,\n      height: chartArea.h,\n      width: chartArea.w,\n    };\n\n    // Finally update boxes in chartArea (radial scale for example)\n    each(boxes.chartArea, (layout) => {\n      const box = layout.box;\n      Object.assign(box, chart.chartArea);\n      box.update(chartArea.w, chartArea.h, {left: 0, top: 0, right: 0, bottom: 0});\n    });\n  }\n};\n","\n/**\n * @typedef { import('../core/core.controller.js').default } Chart\n */\n\n/**\n * Abstract class that allows abstracting platform dependencies away from the chart.\n */\nexport default class BasePlatform {\n  /**\n\t * Called at chart construction time, returns a context2d instance implementing\n\t * the [W3C Canvas 2D Context API standard]{@link https://www.w3.org/TR/2dcontext/}.\n\t * @param {HTMLCanvasElement} canvas - The canvas from which to acquire context (platform specific)\n\t * @param {number} [aspectRatio] - The chart options\n\t */\n  acquireContext(canvas, aspectRatio) {} // eslint-disable-line no-unused-vars\n\n  /**\n\t * Called at chart destruction time, releases any resources associated to the context\n\t * previously returned by the acquireContext() method.\n\t * @param {CanvasRenderingContext2D} context - The context2d instance\n\t * @returns {boolean} true if the method succeeded, else false\n\t */\n  releaseContext(context) { // eslint-disable-line no-unused-vars\n    return false;\n  }\n\n  /**\n\t * Registers the specified listener on the given chart.\n\t * @param {Chart} chart - Chart from which to listen for event\n\t * @param {string} type - The ({@link ChartEvent}) type to listen for\n\t * @param {function} listener - Receives a notification (an object that implements\n\t * the {@link ChartEvent} interface) when an event of the specified type occurs.\n\t */\n  addEventListener(chart, type, listener) {} // eslint-disable-line no-unused-vars\n\n  /**\n\t * Removes the specified listener previously registered with addEventListener.\n\t * @param {Chart} chart - Chart from which to remove the listener\n\t * @param {string} type - The ({@link ChartEvent}) type to remove\n\t * @param {function} listener - The listener function to remove from the event target.\n\t */\n  removeEventListener(chart, type, listener) {} // eslint-disable-line no-unused-vars\n\n  /**\n\t * @returns {number} the current devicePixelRatio of the device this platform is connected to.\n\t */\n  getDevicePixelRatio() {\n    return 1;\n  }\n\n  /**\n\t * Returns the maximum size in pixels of given canvas element.\n\t * @param {HTMLCanvasElement} element\n\t * @param {number} [width] - content width of parent element\n\t * @param {number} [height] - content height of parent element\n\t * @param {number} [aspectRatio] - aspect ratio to maintain\n\t */\n  getMaximumSize(element, width, height, aspectRatio) {\n    width = Math.max(0, width || element.width);\n    height = height || element.height;\n    return {\n      width,\n      height: Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height)\n    };\n  }\n\n  /**\n\t * @param {HTMLCanvasElement} canvas\n\t * @returns {boolean} true if the canvas is attached to the platform, false if not.\n\t */\n  isAttached(canvas) { // eslint-disable-line no-unused-vars\n    return true;\n  }\n\n  /**\n   * Updates config with platform specific requirements\n   * @param {import('../core/core.config.js').default} config\n   */\n  updateConfig(config) { // eslint-disable-line no-unused-vars\n    // no-op\n  }\n}\n","/**\n * Platform fallback implementation (minimal).\n * @see https://github.com/chartjs/Chart.js/pull/4591#issuecomment-319575939\n */\n\nimport BasePlatform from './platform.base.js';\n\n/**\n * Platform class for charts without access to the DOM or to many element properties\n * This platform is used by default for any chart passed an OffscreenCanvas.\n * @extends BasePlatform\n */\nexport default class BasicPlatform extends BasePlatform {\n  acquireContext(item) {\n    // To prevent canvas fingerprinting, some add-ons undefine the getContext\n    // method, for example: https://github.com/kkapsner/CanvasBlocker\n    // https://github.com/chartjs/Chart.js/issues/2807\n    return item && item.getContext && item.getContext('2d') || null;\n  }\n  updateConfig(config) {\n    config.options.animation = false;\n  }\n}\n","/**\n * Chart.Platform implementation for targeting a web browser\n */\n\nimport BasePlatform from './platform.base.js';\nimport {_getParentNode, getRelativePosition, supportsEventListenerOptions, readUsedSize, getMaximumSize} from '../helpers/helpers.dom.js';\nimport {throttled} from '../helpers/helpers.extras.js';\nimport {isNullOrUndef} from '../helpers/helpers.core.js';\n\n/**\n * @typedef { import('../core/core.controller.js').default } Chart\n */\n\nconst EXPANDO_KEY = '$chartjs';\n\n/**\n * DOM event types -> Chart.js event types.\n * Note: only events with different types are mapped.\n * @see https://developer.mozilla.org/en-US/docs/Web/Events\n */\nconst EVENT_TYPES = {\n  touchstart: 'mousedown',\n  touchmove: 'mousemove',\n  touchend: 'mouseup',\n  pointerenter: 'mouseenter',\n  pointerdown: 'mousedown',\n  pointermove: 'mousemove',\n  pointerup: 'mouseup',\n  pointerleave: 'mouseout',\n  pointerout: 'mouseout'\n};\n\nconst isNullOrEmpty = value => value === null || value === '';\n/**\n * Initializes the canvas style and render size without modifying the canvas display size,\n * since responsiveness is handled by the controller.resize() method. The config is used\n * to determine the aspect ratio to apply in case no explicit height has been specified.\n * @param {HTMLCanvasElement} canvas\n * @param {number} [aspectRatio]\n */\nfunction initCanvas(canvas, aspectRatio) {\n  const style = canvas.style;\n\n  // NOTE(SB) canvas.getAttribute('width') !== canvas.width: in the first case it\n  // returns null or '' if no explicit value has been set to the canvas attribute.\n  const renderHeight = canvas.getAttribute('height');\n  const renderWidth = canvas.getAttribute('width');\n\n  // Chart.js modifies some canvas values that we want to restore on destroy\n  canvas[EXPANDO_KEY] = {\n    initial: {\n      height: renderHeight,\n      width: renderWidth,\n      style: {\n        display: style.display,\n        height: style.height,\n        width: style.width\n      }\n    }\n  };\n\n  // Force canvas to display as block to avoid extra space caused by inline\n  // elements, which would interfere with the responsive resize process.\n  // https://github.com/chartjs/Chart.js/issues/2538\n  style.display = style.display || 'block';\n  // Include possible borders in the size\n  style.boxSizing = style.boxSizing || 'border-box';\n\n  if (isNullOrEmpty(renderWidth)) {\n    const displayWidth = readUsedSize(canvas, 'width');\n    if (displayWidth !== undefined) {\n      canvas.width = displayWidth;\n    }\n  }\n\n  if (isNullOrEmpty(renderHeight)) {\n    if (canvas.style.height === '') {\n      // If no explicit render height and style height, let's apply the aspect ratio,\n      // which one can be specified by the user but also by charts as default option\n      // (i.e. options.aspectRatio). If not specified, use canvas aspect ratio of 2.\n      canvas.height = canvas.width / (aspectRatio || 2);\n    } else {\n      const displayHeight = readUsedSize(canvas, 'height');\n      if (displayHeight !== undefined) {\n        canvas.height = displayHeight;\n      }\n    }\n  }\n\n  return canvas;\n}\n\n// Default passive to true as expected by Chrome for 'touchstart' and 'touchend' events.\n// https://github.com/chartjs/Chart.js/issues/4287\nconst eventListenerOptions = supportsEventListenerOptions ? {passive: true} : false;\n\nfunction addListener(node, type, listener) {\n  if (node) {\n    node.addEventListener(type, listener, eventListenerOptions);\n  }\n}\n\nfunction removeListener(chart, type, listener) {\n  if (chart && chart.canvas) {\n    chart.canvas.removeEventListener(type, listener, eventListenerOptions);\n  }\n}\n\nfunction fromNativeEvent(event, chart) {\n  const type = EVENT_TYPES[event.type] || event.type;\n  const {x, y} = getRelativePosition(event, chart);\n  return {\n    type,\n    chart,\n    native: event,\n    x: x !== undefined ? x : null,\n    y: y !== undefined ? y : null,\n  };\n}\n\nfunction nodeListContains(nodeList, canvas) {\n  for (const node of nodeList) {\n    if (node === canvas || node.contains(canvas)) {\n      return true;\n    }\n  }\n}\n\nfunction createAttachObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const observer = new MutationObserver(entries => {\n    let trigger = false;\n    for (const entry of entries) {\n      trigger = trigger || nodeListContains(entry.addedNodes, canvas);\n      trigger = trigger && !nodeListContains(entry.removedNodes, canvas);\n    }\n    if (trigger) {\n      listener();\n    }\n  });\n  observer.observe(document, {childList: true, subtree: true});\n  return observer;\n}\n\nfunction createDetachObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const observer = new MutationObserver(entries => {\n    let trigger = false;\n    for (const entry of entries) {\n      trigger = trigger || nodeListContains(entry.removedNodes, canvas);\n      trigger = trigger && !nodeListContains(entry.addedNodes, canvas);\n    }\n    if (trigger) {\n      listener();\n    }\n  });\n  observer.observe(document, {childList: true, subtree: true});\n  return observer;\n}\n\nconst drpListeningCharts = new Map();\nlet oldDevicePixelRatio = 0;\n\nfunction onWindowResize() {\n  const dpr = window.devicePixelRatio;\n  if (dpr === oldDevicePixelRatio) {\n    return;\n  }\n  oldDevicePixelRatio = dpr;\n  drpListeningCharts.forEach((resize, chart) => {\n    if (chart.currentDevicePixelRatio !== dpr) {\n      resize();\n    }\n  });\n}\n\nfunction listenDevicePixelRatioChanges(chart, resize) {\n  if (!drpListeningCharts.size) {\n    window.addEventListener('resize', onWindowResize);\n  }\n  drpListeningCharts.set(chart, resize);\n}\n\nfunction unlistenDevicePixelRatioChanges(chart) {\n  drpListeningCharts.delete(chart);\n  if (!drpListeningCharts.size) {\n    window.removeEventListener('resize', onWindowResize);\n  }\n}\n\nfunction createResizeObserver(chart, type, listener) {\n  const canvas = chart.canvas;\n  const container = canvas && _getParentNode(canvas);\n  if (!container) {\n    return;\n  }\n  const resize = throttled((width, height) => {\n    const w = container.clientWidth;\n    listener(width, height);\n    if (w < container.clientWidth) {\n      // If the container size shrank during chart resize, let's assume\n      // scrollbar appeared. So we resize again with the scrollbar visible -\n      // effectively making chart smaller and the scrollbar hidden again.\n      // Because we are inside `throttled`, and currently `ticking`, scroll\n      // events are ignored during this whole 2 resize process.\n      // If we assumed wrong and something else happened, we are resizing\n      // twice in a frame (potential performance issue)\n      listener();\n    }\n  }, window);\n\n  // @ts-ignore until https://github.com/microsoft/TypeScript/issues/37861 implemented\n  const observer = new ResizeObserver(entries => {\n    const entry = entries[0];\n    const width = entry.contentRect.width;\n    const height = entry.contentRect.height;\n    // When its container's display is set to 'none' the callback will be called with a\n    // size of (0, 0), which will cause the chart to lose its original height, so skip\n    // resizing in such case.\n    if (width === 0 && height === 0) {\n      return;\n    }\n    resize(width, height);\n  });\n  observer.observe(container);\n  listenDevicePixelRatioChanges(chart, resize);\n\n  return observer;\n}\n\nfunction releaseObserver(chart, type, observer) {\n  if (observer) {\n    observer.disconnect();\n  }\n  if (type === 'resize') {\n    unlistenDevicePixelRatioChanges(chart);\n  }\n}\n\nfunction createProxyAndListen(chart, type, listener) {\n  const canvas = chart.canvas;\n  const proxy = throttled((event) => {\n    // This case can occur if the chart is destroyed while waiting\n    // for the throttled function to occur. We prevent crashes by checking\n    // for a destroyed chart\n    if (chart.ctx !== null) {\n      listener(fromNativeEvent(event, chart));\n    }\n  }, chart);\n\n  addListener(canvas, type, proxy);\n\n  return proxy;\n}\n\n/**\n * Platform class for charts that can access the DOM and global window/document properties\n * @extends BasePlatform\n */\nexport default class DomPlatform extends BasePlatform {\n\n  /**\n\t * @param {HTMLCanvasElement} canvas\n\t * @param {number} [aspectRatio]\n\t * @return {CanvasRenderingContext2D|null}\n\t */\n  acquireContext(canvas, aspectRatio) {\n    // To prevent canvas fingerprinting, some add-ons undefine the getContext\n    // method, for example: https://github.com/kkapsner/CanvasBlocker\n    // https://github.com/chartjs/Chart.js/issues/2807\n    const context = canvas && canvas.getContext && canvas.getContext('2d');\n\n    // `instanceof HTMLCanvasElement/CanvasRenderingContext2D` fails when the canvas is\n    // inside an iframe or when running in a protected environment. We could guess the\n    // types from their toString() value but let's keep things flexible and assume it's\n    // a sufficient condition if the canvas has a context2D which has canvas as `canvas`.\n    // https://github.com/chartjs/Chart.js/issues/3887\n    // https://github.com/chartjs/Chart.js/issues/4102\n    // https://github.com/chartjs/Chart.js/issues/4152\n    if (context && context.canvas === canvas) {\n      // Load platform resources on first chart creation, to make it possible to\n      // import the library before setting platform options.\n      initCanvas(canvas, aspectRatio);\n      return context;\n    }\n\n    return null;\n  }\n\n  /**\n\t * @param {CanvasRenderingContext2D} context\n\t */\n  releaseContext(context) {\n    const canvas = context.canvas;\n    if (!canvas[EXPANDO_KEY]) {\n      return false;\n    }\n\n    const initial = canvas[EXPANDO_KEY].initial;\n    ['height', 'width'].forEach((prop) => {\n      const value = initial[prop];\n      if (isNullOrUndef(value)) {\n        canvas.removeAttribute(prop);\n      } else {\n        canvas.setAttribute(prop, value);\n      }\n    });\n\n    const style = initial.style || {};\n    Object.keys(style).forEach((key) => {\n      canvas.style[key] = style[key];\n    });\n\n    // The canvas render size might have been changed (and thus the state stack discarded),\n    // we can't use save() and restore() to restore the initial state. So make sure that at\n    // least the canvas context is reset to the default state by setting the canvas width.\n    // https://www.w3.org/TR/2011/WD-html5-20110525/the-canvas-element.html\n    // eslint-disable-next-line no-self-assign\n    canvas.width = canvas.width;\n\n    delete canvas[EXPANDO_KEY];\n    return true;\n  }\n\n  /**\n\t *\n\t * @param {Chart} chart\n\t * @param {string} type\n\t * @param {function} listener\n\t */\n  addEventListener(chart, type, listener) {\n    // Can have only one listener per type, so make sure previous is removed\n    this.removeEventListener(chart, type);\n\n    const proxies = chart.$proxies || (chart.$proxies = {});\n    const handlers = {\n      attach: createAttachObserver,\n      detach: createDetachObserver,\n      resize: createResizeObserver\n    };\n    const handler = handlers[type] || createProxyAndListen;\n    proxies[type] = handler(chart, type, listener);\n  }\n\n\n  /**\n\t * @param {Chart} chart\n\t * @param {string} type\n\t */\n  removeEventListener(chart, type) {\n    const proxies = chart.$proxies || (chart.$proxies = {});\n    const proxy = proxies[type];\n\n    if (!proxy) {\n      return;\n    }\n\n    const handlers = {\n      attach: releaseObserver,\n      detach: releaseObserver,\n      resize: releaseObserver\n    };\n    const handler = handlers[type] || removeListener;\n    handler(chart, type, proxy);\n    proxies[type] = undefined;\n  }\n\n  getDevicePixelRatio() {\n    return window.devicePixelRatio;\n  }\n\n  /**\n\t * @param {HTMLCanvasElement} canvas\n\t * @param {number} [width] - content width of parent element\n\t * @param {number} [height] - content height of parent element\n\t * @param {number} [aspectRatio] - aspect ratio to maintain\n\t */\n  getMaximumSize(canvas, width, height, aspectRatio) {\n    return getMaximumSize(canvas, width, height, aspectRatio);\n  }\n\n  /**\n\t * @param {HTMLCanvasElement} canvas\n\t */\n  isAttached(canvas) {\n    const container = canvas && _getParentNode(canvas);\n    return !!(container && container.isConnected);\n  }\n}\n","import {_isDomSupported} from '../helpers/index.js';\nimport BasePlatform from './platform.base.js';\nimport BasicPlatform from './platform.basic.js';\nimport DomPlatform from './platform.dom.js';\n\nexport function _detectPlatform(canvas) {\n  if (!_isDomSupported() || (typeof OffscreenCanvas !== 'undefined' && canvas instanceof OffscreenCanvas)) {\n    return BasicPlatform;\n  }\n  return DomPlatform;\n}\n\nexport {BasePlatform, BasicPlatform, DomPlatform};\n","import type {AnyObject} from '../types/basic.js';\nimport type {Point} from '../types/geometric.js';\nimport type {Animation} from '../types/animation.js';\nimport {isNumber} from '../helpers/helpers.math.js';\n\nexport default class Element<T = AnyObject, O = AnyObject> {\n\n  static defaults = {};\n  static defaultRoutes = undefined;\n\n  x: number;\n  y: number;\n  active = false;\n  options: O;\n  $animations: Record<keyof T, Animation>;\n\n  tooltipPosition(useFinalPosition: boolean): Point {\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return {x, y} as Point;\n  }\n\n  hasValue() {\n    return isNumber(this.x) && isNumber(this.y);\n  }\n\n  /**\n   * Gets the current or final value of each prop. Can return extra properties (whole object).\n   * @param props - properties to get\n   * @param [final] - get the final value (animation target)\n   */\n  getProps<P extends (keyof T)[]>(props: P, final?: boolean): Pick<T, P[number]>;\n  getProps<P extends string>(props: P[], final?: boolean): Partial<Record<P, unknown>>;\n  getProps(props: string[], final?: boolean): Partial<Record<string, unknown>> {\n    const anims = this.$animations;\n    if (!final || !anims) {\n      // let's not create an object, if not needed\n      return this as Record<string, unknown>;\n    }\n    const ret: Record<string, unknown> = {};\n    props.forEach((prop) => {\n      ret[prop] = anims[prop] && anims[prop].active() ? anims[prop]._to : this[prop as string];\n    });\n    return ret;\n  }\n}\n","import {isNullOrUndef, valueOrDefault} from '../helpers/helpers.core.js';\nimport {_factorize} from '../helpers/helpers.math.js';\n\n\n/**\n * @typedef { import('./core.controller.js').default } Chart\n * @typedef {{value:number | string, label?:string, major?:boolean, $context?:any}} Tick\n */\n\n/**\n * Returns a subset of ticks to be plotted to avoid overlapping labels.\n * @param {import('./core.scale.js').default} scale\n * @param {Tick[]} ticks\n * @return {Tick[]}\n * @private\n */\nexport function autoSkip(scale, ticks) {\n  const tickOpts = scale.options.ticks;\n  const determinedMaxTicks = determineMaxTicks(scale);\n  const ticksLimit = Math.min(tickOpts.maxTicksLimit || determinedMaxTicks, determinedMaxTicks);\n  const majorIndices = tickOpts.major.enabled ? getMajorIndices(ticks) : [];\n  const numMajorIndices = majorIndices.length;\n  const first = majorIndices[0];\n  const last = majorIndices[numMajorIndices - 1];\n  const newTicks = [];\n\n  // If there are too many major ticks to display them all\n  if (numMajorIndices > ticksLimit) {\n    skipMajors(ticks, newTicks, majorIndices, numMajorIndices / ticksLimit);\n    return newTicks;\n  }\n\n  const spacing = calculateSpacing(majorIndices, ticks, ticksLimit);\n\n  if (numMajorIndices > 0) {\n    let i, ilen;\n    const avgMajorSpacing = numMajorIndices > 1 ? Math.round((last - first) / (numMajorIndices - 1)) : null;\n    skip(ticks, newTicks, spacing, isNullOrUndef(avgMajorSpacing) ? 0 : first - avgMajorSpacing, first);\n    for (i = 0, ilen = numMajorIndices - 1; i < ilen; i++) {\n      skip(ticks, newTicks, spacing, majorIndices[i], majorIndices[i + 1]);\n    }\n    skip(ticks, newTicks, spacing, last, isNullOrUndef(avgMajorSpacing) ? ticks.length : last + avgMajorSpacing);\n    return newTicks;\n  }\n  skip(ticks, newTicks, spacing);\n  return newTicks;\n}\n\nfunction determineMaxTicks(scale) {\n  const offset = scale.options.offset;\n  const tickLength = scale._tickSize();\n  const maxScale = scale._length / tickLength + (offset ? 0 : 1);\n  const maxChart = scale._maxLength / tickLength;\n  return Math.floor(Math.min(maxScale, maxChart));\n}\n\n/**\n * @param {number[]} majorIndices\n * @param {Tick[]} ticks\n * @param {number} ticksLimit\n */\nfunction calculateSpacing(majorIndices, ticks, ticksLimit) {\n  const evenMajorSpacing = getEvenSpacing(majorIndices);\n  const spacing = ticks.length / ticksLimit;\n\n  // If the major ticks are evenly spaced apart, place the minor ticks\n  // so that they divide the major ticks into even chunks\n  if (!evenMajorSpacing) {\n    return Math.max(spacing, 1);\n  }\n\n  const factors = _factorize(evenMajorSpacing);\n  for (let i = 0, ilen = factors.length - 1; i < ilen; i++) {\n    const factor = factors[i];\n    if (factor > spacing) {\n      return factor;\n    }\n  }\n  return Math.max(spacing, 1);\n}\n\n/**\n * @param {Tick[]} ticks\n */\nfunction getMajorIndices(ticks) {\n  const result = [];\n  let i, ilen;\n  for (i = 0, ilen = ticks.length; i < ilen; i++) {\n    if (ticks[i].major) {\n      result.push(i);\n    }\n  }\n  return result;\n}\n\n/**\n * @param {Tick[]} ticks\n * @param {Tick[]} newTicks\n * @param {number[]} majorIndices\n * @param {number} spacing\n */\nfunction skipMajors(ticks, newTicks, majorIndices, spacing) {\n  let count = 0;\n  let next = majorIndices[0];\n  let i;\n\n  spacing = Math.ceil(spacing);\n  for (i = 0; i < ticks.length; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = majorIndices[count * spacing];\n    }\n  }\n}\n\n/**\n * @param {Tick[]} ticks\n * @param {Tick[]} newTicks\n * @param {number} spacing\n * @param {number} [majorStart]\n * @param {number} [majorEnd]\n */\nfunction skip(ticks, newTicks, spacing, majorStart, majorEnd) {\n  const start = valueOrDefault(majorStart, 0);\n  const end = Math.min(valueOrDefault(majorEnd, ticks.length), ticks.length);\n  let count = 0;\n  let length, i, next;\n\n  spacing = Math.ceil(spacing);\n  if (majorEnd) {\n    length = majorEnd - majorStart;\n    spacing = length / Math.floor(length / spacing);\n  }\n\n  next = start;\n\n  while (next < 0) {\n    count++;\n    next = Math.round(start + count * spacing);\n  }\n\n  for (i = Math.max(start, 0); i < end; i++) {\n    if (i === next) {\n      newTicks.push(ticks[i]);\n      count++;\n      next = Math.round(start + count * spacing);\n    }\n  }\n}\n\n\n/**\n * @param {number[]} arr\n */\nfunction getEvenSpacing(arr) {\n  const len = arr.length;\n  let i, diff;\n\n  if (len < 2) {\n    return false;\n  }\n\n  for (diff = arr[0], i = 1; i < len; ++i) {\n    if (arr[i] - arr[i - 1] !== diff) {\n      return false;\n    }\n  }\n  return diff;\n}\n","import Element from './core.element.js';\nimport {_alignPixel, _measureText, renderText, clipArea, unclipArea} from '../helpers/helpers.canvas.js';\nimport {callback as call, each, finiteOrDefault, isArray, isFinite, isNullOrUndef, isObject, valueOrDefault} from '../helpers/helpers.core.js';\nimport {toDegrees, toRadians, _int16Range, _limitValue, HALF_PI} from '../helpers/helpers.math.js';\nimport {_alignStartEnd, _toLeftRightCenter} from '../helpers/helpers.extras.js';\nimport {createContext, toFont, toPadding, _addGrace} from '../helpers/helpers.options.js';\nimport {autoSkip} from './core.scale.autoskip.js';\n\nconst reverseAlign = (align) => align === 'left' ? 'right' : align === 'right' ? 'left' : align;\nconst offsetFromEdge = (scale, edge, offset) => edge === 'top' || edge === 'left' ? scale[edge] + offset : scale[edge] - offset;\nconst getTicksLimit = (ticksLength, maxTicksLimit) => Math.min(maxTicksLimit || ticksLength, ticksLength);\n\n/**\n * @typedef { import('../types/index.js').Chart } Chart\n * @typedef {{value:number | string, label?:string, major?:boolean, $context?:any}} Tick\n */\n\n/**\n * Returns a new array containing numItems from arr\n * @param {any[]} arr\n * @param {number} numItems\n */\nfunction sample(arr, numItems) {\n  const result = [];\n  const increment = arr.length / numItems;\n  const len = arr.length;\n  let i = 0;\n\n  for (; i < len; i += increment) {\n    result.push(arr[Math.floor(i)]);\n  }\n  return result;\n}\n\n/**\n * @param {Scale} scale\n * @param {number} index\n * @param {boolean} offsetGridLines\n */\nfunction getPixelForGridLine(scale, index, offsetGridLines) {\n  const length = scale.ticks.length;\n  const validIndex = Math.min(index, length - 1);\n  const start = scale._startPixel;\n  const end = scale._endPixel;\n  const epsilon = 1e-6; // 1e-6 is margin in pixels for accumulated error.\n  let lineValue = scale.getPixelForTick(validIndex);\n  let offset;\n\n  if (offsetGridLines) {\n    if (length === 1) {\n      offset = Math.max(lineValue - start, end - lineValue);\n    } else if (index === 0) {\n      offset = (scale.getPixelForTick(1) - lineValue) / 2;\n    } else {\n      offset = (lineValue - scale.getPixelForTick(validIndex - 1)) / 2;\n    }\n    lineValue += validIndex < index ? offset : -offset;\n\n    // Return undefined if the pixel is out of the range\n    if (lineValue < start - epsilon || lineValue > end + epsilon) {\n      return;\n    }\n  }\n  return lineValue;\n}\n\n/**\n * @param {object} caches\n * @param {number} length\n */\nfunction garbageCollect(caches, length) {\n  each(caches, (cache) => {\n    const gc = cache.gc;\n    const gcLen = gc.length / 2;\n    let i;\n    if (gcLen > length) {\n      for (i = 0; i < gcLen; ++i) {\n        delete cache.data[gc[i]];\n      }\n      gc.splice(0, gcLen);\n    }\n  });\n}\n\n/**\n * @param {object} options\n */\nfunction getTickMarkLength(options) {\n  return options.drawTicks ? options.tickLength : 0;\n}\n\n/**\n * @param {object} options\n */\nfunction getTitleHeight(options, fallback) {\n  if (!options.display) {\n    return 0;\n  }\n\n  const font = toFont(options.font, fallback);\n  const padding = toPadding(options.padding);\n  const lines = isArray(options.text) ? options.text.length : 1;\n\n  return (lines * font.lineHeight) + padding.height;\n}\n\nfunction createScaleContext(parent, scale) {\n  return createContext(parent, {\n    scale,\n    type: 'scale'\n  });\n}\n\nfunction createTickContext(parent, index, tick) {\n  return createContext(parent, {\n    tick,\n    index,\n    type: 'tick'\n  });\n}\n\nfunction titleAlign(align, position, reverse) {\n  /** @type {CanvasTextAlign} */\n  let ret = _toLeftRightCenter(align);\n  if ((reverse && position !== 'right') || (!reverse && position === 'right')) {\n    ret = reverseAlign(ret);\n  }\n  return ret;\n}\n\nfunction titleArgs(scale, offset, position, align) {\n  const {top, left, bottom, right, chart} = scale;\n  const {chartArea, scales} = chart;\n  let rotation = 0;\n  let maxWidth, titleX, titleY;\n  const height = bottom - top;\n  const width = right - left;\n\n  if (scale.isHorizontal()) {\n    titleX = _alignStartEnd(align, left, right);\n\n    if (isObject(position)) {\n      const positionAxisID = Object.keys(position)[0];\n      const value = position[positionAxisID];\n      titleY = scales[positionAxisID].getPixelForValue(value) + height - offset;\n    } else if (position === 'center') {\n      titleY = (chartArea.bottom + chartArea.top) / 2 + height - offset;\n    } else {\n      titleY = offsetFromEdge(scale, position, offset);\n    }\n    maxWidth = right - left;\n  } else {\n    if (isObject(position)) {\n      const positionAxisID = Object.keys(position)[0];\n      const value = position[positionAxisID];\n      titleX = scales[positionAxisID].getPixelForValue(value) - width + offset;\n    } else if (position === 'center') {\n      titleX = (chartArea.left + chartArea.right) / 2 - width + offset;\n    } else {\n      titleX = offsetFromEdge(scale, position, offset);\n    }\n    titleY = _alignStartEnd(align, bottom, top);\n    rotation = position === 'left' ? -HALF_PI : HALF_PI;\n  }\n  return {titleX, titleY, maxWidth, rotation};\n}\n\nexport default class Scale extends Element {\n\n  // eslint-disable-next-line max-statements\n  constructor(cfg) {\n    super();\n\n    /** @type {string} */\n    this.id = cfg.id;\n    /** @type {string} */\n    this.type = cfg.type;\n    /** @type {any} */\n    this.options = undefined;\n    /** @type {CanvasRenderingContext2D} */\n    this.ctx = cfg.ctx;\n    /** @type {Chart} */\n    this.chart = cfg.chart;\n\n    // implements box\n    /** @type {number} */\n    this.top = undefined;\n    /** @type {number} */\n    this.bottom = undefined;\n    /** @type {number} */\n    this.left = undefined;\n    /** @type {number} */\n    this.right = undefined;\n    /** @type {number} */\n    this.width = undefined;\n    /** @type {number} */\n    this.height = undefined;\n    this._margins = {\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    };\n    /** @type {number} */\n    this.maxWidth = undefined;\n    /** @type {number} */\n    this.maxHeight = undefined;\n    /** @type {number} */\n    this.paddingTop = undefined;\n    /** @type {number} */\n    this.paddingBottom = undefined;\n    /** @type {number} */\n    this.paddingLeft = undefined;\n    /** @type {number} */\n    this.paddingRight = undefined;\n\n    // scale-specific properties\n    /** @type {string=} */\n    this.axis = undefined;\n    /** @type {number=} */\n    this.labelRotation = undefined;\n    this.min = undefined;\n    this.max = undefined;\n    this._range = undefined;\n    /** @type {Tick[]} */\n    this.ticks = [];\n    /** @type {object[]|null} */\n    this._gridLineItems = null;\n    /** @type {object[]|null} */\n    this._labelItems = null;\n    /** @type {object|null} */\n    this._labelSizes = null;\n    this._length = 0;\n    this._maxLength = 0;\n    this._longestTextCache = {};\n    /** @type {number} */\n    this._startPixel = undefined;\n    /** @type {number} */\n    this._endPixel = undefined;\n    this._reversePixels = false;\n    this._userMax = undefined;\n    this._userMin = undefined;\n    this._suggestedMax = undefined;\n    this._suggestedMin = undefined;\n    this._ticksLength = 0;\n    this._borderValue = 0;\n    this._cache = {};\n    this._dataLimitsCached = false;\n    this.$context = undefined;\n  }\n\n  /**\n\t * @param {any} options\n\t * @since 3.0\n\t */\n  init(options) {\n    this.options = options.setContext(this.getContext());\n\n    this.axis = options.axis;\n\n    // parse min/max value, so we can properly determine min/max for other scales\n    this._userMin = this.parse(options.min);\n    this._userMax = this.parse(options.max);\n    this._suggestedMin = this.parse(options.suggestedMin);\n    this._suggestedMax = this.parse(options.suggestedMax);\n  }\n\n  /**\n\t * Parse a supported input value to internal representation.\n\t * @param {*} raw\n\t * @param {number} [index]\n\t * @since 3.0\n\t */\n  parse(raw, index) { // eslint-disable-line no-unused-vars\n    return raw;\n  }\n\n  /**\n\t * @return {{min: number, max: number, minDefined: boolean, maxDefined: boolean}}\n\t * @protected\n\t * @since 3.0\n\t */\n  getUserBounds() {\n    let {_userMin, _userMax, _suggestedMin, _suggestedMax} = this;\n    _userMin = finiteOrDefault(_userMin, Number.POSITIVE_INFINITY);\n    _userMax = finiteOrDefault(_userMax, Number.NEGATIVE_INFINITY);\n    _suggestedMin = finiteOrDefault(_suggestedMin, Number.POSITIVE_INFINITY);\n    _suggestedMax = finiteOrDefault(_suggestedMax, Number.NEGATIVE_INFINITY);\n    return {\n      min: finiteOrDefault(_userMin, _suggestedMin),\n      max: finiteOrDefault(_userMax, _suggestedMax),\n      minDefined: isFinite(_userMin),\n      maxDefined: isFinite(_userMax)\n    };\n  }\n\n  /**\n\t * @param {boolean} canStack\n\t * @return {{min: number, max: number}}\n\t * @protected\n\t * @since 3.0\n\t */\n  getMinMax(canStack) {\n    let {min, max, minDefined, maxDefined} = this.getUserBounds();\n    let range;\n\n    if (minDefined && maxDefined) {\n      return {min, max};\n    }\n\n    const metas = this.getMatchingVisibleMetas();\n    for (let i = 0, ilen = metas.length; i < ilen; ++i) {\n      range = metas[i].controller.getMinMax(this, canStack);\n      if (!minDefined) {\n        min = Math.min(min, range.min);\n      }\n      if (!maxDefined) {\n        max = Math.max(max, range.max);\n      }\n    }\n\n    // Make sure min <= max when only min or max is defined by user and the data is outside that range\n    min = maxDefined && min > max ? max : min;\n    max = minDefined && min > max ? min : max;\n\n    return {\n      min: finiteOrDefault(min, finiteOrDefault(max, min)),\n      max: finiteOrDefault(max, finiteOrDefault(min, max))\n    };\n  }\n\n  /**\n\t * Get the padding needed for the scale\n\t * @return {{top: number, left: number, bottom: number, right: number}} the necessary padding\n\t * @private\n\t */\n  getPadding() {\n    return {\n      left: this.paddingLeft || 0,\n      top: this.paddingTop || 0,\n      right: this.paddingRight || 0,\n      bottom: this.paddingBottom || 0\n    };\n  }\n\n  /**\n\t * Returns the scale tick objects\n\t * @return {Tick[]}\n\t * @since 2.7\n\t */\n  getTicks() {\n    return this.ticks;\n  }\n\n  /**\n\t * @return {string[]}\n\t */\n  getLabels() {\n    const data = this.chart.data;\n    return this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels || [];\n  }\n\n  /**\n   * @return {import('../types.js').LabelItem[]}\n   */\n  getLabelItems(chartArea = this.chart.chartArea) {\n    const items = this._labelItems || (this._labelItems = this._computeLabelItems(chartArea));\n    return items;\n  }\n\n  // When a new layout is created, reset the data limits cache\n  beforeLayout() {\n    this._cache = {};\n    this._dataLimitsCached = false;\n  }\n\n  // These methods are ordered by lifecycle. Utilities then follow.\n  // Any function defined here is inherited by all scale types.\n  // Any function can be extended by the scale type\n\n  beforeUpdate() {\n    call(this.options.beforeUpdate, [this]);\n  }\n\n  /**\n\t * @param {number} maxWidth - the max width in pixels\n\t * @param {number} maxHeight - the max height in pixels\n\t * @param {{top: number, left: number, bottom: number, right: number}} margins - the space between the edge of the other scales and edge of the chart\n\t *   This space comes from two sources:\n\t *     - padding - space that's required to show the labels at the edges of the scale\n\t *     - thickness of scales or legends in another orientation\n\t */\n  update(maxWidth, maxHeight, margins) {\n    const {beginAtZero, grace, ticks: tickOpts} = this.options;\n    const sampleSize = tickOpts.sampleSize;\n\n    // Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)\n    this.beforeUpdate();\n\n    // Absorb the master measurements\n    this.maxWidth = maxWidth;\n    this.maxHeight = maxHeight;\n    this._margins = margins = Object.assign({\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0\n    }, margins);\n\n    this.ticks = null;\n    this._labelSizes = null;\n    this._gridLineItems = null;\n    this._labelItems = null;\n\n    // Dimensions\n    this.beforeSetDimensions();\n    this.setDimensions();\n    this.afterSetDimensions();\n\n    this._maxLength = this.isHorizontal()\n      ? this.width + margins.left + margins.right\n      : this.height + margins.top + margins.bottom;\n\n    // Data min/max\n    if (!this._dataLimitsCached) {\n      this.beforeDataLimits();\n      this.determineDataLimits();\n      this.afterDataLimits();\n      this._range = _addGrace(this, grace, beginAtZero);\n      this._dataLimitsCached = true;\n    }\n\n    this.beforeBuildTicks();\n\n    this.ticks = this.buildTicks() || [];\n\n    // Allow modification of ticks in callback.\n    this.afterBuildTicks();\n\n    // Compute tick rotation and fit using a sampled subset of labels\n    // We generally don't need to compute the size of every single label for determining scale size\n    const samplingEnabled = sampleSize < this.ticks.length;\n    this._convertTicksToLabels(samplingEnabled ? sample(this.ticks, sampleSize) : this.ticks);\n\n    // configure is called twice, once here, once from core.controller.updateLayout.\n    // Here we haven't been positioned yet, but dimensions are correct.\n    // Variables set in configure are needed for calculateLabelRotation, and\n    // it's ok that coordinates are not correct there, only dimensions matter.\n    this.configure();\n\n    // Tick Rotation\n    this.beforeCalculateLabelRotation();\n    this.calculateLabelRotation(); // Preconditions: number of ticks and sizes of largest labels must be calculated beforehand\n    this.afterCalculateLabelRotation();\n\n    // Auto-skip\n    if (tickOpts.display && (tickOpts.autoSkip || tickOpts.source === 'auto')) {\n      this.ticks = autoSkip(this, this.ticks);\n      this._labelSizes = null;\n      this.afterAutoSkip();\n    }\n\n    if (samplingEnabled) {\n      // Generate labels using all non-skipped ticks\n      this._convertTicksToLabels(this.ticks);\n    }\n\n    this.beforeFit();\n    this.fit(); // Preconditions: label rotation and label sizes must be calculated beforehand\n    this.afterFit();\n\n    // IMPORTANT: after this point, we consider that `this.ticks` will NEVER change!\n\n    this.afterUpdate();\n  }\n\n  /**\n\t * @protected\n\t */\n  configure() {\n    let reversePixels = this.options.reverse;\n    let startPixel, endPixel;\n\n    if (this.isHorizontal()) {\n      startPixel = this.left;\n      endPixel = this.right;\n    } else {\n      startPixel = this.top;\n      endPixel = this.bottom;\n      // by default vertical scales are from bottom to top, so pixels are reversed\n      reversePixels = !reversePixels;\n    }\n    this._startPixel = startPixel;\n    this._endPixel = endPixel;\n    this._reversePixels = reversePixels;\n    this._length = endPixel - startPixel;\n    this._alignToPixels = this.options.alignToPixels;\n  }\n\n  afterUpdate() {\n    call(this.options.afterUpdate, [this]);\n  }\n\n  //\n\n  beforeSetDimensions() {\n    call(this.options.beforeSetDimensions, [this]);\n  }\n  setDimensions() {\n    // Set the unconstrained dimension before label rotation\n    if (this.isHorizontal()) {\n      // Reset position before calculating rotation\n      this.width = this.maxWidth;\n      this.left = 0;\n      this.right = this.width;\n    } else {\n      this.height = this.maxHeight;\n\n      // Reset position before calculating rotation\n      this.top = 0;\n      this.bottom = this.height;\n    }\n\n    // Reset padding\n    this.paddingLeft = 0;\n    this.paddingTop = 0;\n    this.paddingRight = 0;\n    this.paddingBottom = 0;\n  }\n  afterSetDimensions() {\n    call(this.options.afterSetDimensions, [this]);\n  }\n\n  _callHooks(name) {\n    this.chart.notifyPlugins(name, this.getContext());\n    call(this.options[name], [this]);\n  }\n\n  // Data limits\n  beforeDataLimits() {\n    this._callHooks('beforeDataLimits');\n  }\n  determineDataLimits() {}\n  afterDataLimits() {\n    this._callHooks('afterDataLimits');\n  }\n\n  //\n  beforeBuildTicks() {\n    this._callHooks('beforeBuildTicks');\n  }\n  /**\n\t * @return {object[]} the ticks\n\t */\n  buildTicks() {\n    return [];\n  }\n  afterBuildTicks() {\n    this._callHooks('afterBuildTicks');\n  }\n\n  beforeTickToLabelConversion() {\n    call(this.options.beforeTickToLabelConversion, [this]);\n  }\n  /**\n\t * Convert ticks to label strings\n\t * @param {Tick[]} ticks\n\t */\n  generateTickLabels(ticks) {\n    const tickOpts = this.options.ticks;\n    let i, ilen, tick;\n    for (i = 0, ilen = ticks.length; i < ilen; i++) {\n      tick = ticks[i];\n      tick.label = call(tickOpts.callback, [tick.value, i, ticks], this);\n    }\n  }\n  afterTickToLabelConversion() {\n    call(this.options.afterTickToLabelConversion, [this]);\n  }\n\n  //\n\n  beforeCalculateLabelRotation() {\n    call(this.options.beforeCalculateLabelRotation, [this]);\n  }\n  calculateLabelRotation() {\n    const options = this.options;\n    const tickOpts = options.ticks;\n    const numTicks = getTicksLimit(this.ticks.length, options.ticks.maxTicksLimit);\n    const minRotation = tickOpts.minRotation || 0;\n    const maxRotation = tickOpts.maxRotation;\n    let labelRotation = minRotation;\n    let tickWidth, maxHeight, maxLabelDiagonal;\n\n    if (!this._isVisible() || !tickOpts.display || minRotation >= maxRotation || numTicks <= 1 || !this.isHorizontal()) {\n      this.labelRotation = minRotation;\n      return;\n    }\n\n    const labelSizes = this._getLabelSizes();\n    const maxLabelWidth = labelSizes.widest.width;\n    const maxLabelHeight = labelSizes.highest.height;\n\n    // Estimate the width of each grid based on the canvas width, the maximum\n    // label width and the number of tick intervals\n    const maxWidth = _limitValue(this.chart.width - maxLabelWidth, 0, this.maxWidth);\n    tickWidth = options.offset ? this.maxWidth / numTicks : maxWidth / (numTicks - 1);\n\n    // Allow 3 pixels x2 padding either side for label readability\n    if (maxLabelWidth + 6 > tickWidth) {\n      tickWidth = maxWidth / (numTicks - (options.offset ? 0.5 : 1));\n      maxHeight = this.maxHeight - getTickMarkLength(options.grid)\n\t\t\t\t- tickOpts.padding - getTitleHeight(options.title, this.chart.options.font);\n      maxLabelDiagonal = Math.sqrt(maxLabelWidth * maxLabelWidth + maxLabelHeight * maxLabelHeight);\n      labelRotation = toDegrees(Math.min(\n        Math.asin(_limitValue((labelSizes.highest.height + 6) / tickWidth, -1, 1)),\n        Math.asin(_limitValue(maxHeight / maxLabelDiagonal, -1, 1)) - Math.asin(_limitValue(maxLabelHeight / maxLabelDiagonal, -1, 1))\n      ));\n      labelRotation = Math.max(minRotation, Math.min(maxRotation, labelRotation));\n    }\n\n    this.labelRotation = labelRotation;\n  }\n  afterCalculateLabelRotation() {\n    call(this.options.afterCalculateLabelRotation, [this]);\n  }\n  afterAutoSkip() {}\n\n  //\n\n  beforeFit() {\n    call(this.options.beforeFit, [this]);\n  }\n  fit() {\n    // Reset\n    const minSize = {\n      width: 0,\n      height: 0\n    };\n\n    const {chart, options: {ticks: tickOpts, title: titleOpts, grid: gridOpts}} = this;\n    const display = this._isVisible();\n    const isHorizontal = this.isHorizontal();\n\n    if (display) {\n      const titleHeight = getTitleHeight(titleOpts, chart.options.font);\n      if (isHorizontal) {\n        minSize.width = this.maxWidth;\n        minSize.height = getTickMarkLength(gridOpts) + titleHeight;\n      } else {\n        minSize.height = this.maxHeight; // fill all the height\n        minSize.width = getTickMarkLength(gridOpts) + titleHeight;\n      }\n\n      // Don't bother fitting the ticks if we are not showing the labels\n      if (tickOpts.display && this.ticks.length) {\n        const {first, last, widest, highest} = this._getLabelSizes();\n        const tickPadding = tickOpts.padding * 2;\n        const angleRadians = toRadians(this.labelRotation);\n        const cos = Math.cos(angleRadians);\n        const sin = Math.sin(angleRadians);\n\n        if (isHorizontal) {\n        // A horizontal axis is more constrained by the height.\n          const labelHeight = tickOpts.mirror ? 0 : sin * widest.width + cos * highest.height;\n          minSize.height = Math.min(this.maxHeight, minSize.height + labelHeight + tickPadding);\n        } else {\n        // A vertical axis is more constrained by the width. Labels are the\n        // dominant factor here, so get that length first and account for padding\n          const labelWidth = tickOpts.mirror ? 0 : cos * widest.width + sin * highest.height;\n\n          minSize.width = Math.min(this.maxWidth, minSize.width + labelWidth + tickPadding);\n        }\n        this._calculatePadding(first, last, sin, cos);\n      }\n    }\n\n    this._handleMargins();\n\n    if (isHorizontal) {\n      this.width = this._length = chart.width - this._margins.left - this._margins.right;\n      this.height = minSize.height;\n    } else {\n      this.width = minSize.width;\n      this.height = this._length = chart.height - this._margins.top - this._margins.bottom;\n    }\n  }\n\n  _calculatePadding(first, last, sin, cos) {\n    const {ticks: {align, padding}, position} = this.options;\n    const isRotated = this.labelRotation !== 0;\n    const labelsBelowTicks = position !== 'top' && this.axis === 'x';\n\n    if (this.isHorizontal()) {\n      const offsetLeft = this.getPixelForTick(0) - this.left;\n      const offsetRight = this.right - this.getPixelForTick(this.ticks.length - 1);\n      let paddingLeft = 0;\n      let paddingRight = 0;\n\n      // Ensure that our ticks are always inside the canvas. When rotated, ticks are right aligned\n      // which means that the right padding is dominated by the font height\n      if (isRotated) {\n        if (labelsBelowTicks) {\n          paddingLeft = cos * first.width;\n          paddingRight = sin * last.height;\n        } else {\n          paddingLeft = sin * first.height;\n          paddingRight = cos * last.width;\n        }\n      } else if (align === 'start') {\n        paddingRight = last.width;\n      } else if (align === 'end') {\n        paddingLeft = first.width;\n      } else if (align !== 'inner') {\n        paddingLeft = first.width / 2;\n        paddingRight = last.width / 2;\n      }\n\n      // Adjust padding taking into account changes in offsets\n      this.paddingLeft = Math.max((paddingLeft - offsetLeft + padding) * this.width / (this.width - offsetLeft), 0);\n      this.paddingRight = Math.max((paddingRight - offsetRight + padding) * this.width / (this.width - offsetRight), 0);\n    } else {\n      let paddingTop = last.height / 2;\n      let paddingBottom = first.height / 2;\n\n      if (align === 'start') {\n        paddingTop = 0;\n        paddingBottom = first.height;\n      } else if (align === 'end') {\n        paddingTop = last.height;\n        paddingBottom = 0;\n      }\n\n      this.paddingTop = paddingTop + padding;\n      this.paddingBottom = paddingBottom + padding;\n    }\n  }\n\n  /**\n\t * Handle margins and padding interactions\n\t * @private\n\t */\n  _handleMargins() {\n    if (this._margins) {\n      this._margins.left = Math.max(this.paddingLeft, this._margins.left);\n      this._margins.top = Math.max(this.paddingTop, this._margins.top);\n      this._margins.right = Math.max(this.paddingRight, this._margins.right);\n      this._margins.bottom = Math.max(this.paddingBottom, this._margins.bottom);\n    }\n  }\n\n  afterFit() {\n    call(this.options.afterFit, [this]);\n  }\n\n  // Shared Methods\n  /**\n\t * @return {boolean}\n\t */\n  isHorizontal() {\n    const {axis, position} = this.options;\n    return position === 'top' || position === 'bottom' || axis === 'x';\n  }\n  /**\n\t * @return {boolean}\n\t */\n  isFullSize() {\n    return this.options.fullSize;\n  }\n\n  /**\n\t * @param {Tick[]} ticks\n\t * @private\n\t */\n  _convertTicksToLabels(ticks) {\n    this.beforeTickToLabelConversion();\n\n    this.generateTickLabels(ticks);\n\n    // Ticks should be skipped when callback returns null or undef, so lets remove those.\n    let i, ilen;\n    for (i = 0, ilen = ticks.length; i < ilen; i++) {\n      if (isNullOrUndef(ticks[i].label)) {\n        ticks.splice(i, 1);\n        ilen--;\n        i--;\n      }\n    }\n\n    this.afterTickToLabelConversion();\n  }\n\n  /**\n\t * @return {{ first: object, last: object, widest: object, highest: object, widths: Array, heights: array }}\n\t * @private\n\t */\n  _getLabelSizes() {\n    let labelSizes = this._labelSizes;\n\n    if (!labelSizes) {\n      const sampleSize = this.options.ticks.sampleSize;\n      let ticks = this.ticks;\n      if (sampleSize < ticks.length) {\n        ticks = sample(ticks, sampleSize);\n      }\n\n      this._labelSizes = labelSizes = this._computeLabelSizes(ticks, ticks.length, this.options.ticks.maxTicksLimit);\n    }\n\n    return labelSizes;\n  }\n\n  /**\n\t * Returns {width, height, offset} objects for the first, last, widest, highest tick\n\t * labels where offset indicates the anchor point offset from the top in pixels.\n\t * @return {{ first: object, last: object, widest: object, highest: object, widths: Array, heights: array }}\n\t * @private\n\t */\n  _computeLabelSizes(ticks, length, maxTicksLimit) {\n    const {ctx, _longestTextCache: caches} = this;\n    const widths = [];\n    const heights = [];\n    const increment = Math.floor(length / getTicksLimit(length, maxTicksLimit));\n    let widestLabelSize = 0;\n    let highestLabelSize = 0;\n    let i, j, jlen, label, tickFont, fontString, cache, lineHeight, width, height, nestedLabel;\n\n    for (i = 0; i < length; i += increment) {\n      label = ticks[i].label;\n      tickFont = this._resolveTickFontOptions(i);\n      ctx.font = fontString = tickFont.string;\n      cache = caches[fontString] = caches[fontString] || {data: {}, gc: []};\n      lineHeight = tickFont.lineHeight;\n      width = height = 0;\n      // Undefined labels and arrays should not be measured\n      if (!isNullOrUndef(label) && !isArray(label)) {\n        width = _measureText(ctx, cache.data, cache.gc, width, label);\n        height = lineHeight;\n      } else if (isArray(label)) {\n        // if it is an array let's measure each element\n        for (j = 0, jlen = label.length; j < jlen; ++j) {\n          nestedLabel = /** @type {string} */ (label[j]);\n          // Undefined labels and arrays should not be measured\n          if (!isNullOrUndef(nestedLabel) && !isArray(nestedLabel)) {\n            width = _measureText(ctx, cache.data, cache.gc, width, nestedLabel);\n            height += lineHeight;\n          }\n        }\n      }\n      widths.push(width);\n      heights.push(height);\n      widestLabelSize = Math.max(width, widestLabelSize);\n      highestLabelSize = Math.max(height, highestLabelSize);\n    }\n    garbageCollect(caches, length);\n\n    const widest = widths.indexOf(widestLabelSize);\n    const highest = heights.indexOf(highestLabelSize);\n\n    const valueAt = (idx) => ({width: widths[idx] || 0, height: heights[idx] || 0});\n\n    return {\n      first: valueAt(0),\n      last: valueAt(length - 1),\n      widest: valueAt(widest),\n      highest: valueAt(highest),\n      widths,\n      heights,\n    };\n  }\n\n  /**\n\t * Used to get the label to display in the tooltip for the given value\n\t * @param {*} value\n\t * @return {string}\n\t */\n  getLabelForValue(value) {\n    return value;\n  }\n\n  /**\n\t * Returns the location of the given data point. Value can either be an index or a numerical value\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @param {*} value\n\t * @param {number} [index]\n\t * @return {number}\n\t */\n  getPixelForValue(value, index) { // eslint-disable-line no-unused-vars\n    return NaN;\n  }\n\n  /**\n\t * Used to get the data value from a given pixel. This is the inverse of getPixelForValue\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @param {number} pixel\n\t * @return {*}\n\t */\n  getValueForPixel(pixel) {} // eslint-disable-line no-unused-vars\n\n  /**\n\t * Returns the location of the tick at the given index\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @param {number} index\n\t * @return {number}\n\t */\n  getPixelForTick(index) {\n    const ticks = this.ticks;\n    if (index < 0 || index > ticks.length - 1) {\n      return null;\n    }\n    return this.getPixelForValue(ticks[index].value);\n  }\n\n  /**\n\t * Utility for getting the pixel location of a percentage of scale\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @param {number} decimal\n\t * @return {number}\n\t */\n  getPixelForDecimal(decimal) {\n    if (this._reversePixels) {\n      decimal = 1 - decimal;\n    }\n\n    const pixel = this._startPixel + decimal * this._length;\n    return _int16Range(this._alignToPixels ? _alignPixel(this.chart, pixel, 0) : pixel);\n  }\n\n  /**\n\t * @param {number} pixel\n\t * @return {number}\n\t */\n  getDecimalForPixel(pixel) {\n    const decimal = (pixel - this._startPixel) / this._length;\n    return this._reversePixels ? 1 - decimal : decimal;\n  }\n\n  /**\n\t * Returns the pixel for the minimum chart value\n\t * The coordinate (0, 0) is at the upper-left corner of the canvas\n\t * @return {number}\n\t */\n  getBasePixel() {\n    return this.getPixelForValue(this.getBaseValue());\n  }\n\n  /**\n\t * @return {number}\n\t */\n  getBaseValue() {\n    const {min, max} = this;\n\n    return min < 0 && max < 0 ? max :\n      min > 0 && max > 0 ? min :\n      0;\n  }\n\n  /**\n\t * @protected\n\t */\n  getContext(index) {\n    const ticks = this.ticks || [];\n\n    if (index >= 0 && index < ticks.length) {\n      const tick = ticks[index];\n      return tick.$context ||\n\t\t\t\t(tick.$context = createTickContext(this.getContext(), index, tick));\n    }\n    return this.$context ||\n\t\t\t(this.$context = createScaleContext(this.chart.getContext(), this));\n  }\n\n  /**\n\t * @return {number}\n\t * @private\n\t */\n  _tickSize() {\n    const optionTicks = this.options.ticks;\n\n    // Calculate space needed by label in axis direction.\n    const rot = toRadians(this.labelRotation);\n    const cos = Math.abs(Math.cos(rot));\n    const sin = Math.abs(Math.sin(rot));\n\n    const labelSizes = this._getLabelSizes();\n    const padding = optionTicks.autoSkipPadding || 0;\n    const w = labelSizes ? labelSizes.widest.width + padding : 0;\n    const h = labelSizes ? labelSizes.highest.height + padding : 0;\n\n    // Calculate space needed for 1 tick in axis direction.\n    return this.isHorizontal()\n      ? h * cos > w * sin ? w / cos : h / sin\n      : h * sin < w * cos ? h / cos : w / sin;\n  }\n\n  /**\n\t * @return {boolean}\n\t * @private\n\t */\n  _isVisible() {\n    const display = this.options.display;\n\n    if (display !== 'auto') {\n      return !!display;\n    }\n\n    return this.getMatchingVisibleMetas().length > 0;\n  }\n\n  /**\n\t * @private\n\t */\n  _computeGridLineItems(chartArea) {\n    const axis = this.axis;\n    const chart = this.chart;\n    const options = this.options;\n    const {grid, position, border} = options;\n    const offset = grid.offset;\n    const isHorizontal = this.isHorizontal();\n    const ticks = this.ticks;\n    const ticksLength = ticks.length + (offset ? 1 : 0);\n    const tl = getTickMarkLength(grid);\n    const items = [];\n\n    const borderOpts = border.setContext(this.getContext());\n    const axisWidth = borderOpts.display ? borderOpts.width : 0;\n    const axisHalfWidth = axisWidth / 2;\n    const alignBorderValue = function(pixel) {\n      return _alignPixel(chart, pixel, axisWidth);\n    };\n    let borderValue, i, lineValue, alignedLineValue;\n    let tx1, ty1, tx2, ty2, x1, y1, x2, y2;\n\n    if (position === 'top') {\n      borderValue = alignBorderValue(this.bottom);\n      ty1 = this.bottom - tl;\n      ty2 = borderValue - axisHalfWidth;\n      y1 = alignBorderValue(chartArea.top) + axisHalfWidth;\n      y2 = chartArea.bottom;\n    } else if (position === 'bottom') {\n      borderValue = alignBorderValue(this.top);\n      y1 = chartArea.top;\n      y2 = alignBorderValue(chartArea.bottom) - axisHalfWidth;\n      ty1 = borderValue + axisHalfWidth;\n      ty2 = this.top + tl;\n    } else if (position === 'left') {\n      borderValue = alignBorderValue(this.right);\n      tx1 = this.right - tl;\n      tx2 = borderValue - axisHalfWidth;\n      x1 = alignBorderValue(chartArea.left) + axisHalfWidth;\n      x2 = chartArea.right;\n    } else if (position === 'right') {\n      borderValue = alignBorderValue(this.left);\n      x1 = chartArea.left;\n      x2 = alignBorderValue(chartArea.right) - axisHalfWidth;\n      tx1 = borderValue + axisHalfWidth;\n      tx2 = this.left + tl;\n    } else if (axis === 'x') {\n      if (position === 'center') {\n        borderValue = alignBorderValue((chartArea.top + chartArea.bottom) / 2 + 0.5);\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n      }\n\n      y1 = chartArea.top;\n      y2 = chartArea.bottom;\n      ty1 = borderValue + axisHalfWidth;\n      ty2 = ty1 + tl;\n    } else if (axis === 'y') {\n      if (position === 'center') {\n        borderValue = alignBorderValue((chartArea.left + chartArea.right) / 2);\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n      }\n\n      tx1 = borderValue - axisHalfWidth;\n      tx2 = tx1 - tl;\n      x1 = chartArea.left;\n      x2 = chartArea.right;\n    }\n\n    const limit = valueOrDefault(options.ticks.maxTicksLimit, ticksLength);\n    const step = Math.max(1, Math.ceil(ticksLength / limit));\n    for (i = 0; i < ticksLength; i += step) {\n      const context = this.getContext(i);\n      const optsAtIndex = grid.setContext(context);\n      const optsAtIndexBorder = border.setContext(context);\n\n      const lineWidth = optsAtIndex.lineWidth;\n      const lineColor = optsAtIndex.color;\n      const borderDash = optsAtIndexBorder.dash || [];\n      const borderDashOffset = optsAtIndexBorder.dashOffset;\n\n      const tickWidth = optsAtIndex.tickWidth;\n      const tickColor = optsAtIndex.tickColor;\n      const tickBorderDash = optsAtIndex.tickBorderDash || [];\n      const tickBorderDashOffset = optsAtIndex.tickBorderDashOffset;\n\n      lineValue = getPixelForGridLine(this, i, offset);\n\n      // Skip if the pixel is out of the range\n      if (lineValue === undefined) {\n        continue;\n      }\n\n      alignedLineValue = _alignPixel(chart, lineValue, lineWidth);\n\n      if (isHorizontal) {\n        tx1 = tx2 = x1 = x2 = alignedLineValue;\n      } else {\n        ty1 = ty2 = y1 = y2 = alignedLineValue;\n      }\n\n      items.push({\n        tx1,\n        ty1,\n        tx2,\n        ty2,\n        x1,\n        y1,\n        x2,\n        y2,\n        width: lineWidth,\n        color: lineColor,\n        borderDash,\n        borderDashOffset,\n        tickWidth,\n        tickColor,\n        tickBorderDash,\n        tickBorderDashOffset,\n      });\n    }\n\n    this._ticksLength = ticksLength;\n    this._borderValue = borderValue;\n\n    return items;\n  }\n\n  /**\n\t * @private\n\t */\n  _computeLabelItems(chartArea) {\n    const axis = this.axis;\n    const options = this.options;\n    const {position, ticks: optionTicks} = options;\n    const isHorizontal = this.isHorizontal();\n    const ticks = this.ticks;\n    const {align, crossAlign, padding, mirror} = optionTicks;\n    const tl = getTickMarkLength(options.grid);\n    const tickAndPadding = tl + padding;\n    const hTickAndPadding = mirror ? -padding : tickAndPadding;\n    const rotation = -toRadians(this.labelRotation);\n    const items = [];\n    let i, ilen, tick, label, x, y, textAlign, pixel, font, lineHeight, lineCount, textOffset;\n    let textBaseline = 'middle';\n\n    if (position === 'top') {\n      y = this.bottom - hTickAndPadding;\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (position === 'bottom') {\n      y = this.top + hTickAndPadding;\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (position === 'left') {\n      const ret = this._getYAxisLabelAlignment(tl);\n      textAlign = ret.textAlign;\n      x = ret.x;\n    } else if (position === 'right') {\n      const ret = this._getYAxisLabelAlignment(tl);\n      textAlign = ret.textAlign;\n      x = ret.x;\n    } else if (axis === 'x') {\n      if (position === 'center') {\n        y = ((chartArea.top + chartArea.bottom) / 2) + tickAndPadding;\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        y = this.chart.scales[positionAxisID].getPixelForValue(value) + tickAndPadding;\n      }\n      textAlign = this._getXAxisLabelAlignment();\n    } else if (axis === 'y') {\n      if (position === 'center') {\n        x = ((chartArea.left + chartArea.right) / 2) - tickAndPadding;\n      } else if (isObject(position)) {\n        const positionAxisID = Object.keys(position)[0];\n        const value = position[positionAxisID];\n        x = this.chart.scales[positionAxisID].getPixelForValue(value);\n      }\n      textAlign = this._getYAxisLabelAlignment(tl).textAlign;\n    }\n\n    if (axis === 'y') {\n      if (align === 'start') {\n        textBaseline = 'top';\n      } else if (align === 'end') {\n        textBaseline = 'bottom';\n      }\n    }\n\n    const labelSizes = this._getLabelSizes();\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      tick = ticks[i];\n      label = tick.label;\n\n      const optsAtIndex = optionTicks.setContext(this.getContext(i));\n      pixel = this.getPixelForTick(i) + optionTicks.labelOffset;\n      font = this._resolveTickFontOptions(i);\n      lineHeight = font.lineHeight;\n      lineCount = isArray(label) ? label.length : 1;\n      const halfCount = lineCount / 2;\n      const color = optsAtIndex.color;\n      const strokeColor = optsAtIndex.textStrokeColor;\n      const strokeWidth = optsAtIndex.textStrokeWidth;\n      let tickTextAlign = textAlign;\n\n      if (isHorizontal) {\n        x = pixel;\n\n        if (textAlign === 'inner') {\n          if (i === ilen - 1) {\n            tickTextAlign = !this.options.reverse ? 'right' : 'left';\n          } else if (i === 0) {\n            tickTextAlign = !this.options.reverse ? 'left' : 'right';\n          } else {\n            tickTextAlign = 'center';\n          }\n        }\n\n        if (position === 'top') {\n          if (crossAlign === 'near' || rotation !== 0) {\n            textOffset = -lineCount * lineHeight + lineHeight / 2;\n          } else if (crossAlign === 'center') {\n            textOffset = -labelSizes.highest.height / 2 - halfCount * lineHeight + lineHeight;\n          } else {\n            textOffset = -labelSizes.highest.height + lineHeight / 2;\n          }\n        } else {\n          // eslint-disable-next-line no-lonely-if\n          if (crossAlign === 'near' || rotation !== 0) {\n            textOffset = lineHeight / 2;\n          } else if (crossAlign === 'center') {\n            textOffset = labelSizes.highest.height / 2 - halfCount * lineHeight;\n          } else {\n            textOffset = labelSizes.highest.height - lineCount * lineHeight;\n          }\n        }\n        if (mirror) {\n          textOffset *= -1;\n        }\n        if (rotation !== 0 && !optsAtIndex.showLabelBackdrop) {\n          x += (lineHeight / 2) * Math.sin(rotation);\n        }\n      } else {\n        y = pixel;\n        textOffset = (1 - lineCount) * lineHeight / 2;\n      }\n\n      let backdrop;\n\n      if (optsAtIndex.showLabelBackdrop) {\n        const labelPadding = toPadding(optsAtIndex.backdropPadding);\n        const height = labelSizes.heights[i];\n        const width = labelSizes.widths[i];\n\n        let top = textOffset - labelPadding.top;\n        let left = 0 - labelPadding.left;\n\n        switch (textBaseline) {\n        case 'middle':\n          top -= height / 2;\n          break;\n        case 'bottom':\n          top -= height;\n          break;\n        default:\n          break;\n        }\n\n        switch (textAlign) {\n        case 'center':\n          left -= width / 2;\n          break;\n        case 'right':\n          left -= width;\n          break;\n        case 'inner':\n          if (i === ilen - 1) {\n            left -= width;\n          } else if (i > 0) {\n            left -= width / 2;\n          }\n          break;\n        default:\n          break;\n        }\n\n        backdrop = {\n          left,\n          top,\n          width: width + labelPadding.width,\n          height: height + labelPadding.height,\n\n          color: optsAtIndex.backdropColor,\n        };\n      }\n\n      items.push({\n        label,\n        font,\n        textOffset,\n        options: {\n          rotation,\n          color,\n          strokeColor,\n          strokeWidth,\n          textAlign: tickTextAlign,\n          textBaseline,\n          translation: [x, y],\n          backdrop,\n        }\n      });\n    }\n\n    return items;\n  }\n\n  _getXAxisLabelAlignment() {\n    const {position, ticks} = this.options;\n    const rotation = -toRadians(this.labelRotation);\n\n    if (rotation) {\n      return position === 'top' ? 'left' : 'right';\n    }\n\n    let align = 'center';\n\n    if (ticks.align === 'start') {\n      align = 'left';\n    } else if (ticks.align === 'end') {\n      align = 'right';\n    } else if (ticks.align === 'inner') {\n      align = 'inner';\n    }\n\n    return align;\n  }\n\n  _getYAxisLabelAlignment(tl) {\n    const {position, ticks: {crossAlign, mirror, padding}} = this.options;\n    const labelSizes = this._getLabelSizes();\n    const tickAndPadding = tl + padding;\n    const widest = labelSizes.widest.width;\n\n    let textAlign;\n    let x;\n\n    if (position === 'left') {\n      if (mirror) {\n        x = this.right + padding;\n\n        if (crossAlign === 'near') {\n          textAlign = 'left';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x += (widest / 2);\n        } else {\n          textAlign = 'right';\n          x += widest;\n        }\n      } else {\n        x = this.right - tickAndPadding;\n\n        if (crossAlign === 'near') {\n          textAlign = 'right';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x -= (widest / 2);\n        } else {\n          textAlign = 'left';\n          x = this.left;\n        }\n      }\n    } else if (position === 'right') {\n      if (mirror) {\n        x = this.left + padding;\n\n        if (crossAlign === 'near') {\n          textAlign = 'right';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x -= (widest / 2);\n        } else {\n          textAlign = 'left';\n          x -= widest;\n        }\n      } else {\n        x = this.left + tickAndPadding;\n\n        if (crossAlign === 'near') {\n          textAlign = 'left';\n        } else if (crossAlign === 'center') {\n          textAlign = 'center';\n          x += widest / 2;\n        } else {\n          textAlign = 'right';\n          x = this.right;\n        }\n      }\n    } else {\n      textAlign = 'right';\n    }\n\n    return {textAlign, x};\n  }\n\n  /**\n\t * @private\n\t */\n  _computeLabelArea() {\n    if (this.options.ticks.mirror) {\n      return;\n    }\n\n    const chart = this.chart;\n    const position = this.options.position;\n\n    if (position === 'left' || position === 'right') {\n      return {top: 0, left: this.left, bottom: chart.height, right: this.right};\n    } if (position === 'top' || position === 'bottom') {\n      return {top: this.top, left: 0, bottom: this.bottom, right: chart.width};\n    }\n  }\n\n  /**\n   * @protected\n   */\n  drawBackground() {\n    const {ctx, options: {backgroundColor}, left, top, width, height} = this;\n    if (backgroundColor) {\n      ctx.save();\n      ctx.fillStyle = backgroundColor;\n      ctx.fillRect(left, top, width, height);\n      ctx.restore();\n    }\n  }\n\n  getLineWidthForValue(value) {\n    const grid = this.options.grid;\n    if (!this._isVisible() || !grid.display) {\n      return 0;\n    }\n    const ticks = this.ticks;\n    const index = ticks.findIndex(t => t.value === value);\n    if (index >= 0) {\n      const opts = grid.setContext(this.getContext(index));\n      return opts.lineWidth;\n    }\n    return 0;\n  }\n\n  /**\n\t * @protected\n\t */\n  drawGrid(chartArea) {\n    const grid = this.options.grid;\n    const ctx = this.ctx;\n    const items = this._gridLineItems || (this._gridLineItems = this._computeGridLineItems(chartArea));\n    let i, ilen;\n\n    const drawLine = (p1, p2, style) => {\n      if (!style.width || !style.color) {\n        return;\n      }\n      ctx.save();\n      ctx.lineWidth = style.width;\n      ctx.strokeStyle = style.color;\n      ctx.setLineDash(style.borderDash || []);\n      ctx.lineDashOffset = style.borderDashOffset;\n\n      ctx.beginPath();\n      ctx.moveTo(p1.x, p1.y);\n      ctx.lineTo(p2.x, p2.y);\n      ctx.stroke();\n      ctx.restore();\n    };\n\n    if (grid.display) {\n      for (i = 0, ilen = items.length; i < ilen; ++i) {\n        const item = items[i];\n\n        if (grid.drawOnChartArea) {\n          drawLine(\n            {x: item.x1, y: item.y1},\n            {x: item.x2, y: item.y2},\n            item\n          );\n        }\n\n        if (grid.drawTicks) {\n          drawLine(\n            {x: item.tx1, y: item.ty1},\n            {x: item.tx2, y: item.ty2},\n            {\n              color: item.tickColor,\n              width: item.tickWidth,\n              borderDash: item.tickBorderDash,\n              borderDashOffset: item.tickBorderDashOffset\n            }\n          );\n        }\n      }\n    }\n  }\n\n  /**\n\t * @protected\n\t */\n  drawBorder() {\n    const {chart, ctx, options: {border, grid}} = this;\n    const borderOpts = border.setContext(this.getContext());\n    const axisWidth = border.display ? borderOpts.width : 0;\n    if (!axisWidth) {\n      return;\n    }\n    const lastLineWidth = grid.setContext(this.getContext(0)).lineWidth;\n    const borderValue = this._borderValue;\n    let x1, x2, y1, y2;\n\n    if (this.isHorizontal()) {\n      x1 = _alignPixel(chart, this.left, axisWidth) - axisWidth / 2;\n      x2 = _alignPixel(chart, this.right, lastLineWidth) + lastLineWidth / 2;\n      y1 = y2 = borderValue;\n    } else {\n      y1 = _alignPixel(chart, this.top, axisWidth) - axisWidth / 2;\n      y2 = _alignPixel(chart, this.bottom, lastLineWidth) + lastLineWidth / 2;\n      x1 = x2 = borderValue;\n    }\n    ctx.save();\n    ctx.lineWidth = borderOpts.width;\n    ctx.strokeStyle = borderOpts.color;\n\n    ctx.beginPath();\n    ctx.moveTo(x1, y1);\n    ctx.lineTo(x2, y2);\n    ctx.stroke();\n\n    ctx.restore();\n  }\n\n  /**\n\t * @protected\n\t */\n  drawLabels(chartArea) {\n    const optionTicks = this.options.ticks;\n\n    if (!optionTicks.display) {\n      return;\n    }\n\n    const ctx = this.ctx;\n\n    const area = this._computeLabelArea();\n    if (area) {\n      clipArea(ctx, area);\n    }\n\n    const items = this.getLabelItems(chartArea);\n    for (const item of items) {\n      const renderTextOptions = item.options;\n      const tickFont = item.font;\n      const label = item.label;\n      const y = item.textOffset;\n      renderText(ctx, label, 0, y, tickFont, renderTextOptions);\n    }\n\n    if (area) {\n      unclipArea(ctx);\n    }\n  }\n\n  /**\n\t * @protected\n\t */\n  drawTitle() {\n    const {ctx, options: {position, title, reverse}} = this;\n\n    if (!title.display) {\n      return;\n    }\n\n    const font = toFont(title.font);\n    const padding = toPadding(title.padding);\n    const align = title.align;\n    let offset = font.lineHeight / 2;\n\n    if (position === 'bottom' || position === 'center' || isObject(position)) {\n      offset += padding.bottom;\n      if (isArray(title.text)) {\n        offset += font.lineHeight * (title.text.length - 1);\n      }\n    } else {\n      offset += padding.top;\n    }\n\n    const {titleX, titleY, maxWidth, rotation} = titleArgs(this, offset, position, align);\n\n    renderText(ctx, title.text, 0, 0, font, {\n      color: title.color,\n      maxWidth,\n      rotation,\n      textAlign: titleAlign(align, position, reverse),\n      textBaseline: 'middle',\n      translation: [titleX, titleY],\n    });\n  }\n\n  draw(chartArea) {\n    if (!this._isVisible()) {\n      return;\n    }\n\n    this.drawBackground();\n    this.drawGrid(chartArea);\n    this.drawBorder();\n    this.drawTitle();\n    this.drawLabels(chartArea);\n  }\n\n  /**\n\t * @return {object[]}\n\t * @private\n\t */\n  _layers() {\n    const opts = this.options;\n    const tz = opts.ticks && opts.ticks.z || 0;\n    const gz = valueOrDefault(opts.grid && opts.grid.z, -1);\n    const bz = valueOrDefault(opts.border && opts.border.z, 0);\n\n    if (!this._isVisible() || this.draw !== Scale.prototype.draw) {\n      // backward compatibility: draw has been overridden by custom scale\n      return [{\n        z: tz,\n        draw: (chartArea) => {\n          this.draw(chartArea);\n        }\n      }];\n    }\n\n    return [{\n      z: gz,\n      draw: (chartArea) => {\n        this.drawBackground();\n        this.drawGrid(chartArea);\n        this.drawTitle();\n      }\n    }, {\n      z: bz,\n      draw: () => {\n        this.drawBorder();\n      }\n    }, {\n      z: tz,\n      draw: (chartArea) => {\n        this.drawLabels(chartArea);\n      }\n    }];\n  }\n\n  /**\n\t * Returns visible dataset metas that are attached to this scale\n\t * @param {string} [type] - if specified, also filter by dataset type\n\t * @return {object[]}\n\t */\n  getMatchingVisibleMetas(type) {\n    const metas = this.chart.getSortedVisibleDatasetMetas();\n    const axisID = this.axis + 'AxisID';\n    const result = [];\n    let i, ilen;\n\n    for (i = 0, ilen = metas.length; i < ilen; ++i) {\n      const meta = metas[i];\n      if (meta[axisID] === this.id && (!type || meta.type === type)) {\n        result.push(meta);\n      }\n    }\n    return result;\n  }\n\n  /**\n\t * @param {number} index\n\t * @return {object}\n\t * @protected\n \t */\n  _resolveTickFontOptions(index) {\n    const opts = this.options.ticks.setContext(this.getContext(index));\n    return toFont(opts.font);\n  }\n\n  /**\n   * @protected\n   */\n  _maxDigits() {\n    const fontSize = this._resolveTickFontOptions(0).lineHeight;\n    return (this.isHorizontal() ? this.width : this.height) / fontSize;\n  }\n}\n","import {merge} from '../helpers/index.js';\nimport defaults, {overrides} from './core.defaults.js';\n\n/**\n * @typedef {{id: string, defaults: any, overrides?: any, defaultRoutes: any}} IChartComponent\n */\n\nexport default class TypedRegistry {\n  constructor(type, scope, override) {\n    this.type = type;\n    this.scope = scope;\n    this.override = override;\n    this.items = Object.create(null);\n  }\n\n  isForType(type) {\n    return Object.prototype.isPrototypeOf.call(this.type.prototype, type.prototype);\n  }\n\n  /**\n\t * @param {IChartComponent} item\n\t * @returns {string} The scope where items defaults were registered to.\n\t */\n  register(item) {\n    const proto = Object.getPrototypeOf(item);\n    let parentScope;\n\n    if (isIChartComponent(proto)) {\n      // Make sure the parent is registered and note the scope where its defaults are.\n      parentScope = this.register(proto);\n    }\n\n    const items = this.items;\n    const id = item.id;\n    const scope = this.scope + '.' + id;\n\n    if (!id) {\n      throw new Error('class does not have id: ' + item);\n    }\n\n    if (id in items) {\n      // already registered\n      return scope;\n    }\n\n    items[id] = item;\n    registerDefaults(item, scope, parentScope);\n    if (this.override) {\n      defaults.override(item.id, item.overrides);\n    }\n\n    return scope;\n  }\n\n  /**\n\t * @param {string} id\n\t * @returns {object?}\n\t */\n  get(id) {\n    return this.items[id];\n  }\n\n  /**\n\t * @param {IChartComponent} item\n\t */\n  unregister(item) {\n    const items = this.items;\n    const id = item.id;\n    const scope = this.scope;\n\n    if (id in items) {\n      delete items[id];\n    }\n\n    if (scope && id in defaults[scope]) {\n      delete defaults[scope][id];\n      if (this.override) {\n        delete overrides[id];\n      }\n    }\n  }\n}\n\nfunction registerDefaults(item, scope, parentScope) {\n  // Inherit the parent's defaults and keep existing defaults\n  const itemDefaults = merge(Object.create(null), [\n    parentScope ? defaults.get(parentScope) : {},\n    defaults.get(scope),\n    item.defaults\n  ]);\n\n  defaults.set(scope, itemDefaults);\n\n  if (item.defaultRoutes) {\n    routeDefaults(scope, item.defaultRoutes);\n  }\n\n  if (item.descriptors) {\n    defaults.describe(scope, item.descriptors);\n  }\n}\n\nfunction routeDefaults(scope, routes) {\n  Object.keys(routes).forEach(property => {\n    const propertyParts = property.split('.');\n    const sourceName = propertyParts.pop();\n    const sourceScope = [scope].concat(propertyParts).join('.');\n    const parts = routes[property].split('.');\n    const targetName = parts.pop();\n    const targetScope = parts.join('.');\n    defaults.route(sourceScope, sourceName, targetScope, targetName);\n  });\n}\n\nfunction isIChartComponent(proto) {\n  return 'id' in proto && 'defaults' in proto;\n}\n","import DatasetController from './core.datasetController.js';\nimport Element from './core.element.js';\nimport Scale from './core.scale.js';\nimport TypedRegistry from './core.typedRegistry.js';\nimport {each, callback as call, _capitalize} from '../helpers/helpers.core.js';\n\n/**\n * Please use the module's default export which provides a singleton instance\n * Note: class is exported for typedoc\n */\nexport class Registry {\n  constructor() {\n    this.controllers = new TypedRegistry(DatasetController, 'datasets', true);\n    this.elements = new TypedRegistry(Element, 'elements');\n    this.plugins = new TypedRegistry(Object, 'plugins');\n    this.scales = new TypedRegistry(Scale, 'scales');\n    // Order is important, Scale has Element in prototype chain,\n    // so Scales must be before Elements. Plugins are a fallback, so not listed here.\n    this._typedRegistries = [this.controllers, this.scales, this.elements];\n  }\n\n  /**\n\t * @param  {...any} args\n\t */\n  add(...args) {\n    this._each('register', args);\n  }\n\n  remove(...args) {\n    this._each('unregister', args);\n  }\n\n  /**\n\t * @param  {...typeof DatasetController} args\n\t */\n  addControllers(...args) {\n    this._each('register', args, this.controllers);\n  }\n\n  /**\n\t * @param  {...typeof Element} args\n\t */\n  addElements(...args) {\n    this._each('register', args, this.elements);\n  }\n\n  /**\n\t * @param  {...any} args\n\t */\n  addPlugins(...args) {\n    this._each('register', args, this.plugins);\n  }\n\n  /**\n\t * @param  {...typeof Scale} args\n\t */\n  addScales(...args) {\n    this._each('register', args, this.scales);\n  }\n\n  /**\n\t * @param {string} id\n\t * @returns {typeof DatasetController}\n\t */\n  getController(id) {\n    return this._get(id, this.controllers, 'controller');\n  }\n\n  /**\n\t * @param {string} id\n\t * @returns {typeof Element}\n\t */\n  getElement(id) {\n    return this._get(id, this.elements, 'element');\n  }\n\n  /**\n\t * @param {string} id\n\t * @returns {object}\n\t */\n  getPlugin(id) {\n    return this._get(id, this.plugins, 'plugin');\n  }\n\n  /**\n\t * @param {string} id\n\t * @returns {typeof Scale}\n\t */\n  getScale(id) {\n    return this._get(id, this.scales, 'scale');\n  }\n\n  /**\n\t * @param  {...typeof DatasetController} args\n\t */\n  removeControllers(...args) {\n    this._each('unregister', args, this.controllers);\n  }\n\n  /**\n\t * @param  {...typeof Element} args\n\t */\n  removeElements(...args) {\n    this._each('unregister', args, this.elements);\n  }\n\n  /**\n\t * @param  {...any} args\n\t */\n  removePlugins(...args) {\n    this._each('unregister', args, this.plugins);\n  }\n\n  /**\n\t * @param  {...typeof Scale} args\n\t */\n  removeScales(...args) {\n    this._each('unregister', args, this.scales);\n  }\n\n  /**\n\t * @private\n\t */\n  _each(method, args, typedRegistry) {\n    [...args].forEach(arg => {\n      const reg = typedRegistry || this._getRegistryForType(arg);\n      if (typedRegistry || reg.isForType(arg) || (reg === this.plugins && arg.id)) {\n        this._exec(method, reg, arg);\n      } else {\n        // Handle loopable args\n        // Use case:\n        //  import * as plugins from './plugins.js';\n        //  Chart.register(plugins);\n        each(arg, item => {\n          // If there are mixed types in the loopable, make sure those are\n          // registered in correct registry\n          // Use case: (treemap exporting controller, elements etc)\n          //  import * as treemap from 'chartjs-chart-treemap.js';\n          //  Chart.register(treemap);\n\n          const itemReg = typedRegistry || this._getRegistryForType(item);\n          this._exec(method, itemReg, item);\n        });\n      }\n    });\n  }\n\n  /**\n\t * @private\n\t */\n  _exec(method, registry, component) {\n    const camelMethod = _capitalize(method);\n    call(component['before' + camelMethod], [], component); // beforeRegister / beforeUnregister\n    registry[method](component);\n    call(component['after' + camelMethod], [], component); // afterRegister / afterUnregister\n  }\n\n  /**\n\t * @private\n\t */\n  _getRegistryForType(type) {\n    for (let i = 0; i < this._typedRegistries.length; i++) {\n      const reg = this._typedRegistries[i];\n      if (reg.isForType(type)) {\n        return reg;\n      }\n    }\n    // plugins is the fallback registry\n    return this.plugins;\n  }\n\n  /**\n\t * @private\n\t */\n  _get(id, typedRegistry, type) {\n    const item = typedRegistry.get(id);\n    if (item === undefined) {\n      throw new Error('\"' + id + '\" is not a registered ' + type + '.');\n    }\n    return item;\n  }\n\n}\n\n// singleton instance\nexport default /* #__PURE__ */ new Registry();\n","import registry from './core.registry.js';\nimport {callback as callCallback, isNullOrUndef, valueOrDefault} from '../helpers/helpers.core.js';\n\n/**\n * @typedef { import('./core.controller.js').default } Chart\n * @typedef { import('../types/index.js').ChartEvent } ChartEvent\n * @typedef { import('../plugins/plugin.tooltip.js').default } Tooltip\n */\n\n/**\n * @callback filterCallback\n * @param {{plugin: object, options: object}} value\n * @param {number} [index]\n * @param {array} [array]\n * @param {object} [thisArg]\n * @return {boolean}\n */\n\n\nexport default class PluginService {\n  constructor() {\n    this._init = [];\n  }\n\n  /**\n\t * Calls enabled plugins for `chart` on the specified hook and with the given args.\n\t * This method immediately returns as soon as a plugin explicitly returns false. The\n\t * returned value can be used, for instance, to interrupt the current action.\n\t * @param {Chart} chart - The chart instance for which plugins should be called.\n\t * @param {string} hook - The name of the plugin method to call (e.g. 'beforeUpdate').\n\t * @param {object} [args] - Extra arguments to apply to the hook call.\n   * @param {filterCallback} [filter] - Filtering function for limiting which plugins are notified\n\t * @returns {boolean} false if any of the plugins return false, else returns true.\n\t */\n  notify(chart, hook, args, filter) {\n    if (hook === 'beforeInit') {\n      this._init = this._createDescriptors(chart, true);\n      this._notify(this._init, chart, 'install');\n    }\n\n    const descriptors = filter ? this._descriptors(chart).filter(filter) : this._descriptors(chart);\n    const result = this._notify(descriptors, chart, hook, args);\n\n    if (hook === 'afterDestroy') {\n      this._notify(descriptors, chart, 'stop');\n      this._notify(this._init, chart, 'uninstall');\n    }\n    return result;\n  }\n\n  /**\n\t * @private\n\t */\n  _notify(descriptors, chart, hook, args) {\n    args = args || {};\n    for (const descriptor of descriptors) {\n      const plugin = descriptor.plugin;\n      const method = plugin[hook];\n      const params = [chart, args, descriptor.options];\n      if (callCallback(method, params, plugin) === false && args.cancelable) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  invalidate() {\n    // When plugins are registered, there is the possibility of a double\n    // invalidate situation. In this case, we only want to invalidate once.\n    // If we invalidate multiple times, the `_oldCache` is lost and all of the\n    // plugins are restarted without being correctly stopped.\n    // See https://github.com/chartjs/Chart.js/issues/8147\n    if (!isNullOrUndef(this._cache)) {\n      this._oldCache = this._cache;\n      this._cache = undefined;\n    }\n  }\n\n  /**\n\t * @param {Chart} chart\n\t * @private\n\t */\n  _descriptors(chart) {\n    if (this._cache) {\n      return this._cache;\n    }\n\n    const descriptors = this._cache = this._createDescriptors(chart);\n\n    this._notifyStateChanges(chart);\n\n    return descriptors;\n  }\n\n  _createDescriptors(chart, all) {\n    const config = chart && chart.config;\n    const options = valueOrDefault(config.options && config.options.plugins, {});\n    const plugins = allPlugins(config);\n    // options === false => all plugins are disabled\n    return options === false && !all ? [] : createDescriptors(chart, plugins, options, all);\n  }\n\n  /**\n\t * @param {Chart} chart\n\t * @private\n\t */\n  _notifyStateChanges(chart) {\n    const previousDescriptors = this._oldCache || [];\n    const descriptors = this._cache;\n    const diff = (a, b) => a.filter(x => !b.some(y => x.plugin.id === y.plugin.id));\n    this._notify(diff(previousDescriptors, descriptors), chart, 'stop');\n    this._notify(diff(descriptors, previousDescriptors), chart, 'start');\n  }\n}\n\n/**\n * @param {import('./core.config.js').default} config\n */\nfunction allPlugins(config) {\n  const localIds = {};\n  const plugins = [];\n  const keys = Object.keys(registry.plugins.items);\n  for (let i = 0; i < keys.length; i++) {\n    plugins.push(registry.getPlugin(keys[i]));\n  }\n\n  const local = config.plugins || [];\n  for (let i = 0; i < local.length; i++) {\n    const plugin = local[i];\n\n    if (plugins.indexOf(plugin) === -1) {\n      plugins.push(plugin);\n      localIds[plugin.id] = true;\n    }\n  }\n\n  return {plugins, localIds};\n}\n\nfunction getOpts(options, all) {\n  if (!all && options === false) {\n    return null;\n  }\n  if (options === true) {\n    return {};\n  }\n  return options;\n}\n\nfunction createDescriptors(chart, {plugins, localIds}, options, all) {\n  const result = [];\n  const context = chart.getContext();\n\n  for (const plugin of plugins) {\n    const id = plugin.id;\n    const opts = getOpts(options[id], all);\n    if (opts === null) {\n      continue;\n    }\n    result.push({\n      plugin,\n      options: pluginOpts(chart.config, {plugin, local: localIds[id]}, opts, context)\n    });\n  }\n\n  return result;\n}\n\nfunction pluginOpts(config, {plugin, local}, opts, context) {\n  const keys = config.pluginScopeKeys(plugin);\n  const scopes = config.getOptionScopes(opts, keys);\n  if (local && plugin.defaults) {\n    // make sure plugin defaults are in scopes for local (not registered) plugins\n    scopes.push(plugin.defaults);\n  }\n  return config.createResolver(scopes, context, [''], {\n    // These are just defaults that plugins can override\n    scriptable: false,\n    indexable: false,\n    allKeys: true\n  });\n}\n","import defaults, {overrides, descriptors} from './core.defaults.js';\nimport {mergeIf, resolveObjectKey, isArray, isFunction, valueOrDefault, isObject} from '../helpers/helpers.core.js';\nimport {_attachContext, _createResolver, _descriptors} from '../helpers/helpers.config.js';\n\nexport function getIndexAxis(type, options) {\n  const datasetDefaults = defaults.datasets[type] || {};\n  const datasetOptions = (options.datasets || {})[type] || {};\n  return datasetOptions.indexAxis || options.indexAxis || datasetDefaults.indexAxis || 'x';\n}\n\nfunction getAxisFromDefaultScaleID(id, indexAxis) {\n  let axis = id;\n  if (id === '_index_') {\n    axis = indexAxis;\n  } else if (id === '_value_') {\n    axis = indexAxis === 'x' ? 'y' : 'x';\n  }\n  return axis;\n}\n\nfunction getDefaultScaleIDFromAxis(axis, indexAxis) {\n  return axis === indexAxis ? '_index_' : '_value_';\n}\n\nfunction idMatchesAxis(id) {\n  if (id === 'x' || id === 'y' || id === 'r') {\n    return id;\n  }\n}\n\nfunction axisFromPosition(position) {\n  if (position === 'top' || position === 'bottom') {\n    return 'x';\n  }\n  if (position === 'left' || position === 'right') {\n    return 'y';\n  }\n}\n\nexport function determineAxis(id, ...scaleOptions) {\n  if (idMatchesAxis(id)) {\n    return id;\n  }\n  for (const opts of scaleOptions) {\n    const axis = opts.axis\n      || axisFromPosition(opts.position)\n      || id.length > 1 && idMatchesAxis(id[0].toLowerCase());\n    if (axis) {\n      return axis;\n    }\n  }\n  throw new Error(`Cannot determine type of '${id}' axis. Please provide 'axis' or 'position' option.`);\n}\n\nfunction getAxisFromDataset(id, axis, dataset) {\n  if (dataset[axis + 'AxisID'] === id) {\n    return {axis};\n  }\n}\n\nfunction retrieveAxisFromDatasets(id, config) {\n  if (config.data && config.data.datasets) {\n    const boundDs = config.data.datasets.filter((d) => d.xAxisID === id || d.yAxisID === id);\n    if (boundDs.length) {\n      return getAxisFromDataset(id, 'x', boundDs[0]) || getAxisFromDataset(id, 'y', boundDs[0]);\n    }\n  }\n  return {};\n}\n\nfunction mergeScaleConfig(config, options) {\n  const chartDefaults = overrides[config.type] || {scales: {}};\n  const configScales = options.scales || {};\n  const chartIndexAxis = getIndexAxis(config.type, options);\n  const scales = Object.create(null);\n\n  // First figure out first scale id's per axis.\n  Object.keys(configScales).forEach(id => {\n    const scaleConf = configScales[id];\n    if (!isObject(scaleConf)) {\n      return console.error(`Invalid scale configuration for scale: ${id}`);\n    }\n    if (scaleConf._proxy) {\n      return console.warn(`Ignoring resolver passed as options for scale: ${id}`);\n    }\n    const axis = determineAxis(id, scaleConf, retrieveAxisFromDatasets(id, config), defaults.scales[scaleConf.type]);\n    const defaultId = getDefaultScaleIDFromAxis(axis, chartIndexAxis);\n    const defaultScaleOptions = chartDefaults.scales || {};\n    scales[id] = mergeIf(Object.create(null), [{axis}, scaleConf, defaultScaleOptions[axis], defaultScaleOptions[defaultId]]);\n  });\n\n  // Then merge dataset defaults to scale configs\n  config.data.datasets.forEach(dataset => {\n    const type = dataset.type || config.type;\n    const indexAxis = dataset.indexAxis || getIndexAxis(type, options);\n    const datasetDefaults = overrides[type] || {};\n    const defaultScaleOptions = datasetDefaults.scales || {};\n    Object.keys(defaultScaleOptions).forEach(defaultID => {\n      const axis = getAxisFromDefaultScaleID(defaultID, indexAxis);\n      const id = dataset[axis + 'AxisID'] || axis;\n      scales[id] = scales[id] || Object.create(null);\n      mergeIf(scales[id], [{axis}, configScales[id], defaultScaleOptions[defaultID]]);\n    });\n  });\n\n  // apply scale defaults, if not overridden by dataset defaults\n  Object.keys(scales).forEach(key => {\n    const scale = scales[key];\n    mergeIf(scale, [defaults.scales[scale.type], defaults.scale]);\n  });\n\n  return scales;\n}\n\nfunction initOptions(config) {\n  const options = config.options || (config.options = {});\n\n  options.plugins = valueOrDefault(options.plugins, {});\n  options.scales = mergeScaleConfig(config, options);\n}\n\nfunction initData(data) {\n  data = data || {};\n  data.datasets = data.datasets || [];\n  data.labels = data.labels || [];\n  return data;\n}\n\nfunction initConfig(config) {\n  config = config || {};\n  config.data = initData(config.data);\n\n  initOptions(config);\n\n  return config;\n}\n\nconst keyCache = new Map();\nconst keysCached = new Set();\n\nfunction cachedKeys(cacheKey, generate) {\n  let keys = keyCache.get(cacheKey);\n  if (!keys) {\n    keys = generate();\n    keyCache.set(cacheKey, keys);\n    keysCached.add(keys);\n  }\n  return keys;\n}\n\nconst addIfFound = (set, obj, key) => {\n  const opts = resolveObjectKey(obj, key);\n  if (opts !== undefined) {\n    set.add(opts);\n  }\n};\n\nexport default class Config {\n  constructor(config) {\n    this._config = initConfig(config);\n    this._scopeCache = new Map();\n    this._resolverCache = new Map();\n  }\n\n  get platform() {\n    return this._config.platform;\n  }\n\n  get type() {\n    return this._config.type;\n  }\n\n  set type(type) {\n    this._config.type = type;\n  }\n\n  get data() {\n    return this._config.data;\n  }\n\n  set data(data) {\n    this._config.data = initData(data);\n  }\n\n  get options() {\n    return this._config.options;\n  }\n\n  set options(options) {\n    this._config.options = options;\n  }\n\n  get plugins() {\n    return this._config.plugins;\n  }\n\n  update() {\n    const config = this._config;\n    this.clearCache();\n    initOptions(config);\n  }\n\n  clearCache() {\n    this._scopeCache.clear();\n    this._resolverCache.clear();\n  }\n\n  /**\n   * Returns the option scope keys for resolving dataset options.\n   * These keys do not include the dataset itself, because it is not under options.\n   * @param {string} datasetType\n   * @return {string[][]}\n   */\n  datasetScopeKeys(datasetType) {\n    return cachedKeys(datasetType,\n      () => [[\n        `datasets.${datasetType}`,\n        ''\n      ]]);\n  }\n\n  /**\n   * Returns the option scope keys for resolving dataset animation options.\n   * These keys do not include the dataset itself, because it is not under options.\n   * @param {string} datasetType\n   * @param {string} transition\n   * @return {string[][]}\n   */\n  datasetAnimationScopeKeys(datasetType, transition) {\n    return cachedKeys(`${datasetType}.transition.${transition}`,\n      () => [\n        [\n          `datasets.${datasetType}.transitions.${transition}`,\n          `transitions.${transition}`,\n        ],\n        // The following are used for looking up the `animations` and `animation` keys\n        [\n          `datasets.${datasetType}`,\n          ''\n        ]\n      ]);\n  }\n\n  /**\n   * Returns the options scope keys for resolving element options that belong\n   * to an dataset. These keys do not include the dataset itself, because it\n   * is not under options.\n   * @param {string} datasetType\n   * @param {string} elementType\n   * @return {string[][]}\n   */\n  datasetElementScopeKeys(datasetType, elementType) {\n    return cachedKeys(`${datasetType}-${elementType}`,\n      () => [[\n        `datasets.${datasetType}.elements.${elementType}`,\n        `datasets.${datasetType}`,\n        `elements.${elementType}`,\n        ''\n      ]]);\n  }\n\n  /**\n   * Returns the options scope keys for resolving plugin options.\n   * @param {{id: string, additionalOptionScopes?: string[]}} plugin\n   * @return {string[][]}\n   */\n  pluginScopeKeys(plugin) {\n    const id = plugin.id;\n    const type = this.type;\n    return cachedKeys(`${type}-plugin-${id}`,\n      () => [[\n        `plugins.${id}`,\n        ...plugin.additionalOptionScopes || [],\n      ]]);\n  }\n\n  /**\n   * @private\n   */\n  _cachedScopes(mainScope, resetCache) {\n    const _scopeCache = this._scopeCache;\n    let cache = _scopeCache.get(mainScope);\n    if (!cache || resetCache) {\n      cache = new Map();\n      _scopeCache.set(mainScope, cache);\n    }\n    return cache;\n  }\n\n  /**\n   * Resolves the objects from options and defaults for option value resolution.\n   * @param {object} mainScope - The main scope object for options\n   * @param {string[][]} keyLists - The arrays of keys in resolution order\n   * @param {boolean} [resetCache] - reset the cache for this mainScope\n   */\n  getOptionScopes(mainScope, keyLists, resetCache) {\n    const {options, type} = this;\n    const cache = this._cachedScopes(mainScope, resetCache);\n    const cached = cache.get(keyLists);\n    if (cached) {\n      return cached;\n    }\n\n    const scopes = new Set();\n\n    keyLists.forEach(keys => {\n      if (mainScope) {\n        scopes.add(mainScope);\n        keys.forEach(key => addIfFound(scopes, mainScope, key));\n      }\n      keys.forEach(key => addIfFound(scopes, options, key));\n      keys.forEach(key => addIfFound(scopes, overrides[type] || {}, key));\n      keys.forEach(key => addIfFound(scopes, defaults, key));\n      keys.forEach(key => addIfFound(scopes, descriptors, key));\n    });\n\n    const array = Array.from(scopes);\n    if (array.length === 0) {\n      array.push(Object.create(null));\n    }\n    if (keysCached.has(keyLists)) {\n      cache.set(keyLists, array);\n    }\n    return array;\n  }\n\n  /**\n   * Returns the option scopes for resolving chart options\n   * @return {object[]}\n   */\n  chartOptionScopes() {\n    const {options, type} = this;\n\n    return [\n      options,\n      overrides[type] || {},\n      defaults.datasets[type] || {}, // https://github.com/chartjs/Chart.js/issues/8531\n      {type},\n      defaults,\n      descriptors\n    ];\n  }\n\n  /**\n   * @param {object[]} scopes\n   * @param {string[]} names\n   * @param {function|object} context\n   * @param {string[]} [prefixes]\n   * @return {object}\n   */\n  resolveNamedOptions(scopes, names, context, prefixes = ['']) {\n    const result = {$shared: true};\n    const {resolver, subPrefixes} = getResolver(this._resolverCache, scopes, prefixes);\n    let options = resolver;\n    if (needContext(resolver, names)) {\n      result.$shared = false;\n      context = isFunction(context) ? context() : context;\n      // subResolver is passed to scriptable options. It should not resolve to hover options.\n      const subResolver = this.createResolver(scopes, context, subPrefixes);\n      options = _attachContext(resolver, context, subResolver);\n    }\n\n    for (const prop of names) {\n      result[prop] = options[prop];\n    }\n    return result;\n  }\n\n  /**\n   * @param {object[]} scopes\n   * @param {object} [context]\n   * @param {string[]} [prefixes]\n   * @param {{scriptable: boolean, indexable: boolean, allKeys?: boolean}} [descriptorDefaults]\n   */\n  createResolver(scopes, context, prefixes = [''], descriptorDefaults) {\n    const {resolver} = getResolver(this._resolverCache, scopes, prefixes);\n    return isObject(context)\n      ? _attachContext(resolver, context, undefined, descriptorDefaults)\n      : resolver;\n  }\n}\n\nfunction getResolver(resolverCache, scopes, prefixes) {\n  let cache = resolverCache.get(scopes);\n  if (!cache) {\n    cache = new Map();\n    resolverCache.set(scopes, cache);\n  }\n  const cacheKey = prefixes.join();\n  let cached = cache.get(cacheKey);\n  if (!cached) {\n    const resolver = _createResolver(scopes, prefixes);\n    cached = {\n      resolver,\n      subPrefixes: prefixes.filter(p => !p.toLowerCase().includes('hover'))\n    };\n    cache.set(cacheKey, cached);\n  }\n  return cached;\n}\n\nconst hasFunction = value => isObject(value)\n  && Object.getOwnPropertyNames(value).some((key) => isFunction(value[key]));\n\nfunction needContext(proxy, names) {\n  const {isScriptable, isIndexable} = _descriptors(proxy);\n\n  for (const prop of names) {\n    const scriptable = isScriptable(prop);\n    const indexable = isIndexable(prop);\n    const value = (indexable || scriptable) && proxy[prop];\n    if ((scriptable && (isFunction(value) || hasFunction(value)))\n      || (indexable && isArray(value))) {\n      return true;\n    }\n  }\n  return false;\n}\n","import animator from './core.animator.js';\nimport defaults, {overrides} from './core.defaults.js';\nimport Interaction from './core.interaction.js';\nimport layouts from './core.layouts.js';\nimport {_detectPlatform} from '../platform/index.js';\nimport PluginService from './core.plugins.js';\nimport registry from './core.registry.js';\nimport Config, {determineAxis, getIndexAxis} from './core.config.js';\nimport {retinaScale, _isDomSupported} from '../helpers/helpers.dom.js';\nimport {each, callback as callCallback, uid, valueOrDefault, _elementsEqual, isNullOrUndef, setsEqual, defined, isFunction, _isClickEvent} from '../helpers/helpers.core.js';\nimport {clearCanvas, clipArea, createContext, unclipArea, _isPointInArea} from '../helpers/index.js';\n// @ts-ignore\nimport {version} from '../../package.json';\nimport {debounce} from '../helpers/helpers.extras.js';\n\n/**\n * @typedef { import('../types/index.js').ChartEvent } ChartEvent\n * @typedef { import('../types/index.js').Point } Point\n */\n\nconst KNOWN_POSITIONS = ['top', 'bottom', 'left', 'right', 'chartArea'];\nfunction positionIsHorizontal(position, axis) {\n  return position === 'top' || position === 'bottom' || (KNOWN_POSITIONS.indexOf(position) === -1 && axis === 'x');\n}\n\nfunction compare2Level(l1, l2) {\n  return function(a, b) {\n    return a[l1] === b[l1]\n      ? a[l2] - b[l2]\n      : a[l1] - b[l1];\n  };\n}\n\nfunction onAnimationsComplete(context) {\n  const chart = context.chart;\n  const animationOptions = chart.options.animation;\n\n  chart.notifyPlugins('afterRender');\n  callCallback(animationOptions && animationOptions.onComplete, [context], chart);\n}\n\nfunction onAnimationProgress(context) {\n  const chart = context.chart;\n  const animationOptions = chart.options.animation;\n  callCallback(animationOptions && animationOptions.onProgress, [context], chart);\n}\n\n/**\n * Chart.js can take a string id of a canvas element, a 2d context, or a canvas element itself.\n * Attempt to unwrap the item passed into the chart constructor so that it is a canvas element (if possible).\n */\nfunction getCanvas(item) {\n  if (_isDomSupported() && typeof item === 'string') {\n    item = document.getElementById(item);\n  } else if (item && item.length) {\n    // Support for array based queries (such as jQuery)\n    item = item[0];\n  }\n\n  if (item && item.canvas) {\n    // Support for any object associated to a canvas (including a context2d)\n    item = item.canvas;\n  }\n  return item;\n}\n\nconst instances = {};\nconst getChart = (key) => {\n  const canvas = getCanvas(key);\n  return Object.values(instances).filter((c) => c.canvas === canvas).pop();\n};\n\nfunction moveNumericKeys(obj, start, move) {\n  const keys = Object.keys(obj);\n  for (const key of keys) {\n    const intKey = +key;\n    if (intKey >= start) {\n      const value = obj[key];\n      delete obj[key];\n      if (move > 0 || intKey > start) {\n        obj[intKey + move] = value;\n      }\n    }\n  }\n}\n\n/**\n * @param {ChartEvent} e\n * @param {ChartEvent|null} lastEvent\n * @param {boolean} inChartArea\n * @param {boolean} isClick\n * @returns {ChartEvent|null}\n */\nfunction determineLastEvent(e, lastEvent, inChartArea, isClick) {\n  if (!inChartArea || e.type === 'mouseout') {\n    return null;\n  }\n  if (isClick) {\n    return lastEvent;\n  }\n  return e;\n}\n\nfunction getSizeForArea(scale, chartArea, field) {\n  return scale.options.clip ? scale[field] : chartArea[field];\n}\n\nfunction getDatasetArea(meta, chartArea) {\n  const {xScale, yScale} = meta;\n  if (xScale && yScale) {\n    return {\n      left: getSizeForArea(xScale, chartArea, 'left'),\n      right: getSizeForArea(xScale, chartArea, 'right'),\n      top: getSizeForArea(yScale, chartArea, 'top'),\n      bottom: getSizeForArea(yScale, chartArea, 'bottom')\n    };\n  }\n  return chartArea;\n}\n\nclass Chart {\n\n  static defaults = defaults;\n  static instances = instances;\n  static overrides = overrides;\n  static registry = registry;\n  static version = version;\n  static getChart = getChart;\n\n  static register(...items) {\n    registry.add(...items);\n    invalidatePlugins();\n  }\n\n  static unregister(...items) {\n    registry.remove(...items);\n    invalidatePlugins();\n  }\n\n  // eslint-disable-next-line max-statements\n  constructor(item, userConfig) {\n    const config = this.config = new Config(userConfig);\n    const initialCanvas = getCanvas(item);\n    const existingChart = getChart(initialCanvas);\n    if (existingChart) {\n      throw new Error(\n        'Canvas is already in use. Chart with ID \\'' + existingChart.id + '\\'' +\n\t\t\t\t' must be destroyed before the canvas with ID \\'' + existingChart.canvas.id + '\\' can be reused.'\n      );\n    }\n\n    const options = config.createResolver(config.chartOptionScopes(), this.getContext());\n\n    this.platform = new (config.platform || _detectPlatform(initialCanvas))();\n    this.platform.updateConfig(config);\n\n    const context = this.platform.acquireContext(initialCanvas, options.aspectRatio);\n    const canvas = context && context.canvas;\n    const height = canvas && canvas.height;\n    const width = canvas && canvas.width;\n\n    this.id = uid();\n    this.ctx = context;\n    this.canvas = canvas;\n    this.width = width;\n    this.height = height;\n    this._options = options;\n    // Store the previously used aspect ratio to determine if a resize\n    // is needed during updates. Do this after _options is set since\n    // aspectRatio uses a getter\n    this._aspectRatio = this.aspectRatio;\n    this._layers = [];\n    this._metasets = [];\n    this._stacks = undefined;\n    this.boxes = [];\n    this.currentDevicePixelRatio = undefined;\n    this.chartArea = undefined;\n    this._active = [];\n    this._lastEvent = undefined;\n    this._listeners = {};\n    /** @type {?{attach?: function, detach?: function, resize?: function}} */\n    this._responsiveListeners = undefined;\n    this._sortedMetasets = [];\n    this.scales = {};\n    this._plugins = new PluginService();\n    this.$proxies = {};\n    this._hiddenIndices = {};\n    this.attached = false;\n    this._animationsDisabled = undefined;\n    this.$context = undefined;\n    this._doResize = debounce(mode => this.update(mode), options.resizeDelay || 0);\n    this._dataChanges = [];\n\n    // Add the chart instance to the global namespace\n    instances[this.id] = this;\n\n    if (!context || !canvas) {\n      // The given item is not a compatible context2d element, let's return before finalizing\n      // the chart initialization but after setting basic chart / controller properties that\n      // can help to figure out that the chart is not valid (e.g chart.canvas !== null);\n      // https://github.com/chartjs/Chart.js/issues/2807\n      console.error(\"Failed to create chart: can't acquire context from the given item\");\n      return;\n    }\n\n    animator.listen(this, 'complete', onAnimationsComplete);\n    animator.listen(this, 'progress', onAnimationProgress);\n\n    this._initialize();\n    if (this.attached) {\n      this.update();\n    }\n  }\n\n  get aspectRatio() {\n    const {options: {aspectRatio, maintainAspectRatio}, width, height, _aspectRatio} = this;\n    if (!isNullOrUndef(aspectRatio)) {\n      // If aspectRatio is defined in options, use that.\n      return aspectRatio;\n    }\n\n    if (maintainAspectRatio && _aspectRatio) {\n      // If maintainAspectRatio is truthly and we had previously determined _aspectRatio, use that\n      return _aspectRatio;\n    }\n\n    // Calculate\n    return height ? width / height : null;\n  }\n\n  get data() {\n    return this.config.data;\n  }\n\n  set data(data) {\n    this.config.data = data;\n  }\n\n  get options() {\n    return this._options;\n  }\n\n  set options(options) {\n    this.config.options = options;\n  }\n\n  get registry() {\n    return registry;\n  }\n\n  /**\n\t * @private\n\t */\n  _initialize() {\n    // Before init plugin notification\n    this.notifyPlugins('beforeInit');\n\n    if (this.options.responsive) {\n      this.resize();\n    } else {\n      retinaScale(this, this.options.devicePixelRatio);\n    }\n\n    this.bindEvents();\n\n    // After init plugin notification\n    this.notifyPlugins('afterInit');\n\n    return this;\n  }\n\n  clear() {\n    clearCanvas(this.canvas, this.ctx);\n    return this;\n  }\n\n  stop() {\n    animator.stop(this);\n    return this;\n  }\n\n  /**\n\t * Resize the chart to its container or to explicit dimensions.\n\t * @param {number} [width]\n\t * @param {number} [height]\n\t */\n  resize(width, height) {\n    if (!animator.running(this)) {\n      this._resize(width, height);\n    } else {\n      this._resizeBeforeDraw = {width, height};\n    }\n  }\n\n  _resize(width, height) {\n    const options = this.options;\n    const canvas = this.canvas;\n    const aspectRatio = options.maintainAspectRatio && this.aspectRatio;\n    const newSize = this.platform.getMaximumSize(canvas, width, height, aspectRatio);\n    const newRatio = options.devicePixelRatio || this.platform.getDevicePixelRatio();\n    const mode = this.width ? 'resize' : 'attach';\n\n    this.width = newSize.width;\n    this.height = newSize.height;\n    this._aspectRatio = this.aspectRatio;\n    if (!retinaScale(this, newRatio, true)) {\n      return;\n    }\n\n    this.notifyPlugins('resize', {size: newSize});\n\n    callCallback(options.onResize, [this, newSize], this);\n\n    if (this.attached) {\n      if (this._doResize(mode)) {\n        // The resize update is delayed, only draw without updating.\n        this.render();\n      }\n    }\n  }\n\n  ensureScalesHaveIDs() {\n    const options = this.options;\n    const scalesOptions = options.scales || {};\n\n    each(scalesOptions, (axisOptions, axisID) => {\n      axisOptions.id = axisID;\n    });\n  }\n\n  /**\n\t * Builds a map of scale ID to scale object for future lookup.\n\t */\n  buildOrUpdateScales() {\n    const options = this.options;\n    const scaleOpts = options.scales;\n    const scales = this.scales;\n    const updated = Object.keys(scales).reduce((obj, id) => {\n      obj[id] = false;\n      return obj;\n    }, {});\n    let items = [];\n\n    if (scaleOpts) {\n      items = items.concat(\n        Object.keys(scaleOpts).map((id) => {\n          const scaleOptions = scaleOpts[id];\n          const axis = determineAxis(id, scaleOptions);\n          const isRadial = axis === 'r';\n          const isHorizontal = axis === 'x';\n          return {\n            options: scaleOptions,\n            dposition: isRadial ? 'chartArea' : isHorizontal ? 'bottom' : 'left',\n            dtype: isRadial ? 'radialLinear' : isHorizontal ? 'category' : 'linear'\n          };\n        })\n      );\n    }\n\n    each(items, (item) => {\n      const scaleOptions = item.options;\n      const id = scaleOptions.id;\n      const axis = determineAxis(id, scaleOptions);\n      const scaleType = valueOrDefault(scaleOptions.type, item.dtype);\n\n      if (scaleOptions.position === undefined || positionIsHorizontal(scaleOptions.position, axis) !== positionIsHorizontal(item.dposition)) {\n        scaleOptions.position = item.dposition;\n      }\n\n      updated[id] = true;\n      let scale = null;\n      if (id in scales && scales[id].type === scaleType) {\n        scale = scales[id];\n      } else {\n        const scaleClass = registry.getScale(scaleType);\n        scale = new scaleClass({\n          id,\n          type: scaleType,\n          ctx: this.ctx,\n          chart: this\n        });\n        scales[scale.id] = scale;\n      }\n\n      scale.init(scaleOptions, options);\n    });\n    // clear up discarded scales\n    each(updated, (hasUpdated, id) => {\n      if (!hasUpdated) {\n        delete scales[id];\n      }\n    });\n\n    each(scales, (scale) => {\n      layouts.configure(this, scale, scale.options);\n      layouts.addBox(this, scale);\n    });\n  }\n\n  /**\n\t * @private\n\t */\n  _updateMetasets() {\n    const metasets = this._metasets;\n    const numData = this.data.datasets.length;\n    const numMeta = metasets.length;\n\n    metasets.sort((a, b) => a.index - b.index);\n    if (numMeta > numData) {\n      for (let i = numData; i < numMeta; ++i) {\n        this._destroyDatasetMeta(i);\n      }\n      metasets.splice(numData, numMeta - numData);\n    }\n    this._sortedMetasets = metasets.slice(0).sort(compare2Level('order', 'index'));\n  }\n\n  /**\n\t * @private\n\t */\n  _removeUnreferencedMetasets() {\n    const {_metasets: metasets, data: {datasets}} = this;\n    if (metasets.length > datasets.length) {\n      delete this._stacks;\n    }\n    metasets.forEach((meta, index) => {\n      if (datasets.filter(x => x === meta._dataset).length === 0) {\n        this._destroyDatasetMeta(index);\n      }\n    });\n  }\n\n  buildOrUpdateControllers() {\n    const newControllers = [];\n    const datasets = this.data.datasets;\n    let i, ilen;\n\n    this._removeUnreferencedMetasets();\n\n    for (i = 0, ilen = datasets.length; i < ilen; i++) {\n      const dataset = datasets[i];\n      let meta = this.getDatasetMeta(i);\n      const type = dataset.type || this.config.type;\n\n      if (meta.type && meta.type !== type) {\n        this._destroyDatasetMeta(i);\n        meta = this.getDatasetMeta(i);\n      }\n      meta.type = type;\n      meta.indexAxis = dataset.indexAxis || getIndexAxis(type, this.options);\n      meta.order = dataset.order || 0;\n      meta.index = i;\n      meta.label = '' + dataset.label;\n      meta.visible = this.isDatasetVisible(i);\n\n      if (meta.controller) {\n        meta.controller.updateIndex(i);\n        meta.controller.linkScales();\n      } else {\n        const ControllerClass = registry.getController(type);\n        const {datasetElementType, dataElementType} = defaults.datasets[type];\n        Object.assign(ControllerClass, {\n          dataElementType: registry.getElement(dataElementType),\n          datasetElementType: datasetElementType && registry.getElement(datasetElementType)\n        });\n        meta.controller = new ControllerClass(this, i);\n        newControllers.push(meta.controller);\n      }\n    }\n\n    this._updateMetasets();\n    return newControllers;\n  }\n\n  /**\n\t * Reset the elements of all datasets\n\t * @private\n\t */\n  _resetElements() {\n    each(this.data.datasets, (dataset, datasetIndex) => {\n      this.getDatasetMeta(datasetIndex).controller.reset();\n    }, this);\n  }\n\n  /**\n\t* Resets the chart back to its state before the initial animation\n\t*/\n  reset() {\n    this._resetElements();\n    this.notifyPlugins('reset');\n  }\n\n  update(mode) {\n    const config = this.config;\n\n    config.update();\n    const options = this._options = config.createResolver(config.chartOptionScopes(), this.getContext());\n    const animsDisabled = this._animationsDisabled = !options.animation;\n\n    this._updateScales();\n    this._checkEventBindings();\n    this._updateHiddenIndices();\n\n    // plugins options references might have change, let's invalidate the cache\n    // https://github.com/chartjs/Chart.js/issues/5111#issuecomment-355934167\n    this._plugins.invalidate();\n\n    if (this.notifyPlugins('beforeUpdate', {mode, cancelable: true}) === false) {\n      return;\n    }\n\n    // Make sure dataset controllers are updated and new controllers are reset\n    const newControllers = this.buildOrUpdateControllers();\n\n    this.notifyPlugins('beforeElementsUpdate');\n\n    // Make sure all dataset controllers have correct meta data counts\n    let minPadding = 0;\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; i++) {\n      const {controller} = this.getDatasetMeta(i);\n      const reset = !animsDisabled && newControllers.indexOf(controller) === -1;\n      // New controllers will be reset after the layout pass, so we only want to modify\n      // elements added to new datasets\n      controller.buildOrUpdateElements(reset);\n      minPadding = Math.max(+controller.getMaxOverflow(), minPadding);\n    }\n    minPadding = this._minPadding = options.layout.autoPadding ? minPadding : 0;\n    this._updateLayout(minPadding);\n\n    // Only reset the controllers if we have animations\n    if (!animsDisabled) {\n      // Can only reset the new controllers after the scales have been updated\n      // Reset is done to get the starting point for the initial animation\n      each(newControllers, (controller) => {\n        controller.reset();\n      });\n    }\n\n    this._updateDatasets(mode);\n\n    // Do this before render so that any plugins that need final scale updates can use it\n    this.notifyPlugins('afterUpdate', {mode});\n\n    this._layers.sort(compare2Level('z', '_idx'));\n\n    // Replay last event from before update, or set hover styles on active elements\n    const {_active, _lastEvent} = this;\n    if (_lastEvent) {\n      this._eventHandler(_lastEvent, true);\n    } else if (_active.length) {\n      this._updateHoverStyles(_active, _active, true);\n    }\n\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  _updateScales() {\n    each(this.scales, (scale) => {\n      layouts.removeBox(this, scale);\n    });\n\n    this.ensureScalesHaveIDs();\n    this.buildOrUpdateScales();\n  }\n\n  /**\n   * @private\n   */\n  _checkEventBindings() {\n    const options = this.options;\n    const existingEvents = new Set(Object.keys(this._listeners));\n    const newEvents = new Set(options.events);\n\n    if (!setsEqual(existingEvents, newEvents) || !!this._responsiveListeners !== options.responsive) {\n      // The configured events have changed. Rebind.\n      this.unbindEvents();\n      this.bindEvents();\n    }\n  }\n\n  /**\n   * @private\n   */\n  _updateHiddenIndices() {\n    const {_hiddenIndices} = this;\n    const changes = this._getUniformDataChanges() || [];\n    for (const {method, start, count} of changes) {\n      const move = method === '_removeElements' ? -count : count;\n      moveNumericKeys(_hiddenIndices, start, move);\n    }\n  }\n\n  /**\n   * @private\n   */\n  _getUniformDataChanges() {\n    const _dataChanges = this._dataChanges;\n    if (!_dataChanges || !_dataChanges.length) {\n      return;\n    }\n\n    this._dataChanges = [];\n    const datasetCount = this.data.datasets.length;\n    const makeSet = (idx) => new Set(\n      _dataChanges\n        .filter(c => c[0] === idx)\n        .map((c, i) => i + ',' + c.splice(1).join(','))\n    );\n\n    const changeSet = makeSet(0);\n    for (let i = 1; i < datasetCount; i++) {\n      if (!setsEqual(changeSet, makeSet(i))) {\n        return;\n      }\n    }\n    return Array.from(changeSet)\n      .map(c => c.split(','))\n      .map(a => ({method: a[1], start: +a[2], count: +a[3]}));\n  }\n\n  /**\n\t * Updates the chart layout unless a plugin returns `false` to the `beforeLayout`\n\t * hook, in which case, plugins will not be called on `afterLayout`.\n\t * @private\n\t */\n  _updateLayout(minPadding) {\n    if (this.notifyPlugins('beforeLayout', {cancelable: true}) === false) {\n      return;\n    }\n\n    layouts.update(this, this.width, this.height, minPadding);\n\n    const area = this.chartArea;\n    const noArea = area.width <= 0 || area.height <= 0;\n\n    this._layers = [];\n    each(this.boxes, (box) => {\n      if (noArea && box.position === 'chartArea') {\n        // Skip drawing and configuring chartArea boxes when chartArea is zero or negative\n        return;\n      }\n\n      // configure is called twice, once in core.scale.update and once here.\n      // Here the boxes are fully updated and at their final positions.\n      if (box.configure) {\n        box.configure();\n      }\n      this._layers.push(...box._layers());\n    }, this);\n\n    this._layers.forEach((item, index) => {\n      item._idx = index;\n    });\n\n    this.notifyPlugins('afterLayout');\n  }\n\n  /**\n\t * Updates all datasets unless a plugin returns `false` to the `beforeDatasetsUpdate`\n\t * hook, in which case, plugins will not be called on `afterDatasetsUpdate`.\n\t * @private\n\t */\n  _updateDatasets(mode) {\n    if (this.notifyPlugins('beforeDatasetsUpdate', {mode, cancelable: true}) === false) {\n      return;\n    }\n\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this.getDatasetMeta(i).controller.configure();\n    }\n\n    for (let i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this._updateDataset(i, isFunction(mode) ? mode({datasetIndex: i}) : mode);\n    }\n\n    this.notifyPlugins('afterDatasetsUpdate', {mode});\n  }\n\n  /**\n\t * Updates dataset at index unless a plugin returns `false` to the `beforeDatasetUpdate`\n\t * hook, in which case, plugins will not be called on `afterDatasetUpdate`.\n\t * @private\n\t */\n  _updateDataset(index, mode) {\n    const meta = this.getDatasetMeta(index);\n    const args = {meta, index, mode, cancelable: true};\n\n    if (this.notifyPlugins('beforeDatasetUpdate', args) === false) {\n      return;\n    }\n\n    meta.controller._update(mode);\n\n    args.cancelable = false;\n    this.notifyPlugins('afterDatasetUpdate', args);\n  }\n\n  render() {\n    if (this.notifyPlugins('beforeRender', {cancelable: true}) === false) {\n      return;\n    }\n\n    if (animator.has(this)) {\n      if (this.attached && !animator.running(this)) {\n        animator.start(this);\n      }\n    } else {\n      this.draw();\n      onAnimationsComplete({chart: this});\n    }\n  }\n\n  draw() {\n    let i;\n    if (this._resizeBeforeDraw) {\n      const {width, height} = this._resizeBeforeDraw;\n      // Unset pending resize request now to avoid possible recursion within _resize\n      this._resizeBeforeDraw = null;\n      this._resize(width, height);\n    }\n    this.clear();\n\n    if (this.width <= 0 || this.height <= 0) {\n      return;\n    }\n\n    if (this.notifyPlugins('beforeDraw', {cancelable: true}) === false) {\n      return;\n    }\n\n    // Because of plugin hooks (before/afterDatasetsDraw), datasets can't\n    // currently be part of layers. Instead, we draw\n    // layers <= 0 before(default, backward compat), and the rest after\n    const layers = this._layers;\n    for (i = 0; i < layers.length && layers[i].z <= 0; ++i) {\n      layers[i].draw(this.chartArea);\n    }\n\n    this._drawDatasets();\n\n    // Rest of layers\n    for (; i < layers.length; ++i) {\n      layers[i].draw(this.chartArea);\n    }\n\n    this.notifyPlugins('afterDraw');\n  }\n\n  /**\n\t * @private\n\t */\n  _getSortedDatasetMetas(filterVisible) {\n    const metasets = this._sortedMetasets;\n    const result = [];\n    let i, ilen;\n\n    for (i = 0, ilen = metasets.length; i < ilen; ++i) {\n      const meta = metasets[i];\n      if (!filterVisible || meta.visible) {\n        result.push(meta);\n      }\n    }\n\n    return result;\n  }\n\n  /**\n\t * Gets the visible dataset metas in drawing order\n\t * @return {object[]}\n\t */\n  getSortedVisibleDatasetMetas() {\n    return this._getSortedDatasetMetas(true);\n  }\n\n  /**\n\t * Draws all datasets unless a plugin returns `false` to the `beforeDatasetsDraw`\n\t * hook, in which case, plugins will not be called on `afterDatasetsDraw`.\n\t * @private\n\t */\n  _drawDatasets() {\n    if (this.notifyPlugins('beforeDatasetsDraw', {cancelable: true}) === false) {\n      return;\n    }\n\n    const metasets = this.getSortedVisibleDatasetMetas();\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      this._drawDataset(metasets[i]);\n    }\n\n    this.notifyPlugins('afterDatasetsDraw');\n  }\n\n  /**\n\t * Draws dataset at index unless a plugin returns `false` to the `beforeDatasetDraw`\n\t * hook, in which case, plugins will not be called on `afterDatasetDraw`.\n\t * @private\n\t */\n  _drawDataset(meta) {\n    const ctx = this.ctx;\n    const clip = meta._clip;\n    const useClip = !clip.disabled;\n    const area = getDatasetArea(meta, this.chartArea);\n    const args = {\n      meta,\n      index: meta.index,\n      cancelable: true\n    };\n\n    if (this.notifyPlugins('beforeDatasetDraw', args) === false) {\n      return;\n    }\n\n    if (useClip) {\n      clipArea(ctx, {\n        left: clip.left === false ? 0 : area.left - clip.left,\n        right: clip.right === false ? this.width : area.right + clip.right,\n        top: clip.top === false ? 0 : area.top - clip.top,\n        bottom: clip.bottom === false ? this.height : area.bottom + clip.bottom\n      });\n    }\n\n    meta.controller.draw();\n\n    if (useClip) {\n      unclipArea(ctx);\n    }\n\n    args.cancelable = false;\n    this.notifyPlugins('afterDatasetDraw', args);\n  }\n\n  /**\n   * Checks whether the given point is in the chart area.\n   * @param {Point} point - in relative coordinates (see, e.g., getRelativePosition)\n   * @returns {boolean}\n   */\n  isPointInArea(point) {\n    return _isPointInArea(point, this.chartArea, this._minPadding);\n  }\n\n  getElementsAtEventForMode(e, mode, options, useFinalPosition) {\n    const method = Interaction.modes[mode];\n    if (typeof method === 'function') {\n      return method(this, e, options, useFinalPosition);\n    }\n\n    return [];\n  }\n\n  getDatasetMeta(datasetIndex) {\n    const dataset = this.data.datasets[datasetIndex];\n    const metasets = this._metasets;\n    let meta = metasets.filter(x => x && x._dataset === dataset).pop();\n\n    if (!meta) {\n      meta = {\n        type: null,\n        data: [],\n        dataset: null,\n        controller: null,\n        hidden: null,\t\t\t// See isDatasetVisible() comment\n        xAxisID: null,\n        yAxisID: null,\n        order: dataset && dataset.order || 0,\n        index: datasetIndex,\n        _dataset: dataset,\n        _parsed: [],\n        _sorted: false\n      };\n      metasets.push(meta);\n    }\n\n    return meta;\n  }\n\n  getContext() {\n    return this.$context || (this.$context = createContext(null, {chart: this, type: 'chart'}));\n  }\n\n  getVisibleDatasetCount() {\n    return this.getSortedVisibleDatasetMetas().length;\n  }\n\n  isDatasetVisible(datasetIndex) {\n    const dataset = this.data.datasets[datasetIndex];\n    if (!dataset) {\n      return false;\n    }\n\n    const meta = this.getDatasetMeta(datasetIndex);\n\n    // meta.hidden is a per chart dataset hidden flag override with 3 states: if true or false,\n    // the dataset.hidden value is ignored, else if null, the dataset hidden state is returned.\n    return typeof meta.hidden === 'boolean' ? !meta.hidden : !dataset.hidden;\n  }\n\n  setDatasetVisibility(datasetIndex, visible) {\n    const meta = this.getDatasetMeta(datasetIndex);\n    meta.hidden = !visible;\n  }\n\n  toggleDataVisibility(index) {\n    this._hiddenIndices[index] = !this._hiddenIndices[index];\n  }\n\n  getDataVisibility(index) {\n    return !this._hiddenIndices[index];\n  }\n\n  /**\n\t * @private\n\t */\n  _updateVisibility(datasetIndex, dataIndex, visible) {\n    const mode = visible ? 'show' : 'hide';\n    const meta = this.getDatasetMeta(datasetIndex);\n    const anims = meta.controller._resolveAnimations(undefined, mode);\n\n    if (defined(dataIndex)) {\n      meta.data[dataIndex].hidden = !visible;\n      this.update();\n    } else {\n      this.setDatasetVisibility(datasetIndex, visible);\n      // Animate visible state, so hide animation can be seen. This could be handled better if update / updateDataset returned a Promise.\n      anims.update(meta, {visible});\n      this.update((ctx) => ctx.datasetIndex === datasetIndex ? mode : undefined);\n    }\n  }\n\n  hide(datasetIndex, dataIndex) {\n    this._updateVisibility(datasetIndex, dataIndex, false);\n  }\n\n  show(datasetIndex, dataIndex) {\n    this._updateVisibility(datasetIndex, dataIndex, true);\n  }\n\n  /**\n\t * @private\n\t */\n  _destroyDatasetMeta(datasetIndex) {\n    const meta = this._metasets[datasetIndex];\n    if (meta && meta.controller) {\n      meta.controller._destroy();\n    }\n    delete this._metasets[datasetIndex];\n  }\n\n  _stop() {\n    let i, ilen;\n    this.stop();\n    animator.remove(this);\n\n    for (i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n      this._destroyDatasetMeta(i);\n    }\n  }\n\n  destroy() {\n    this.notifyPlugins('beforeDestroy');\n    const {canvas, ctx} = this;\n\n    this._stop();\n    this.config.clearCache();\n\n    if (canvas) {\n      this.unbindEvents();\n      clearCanvas(canvas, ctx);\n      this.platform.releaseContext(ctx);\n      this.canvas = null;\n      this.ctx = null;\n    }\n\n    delete instances[this.id];\n\n    this.notifyPlugins('afterDestroy');\n  }\n\n  toBase64Image(...args) {\n    return this.canvas.toDataURL(...args);\n  }\n\n  /**\n\t * @private\n\t */\n  bindEvents() {\n    this.bindUserEvents();\n    if (this.options.responsive) {\n      this.bindResponsiveEvents();\n    } else {\n      this.attached = true;\n    }\n  }\n\n  /**\n   * @private\n   */\n  bindUserEvents() {\n    const listeners = this._listeners;\n    const platform = this.platform;\n\n    const _add = (type, listener) => {\n      platform.addEventListener(this, type, listener);\n      listeners[type] = listener;\n    };\n\n    const listener = (e, x, y) => {\n      e.offsetX = x;\n      e.offsetY = y;\n      this._eventHandler(e);\n    };\n\n    each(this.options.events, (type) => _add(type, listener));\n  }\n\n  /**\n   * @private\n   */\n  bindResponsiveEvents() {\n    if (!this._responsiveListeners) {\n      this._responsiveListeners = {};\n    }\n    const listeners = this._responsiveListeners;\n    const platform = this.platform;\n\n    const _add = (type, listener) => {\n      platform.addEventListener(this, type, listener);\n      listeners[type] = listener;\n    };\n    const _remove = (type, listener) => {\n      if (listeners[type]) {\n        platform.removeEventListener(this, type, listener);\n        delete listeners[type];\n      }\n    };\n\n    const listener = (width, height) => {\n      if (this.canvas) {\n        this.resize(width, height);\n      }\n    };\n\n    let detached; // eslint-disable-line prefer-const\n    const attached = () => {\n      _remove('attach', attached);\n\n      this.attached = true;\n      this.resize();\n\n      _add('resize', listener);\n      _add('detach', detached);\n    };\n\n    detached = () => {\n      this.attached = false;\n\n      _remove('resize', listener);\n\n      // Stop animating and remove metasets, so when re-attached, the animations start from beginning.\n      this._stop();\n      this._resize(0, 0);\n\n      _add('attach', attached);\n    };\n\n    if (platform.isAttached(this.canvas)) {\n      attached();\n    } else {\n      detached();\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  unbindEvents() {\n    each(this._listeners, (listener, type) => {\n      this.platform.removeEventListener(this, type, listener);\n    });\n    this._listeners = {};\n\n    each(this._responsiveListeners, (listener, type) => {\n      this.platform.removeEventListener(this, type, listener);\n    });\n    this._responsiveListeners = undefined;\n  }\n\n  updateHoverStyle(items, mode, enabled) {\n    const prefix = enabled ? 'set' : 'remove';\n    let meta, item, i, ilen;\n\n    if (mode === 'dataset') {\n      meta = this.getDatasetMeta(items[0].datasetIndex);\n      meta.controller['_' + prefix + 'DatasetHoverStyle']();\n    }\n\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      item = items[i];\n      const controller = item && this.getDatasetMeta(item.datasetIndex).controller;\n      if (controller) {\n        controller[prefix + 'HoverStyle'](item.element, item.datasetIndex, item.index);\n      }\n    }\n  }\n\n  /**\n\t * Get active (hovered) elements\n\t * @returns array\n\t */\n  getActiveElements() {\n    return this._active || [];\n  }\n\n  /**\n\t * Set active (hovered) elements\n\t * @param {array} activeElements New active data points\n\t */\n  setActiveElements(activeElements) {\n    const lastActive = this._active || [];\n    const active = activeElements.map(({datasetIndex, index}) => {\n      const meta = this.getDatasetMeta(datasetIndex);\n      if (!meta) {\n        throw new Error('No dataset found at index ' + datasetIndex);\n      }\n\n      return {\n        datasetIndex,\n        element: meta.data[index],\n        index,\n      };\n    });\n    const changed = !_elementsEqual(active, lastActive);\n\n    if (changed) {\n      this._active = active;\n      // Make sure we don't use the previous mouse event to override the active elements in update.\n      this._lastEvent = null;\n      this._updateHoverStyles(active, lastActive);\n    }\n  }\n\n  /**\n\t * Calls enabled plugins on the specified hook and with the given args.\n\t * This method immediately returns as soon as a plugin explicitly returns false. The\n\t * returned value can be used, for instance, to interrupt the current action.\n\t * @param {string} hook - The name of the plugin method to call (e.g. 'beforeUpdate').\n\t * @param {Object} [args] - Extra arguments to apply to the hook call.\n   * @param {import('./core.plugins.js').filterCallback} [filter] - Filtering function for limiting which plugins are notified\n\t * @returns {boolean} false if any of the plugins return false, else returns true.\n\t */\n  notifyPlugins(hook, args, filter) {\n    return this._plugins.notify(this, hook, args, filter);\n  }\n\n  /**\n   * Check if a plugin with the specific ID is registered and enabled\n   * @param {string} pluginId - The ID of the plugin of which to check if it is enabled\n   * @returns {boolean}\n   */\n  isPluginEnabled(pluginId) {\n    return this._plugins._cache.filter(p => p.plugin.id === pluginId).length === 1;\n  }\n\n  /**\n\t * @private\n\t */\n  _updateHoverStyles(active, lastActive, replay) {\n    const hoverOptions = this.options.hover;\n    const diff = (a, b) => a.filter(x => !b.some(y => x.datasetIndex === y.datasetIndex && x.index === y.index));\n    const deactivated = diff(lastActive, active);\n    const activated = replay ? active : diff(active, lastActive);\n\n    if (deactivated.length) {\n      this.updateHoverStyle(deactivated, hoverOptions.mode, false);\n    }\n\n    if (activated.length && hoverOptions.mode) {\n      this.updateHoverStyle(activated, hoverOptions.mode, true);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _eventHandler(e, replay) {\n    const args = {\n      event: e,\n      replay,\n      cancelable: true,\n      inChartArea: this.isPointInArea(e)\n    };\n    const eventFilter = (plugin) => (plugin.options.events || this.options.events).includes(e.native.type);\n\n    if (this.notifyPlugins('beforeEvent', args, eventFilter) === false) {\n      return;\n    }\n\n    const changed = this._handleEvent(e, replay, args.inChartArea);\n\n    args.cancelable = false;\n    this.notifyPlugins('afterEvent', args, eventFilter);\n\n    if (changed || args.changed) {\n      this.render();\n    }\n\n    return this;\n  }\n\n  /**\n\t * Handle an event\n\t * @param {ChartEvent} e the event to handle\n\t * @param {boolean} [replay] - true if the event was replayed by `update`\n   * @param {boolean} [inChartArea] - true if the event is inside chartArea\n\t * @return {boolean} true if the chart needs to re-render\n\t * @private\n\t */\n  _handleEvent(e, replay, inChartArea) {\n    const {_active: lastActive = [], options} = this;\n\n    // If the event is replayed from `update`, we should evaluate with the final positions.\n    //\n    // The `replay`:\n    // It's the last event (excluding click) that has occurred before `update`.\n    // So mouse has not moved. It's also over the chart, because there is a `replay`.\n    //\n    // The why:\n    // If animations are active, the elements haven't moved yet compared to state before update.\n    // But if they will, we are activating the elements that would be active, if this check\n    // was done after the animations have completed. => \"final positions\".\n    // If there is no animations, the \"final\" and \"current\" positions are equal.\n    // This is done so we do not have to evaluate the active elements each animation frame\n    // - it would be expensive.\n    const useFinalPosition = replay;\n    const active = this._getActiveElements(e, lastActive, inChartArea, useFinalPosition);\n    const isClick = _isClickEvent(e);\n    const lastEvent = determineLastEvent(e, this._lastEvent, inChartArea, isClick);\n\n    if (inChartArea) {\n      // Set _lastEvent to null while we are processing the event handlers.\n      // This prevents recursion if the handler calls chart.update()\n      this._lastEvent = null;\n\n      // Invoke onHover hook\n      callCallback(options.onHover, [e, active, this], this);\n\n      if (isClick) {\n        callCallback(options.onClick, [e, active, this], this);\n      }\n    }\n\n    const changed = !_elementsEqual(active, lastActive);\n    if (changed || replay) {\n      this._active = active;\n      this._updateHoverStyles(active, lastActive, replay);\n    }\n\n    this._lastEvent = lastEvent;\n\n    return changed;\n  }\n\n  /**\n   * @param {ChartEvent} e - The event\n   * @param {import('../types/index.js').ActiveElement[]} lastActive - Previously active elements\n   * @param {boolean} inChartArea - Is the event inside chartArea\n   * @param {boolean} useFinalPosition - Should the evaluation be done with current or final (after animation) element positions\n   * @returns {import('../types/index.js').ActiveElement[]} - The active elements\n   * @pravate\n   */\n  _getActiveElements(e, lastActive, inChartArea, useFinalPosition) {\n    if (e.type === 'mouseout') {\n      return [];\n    }\n\n    if (!inChartArea) {\n      // Let user control the active elements outside chartArea. Eg. using Legend.\n      return lastActive;\n    }\n\n    const hoverOptions = this.options.hover;\n    return this.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions, useFinalPosition);\n  }\n}\n\n// @ts-ignore\nfunction invalidatePlugins() {\n  return each(Chart.instances, (chart) => chart._plugins.invalidate());\n}\n\nexport default Chart;\n","import Element from '../core/core.element.js';\nimport {_angleBetween, getAngleFromPoint, TAU, HALF_PI, valueOrDefault} from '../helpers/index.js';\nimport {PI, _isBetween, _limitValue} from '../helpers/helpers.math.js';\nimport {_readValueToProps} from '../helpers/helpers.options.js';\nimport type {ArcOptions, Point} from '../types/index.js';\n\n\nfunction clipArc(ctx: CanvasRenderingContext2D, element: ArcElement, endAngle: number) {\n  const {startAngle, pixelMargin, x, y, outerRadius, innerRadius} = element;\n  let angleMargin = pixelMargin / outerRadius;\n\n  // Draw an inner border by clipping the arc and drawing a double-width border\n  // Enlarge the clipping arc by 0.33 pixels to eliminate glitches between borders\n  ctx.beginPath();\n  ctx.arc(x, y, outerRadius, startAngle - angleMargin, endAngle + angleMargin);\n  if (innerRadius > pixelMargin) {\n    angleMargin = pixelMargin / innerRadius;\n    ctx.arc(x, y, innerRadius, endAngle + angleMargin, startAngle - angleMargin, true);\n  } else {\n    ctx.arc(x, y, pixelMargin, endAngle + HALF_PI, startAngle - HALF_PI);\n  }\n  ctx.closePath();\n  ctx.clip();\n}\n\nfunction toRadiusCorners(value) {\n  return _readValueToProps(value, ['outerStart', 'outerEnd', 'innerStart', 'innerEnd']);\n}\n\n/**\n * Parse border radius from the provided options\n */\nfunction parseBorderRadius(arc: ArcElement, innerRadius: number, outerRadius: number, angleDelta: number) {\n  const o = toRadiusCorners(arc.options.borderRadius);\n  const halfThickness = (outerRadius - innerRadius) / 2;\n  const innerLimit = Math.min(halfThickness, angleDelta * innerRadius / 2);\n\n  // Outer limits are complicated. We want to compute the available angular distance at\n  // a radius of outerRadius - borderRadius because for small angular distances, this term limits.\n  // We compute at r = outerRadius - borderRadius because this circle defines the center of the border corners.\n  //\n  // If the borderRadius is large, that value can become negative.\n  // This causes the outer borders to lose their radius entirely, which is rather unexpected. To solve that, if borderRadius > outerRadius\n  // we know that the thickness term will dominate and compute the limits at that point\n  const computeOuterLimit = (val) => {\n    const outerArcLimit = (outerRadius - Math.min(halfThickness, val)) * angleDelta / 2;\n    return _limitValue(val, 0, Math.min(halfThickness, outerArcLimit));\n  };\n\n  return {\n    outerStart: computeOuterLimit(o.outerStart),\n    outerEnd: computeOuterLimit(o.outerEnd),\n    innerStart: _limitValue(o.innerStart, 0, innerLimit),\n    innerEnd: _limitValue(o.innerEnd, 0, innerLimit),\n  };\n}\n\n/**\n * Convert (r, 𝜃) to (x, y)\n */\nfunction rThetaToXY(r: number, theta: number, x: number, y: number) {\n  return {\n    x: x + r * Math.cos(theta),\n    y: y + r * Math.sin(theta),\n  };\n}\n\n\n/**\n * Path the arc, respecting border radius by separating into left and right halves.\n *\n *   Start      End\n *\n *    1--->a--->2    Outer\n *   /           \\\n *   8           3\n *   |           |\n *   |           |\n *   7           4\n *   \\           /\n *    6<---b<---5    Inner\n */\nfunction pathArc(\n  ctx: CanvasRenderingContext2D,\n  element: ArcElement,\n  offset: number,\n  spacing: number,\n  end: number,\n  circular: boolean,\n) {\n  const {x, y, startAngle: start, pixelMargin, innerRadius: innerR} = element;\n\n  const outerRadius = Math.max(element.outerRadius + spacing + offset - pixelMargin, 0);\n  const innerRadius = innerR > 0 ? innerR + spacing + offset + pixelMargin : 0;\n\n  let spacingOffset = 0;\n  const alpha = end - start;\n\n  if (spacing) {\n    // When spacing is present, it is the same for all items\n    // So we adjust the start and end angle of the arc such that\n    // the distance is the same as it would be without the spacing\n    const noSpacingInnerRadius = innerR > 0 ? innerR - spacing : 0;\n    const noSpacingOuterRadius = outerRadius > 0 ? outerRadius - spacing : 0;\n    const avNogSpacingRadius = (noSpacingInnerRadius + noSpacingOuterRadius) / 2;\n    const adjustedAngle = avNogSpacingRadius !== 0 ? (alpha * avNogSpacingRadius) / (avNogSpacingRadius + spacing) : alpha;\n    spacingOffset = (alpha - adjustedAngle) / 2;\n  }\n\n  const beta = Math.max(0.001, alpha * outerRadius - offset / PI) / outerRadius;\n  const angleOffset = (alpha - beta) / 2;\n  const startAngle = start + angleOffset + spacingOffset;\n  const endAngle = end - angleOffset - spacingOffset;\n  const {outerStart, outerEnd, innerStart, innerEnd} = parseBorderRadius(element, innerRadius, outerRadius, endAngle - startAngle);\n\n  const outerStartAdjustedRadius = outerRadius - outerStart;\n  const outerEndAdjustedRadius = outerRadius - outerEnd;\n  const outerStartAdjustedAngle = startAngle + outerStart / outerStartAdjustedRadius;\n  const outerEndAdjustedAngle = endAngle - outerEnd / outerEndAdjustedRadius;\n\n  const innerStartAdjustedRadius = innerRadius + innerStart;\n  const innerEndAdjustedRadius = innerRadius + innerEnd;\n  const innerStartAdjustedAngle = startAngle + innerStart / innerStartAdjustedRadius;\n  const innerEndAdjustedAngle = endAngle - innerEnd / innerEndAdjustedRadius;\n\n  ctx.beginPath();\n\n  if (circular) {\n    // The first arc segments from point 1 to point a to point 2\n    const outerMidAdjustedAngle = (outerStartAdjustedAngle + outerEndAdjustedAngle) / 2;\n    ctx.arc(x, y, outerRadius, outerStartAdjustedAngle, outerMidAdjustedAngle);\n    ctx.arc(x, y, outerRadius, outerMidAdjustedAngle, outerEndAdjustedAngle);\n\n    // The corner segment from point 2 to point 3\n    if (outerEnd > 0) {\n      const pCenter = rThetaToXY(outerEndAdjustedRadius, outerEndAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, outerEnd, outerEndAdjustedAngle, endAngle + HALF_PI);\n    }\n\n    // The line from point 3 to point 4\n    const p4 = rThetaToXY(innerEndAdjustedRadius, endAngle, x, y);\n    ctx.lineTo(p4.x, p4.y);\n\n    // The corner segment from point 4 to point 5\n    if (innerEnd > 0) {\n      const pCenter = rThetaToXY(innerEndAdjustedRadius, innerEndAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, innerEnd, endAngle + HALF_PI, innerEndAdjustedAngle + Math.PI);\n    }\n\n    // The inner arc from point 5 to point b to point 6\n    const innerMidAdjustedAngle = ((endAngle - (innerEnd / innerRadius)) + (startAngle + (innerStart / innerRadius))) / 2;\n    ctx.arc(x, y, innerRadius, endAngle - (innerEnd / innerRadius), innerMidAdjustedAngle, true);\n    ctx.arc(x, y, innerRadius, innerMidAdjustedAngle, startAngle + (innerStart / innerRadius), true);\n\n    // The corner segment from point 6 to point 7\n    if (innerStart > 0) {\n      const pCenter = rThetaToXY(innerStartAdjustedRadius, innerStartAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, innerStart, innerStartAdjustedAngle + Math.PI, startAngle - HALF_PI);\n    }\n\n    // The line from point 7 to point 8\n    const p8 = rThetaToXY(outerStartAdjustedRadius, startAngle, x, y);\n    ctx.lineTo(p8.x, p8.y);\n\n    // The corner segment from point 8 to point 1\n    if (outerStart > 0) {\n      const pCenter = rThetaToXY(outerStartAdjustedRadius, outerStartAdjustedAngle, x, y);\n      ctx.arc(pCenter.x, pCenter.y, outerStart, startAngle - HALF_PI, outerStartAdjustedAngle);\n    }\n  } else {\n    ctx.moveTo(x, y);\n\n    const outerStartX = Math.cos(outerStartAdjustedAngle) * outerRadius + x;\n    const outerStartY = Math.sin(outerStartAdjustedAngle) * outerRadius + y;\n    ctx.lineTo(outerStartX, outerStartY);\n\n    const outerEndX = Math.cos(outerEndAdjustedAngle) * outerRadius + x;\n    const outerEndY = Math.sin(outerEndAdjustedAngle) * outerRadius + y;\n    ctx.lineTo(outerEndX, outerEndY);\n  }\n\n  ctx.closePath();\n}\n\nfunction drawArc(\n  ctx: CanvasRenderingContext2D,\n  element: ArcElement,\n  offset: number,\n  spacing: number,\n  circular: boolean,\n) {\n  const {fullCircles, startAngle, circumference} = element;\n  let endAngle = element.endAngle;\n  if (fullCircles) {\n    pathArc(ctx, element, offset, spacing, endAngle, circular);\n    for (let i = 0; i < fullCircles; ++i) {\n      ctx.fill();\n    }\n    if (!isNaN(circumference)) {\n      endAngle = startAngle + (circumference % TAU || TAU);\n    }\n  }\n  pathArc(ctx, element, offset, spacing, endAngle, circular);\n  ctx.fill();\n  return endAngle;\n}\n\nfunction drawBorder(\n  ctx: CanvasRenderingContext2D,\n  element: ArcElement,\n  offset: number,\n  spacing: number,\n  circular: boolean,\n) {\n  const {fullCircles, startAngle, circumference, options} = element;\n  const {borderWidth, borderJoinStyle, borderDash, borderDashOffset} = options;\n  const inner = options.borderAlign === 'inner';\n\n  if (!borderWidth) {\n    return;\n  }\n\n  ctx.setLineDash(borderDash || []);\n  ctx.lineDashOffset = borderDashOffset;\n\n  if (inner) {\n    ctx.lineWidth = borderWidth * 2;\n    ctx.lineJoin = borderJoinStyle || 'round';\n  } else {\n    ctx.lineWidth = borderWidth;\n    ctx.lineJoin = borderJoinStyle || 'bevel';\n  }\n\n  let endAngle = element.endAngle;\n  if (fullCircles) {\n    pathArc(ctx, element, offset, spacing, endAngle, circular);\n    for (let i = 0; i < fullCircles; ++i) {\n      ctx.stroke();\n    }\n    if (!isNaN(circumference)) {\n      endAngle = startAngle + (circumference % TAU || TAU);\n    }\n  }\n\n  if (inner) {\n    clipArc(ctx, element, endAngle);\n  }\n\n  if (!fullCircles) {\n    pathArc(ctx, element, offset, spacing, endAngle, circular);\n    ctx.stroke();\n  }\n}\n\nexport interface ArcProps extends Point {\n  startAngle: number;\n  endAngle: number;\n  innerRadius: number;\n  outerRadius: number;\n  circumference: number;\n}\n\nexport default class ArcElement extends Element<ArcProps, ArcOptions> {\n\n  static id = 'arc';\n\n  static defaults = {\n    borderAlign: 'center',\n    borderColor: '#fff',\n    borderDash: [],\n    borderDashOffset: 0,\n    borderJoinStyle: undefined,\n    borderRadius: 0,\n    borderWidth: 2,\n    offset: 0,\n    spacing: 0,\n    angle: undefined,\n    circular: true,\n  };\n\n  static defaultRoutes = {\n    backgroundColor: 'backgroundColor'\n  };\n\n  static descriptors = {\n    _scriptable: true,\n    _indexable: (name) => name !== 'borderDash'\n  };\n\n  circumference: number;\n  endAngle: number;\n  fullCircles: number;\n  innerRadius: number;\n  outerRadius: number;\n  pixelMargin: number;\n  startAngle: number;\n\n  constructor(cfg) {\n    super();\n\n    this.options = undefined;\n    this.circumference = undefined;\n    this.startAngle = undefined;\n    this.endAngle = undefined;\n    this.innerRadius = undefined;\n    this.outerRadius = undefined;\n    this.pixelMargin = 0;\n    this.fullCircles = 0;\n\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n\n  inRange(chartX: number, chartY: number, useFinalPosition: boolean) {\n    const point = this.getProps(['x', 'y'], useFinalPosition);\n    const {angle, distance} = getAngleFromPoint(point, {x: chartX, y: chartY});\n    const {startAngle, endAngle, innerRadius, outerRadius, circumference} = this.getProps([\n      'startAngle',\n      'endAngle',\n      'innerRadius',\n      'outerRadius',\n      'circumference'\n    ], useFinalPosition);\n    const rAdjust = (this.options.spacing + this.options.borderWidth) / 2;\n    const _circumference = valueOrDefault(circumference, endAngle - startAngle);\n    const nonZeroBetween = _angleBetween(angle, startAngle, endAngle) && startAngle !== endAngle;\n    const betweenAngles = _circumference >= TAU || nonZeroBetween;\n    const withinRadius = _isBetween(distance, innerRadius + rAdjust, outerRadius + rAdjust);\n\n    return (betweenAngles && withinRadius);\n  }\n\n  getCenterPoint(useFinalPosition: boolean) {\n    const {x, y, startAngle, endAngle, innerRadius, outerRadius} = this.getProps([\n      'x',\n      'y',\n      'startAngle',\n      'endAngle',\n      'innerRadius',\n      'outerRadius'\n    ], useFinalPosition);\n    const {offset, spacing} = this.options;\n    const halfAngle = (startAngle + endAngle) / 2;\n    const halfRadius = (innerRadius + outerRadius + spacing + offset) / 2;\n    return {\n      x: x + Math.cos(halfAngle) * halfRadius,\n      y: y + Math.sin(halfAngle) * halfRadius\n    };\n  }\n\n  tooltipPosition(useFinalPosition: boolean) {\n    return this.getCenterPoint(useFinalPosition);\n  }\n\n  draw(ctx: CanvasRenderingContext2D) {\n    const {options, circumference} = this;\n    const offset = (options.offset || 0) / 4;\n    const spacing = (options.spacing || 0) / 2;\n    const circular = options.circular;\n    this.pixelMargin = (options.borderAlign === 'inner') ? 0.33 : 0;\n    this.fullCircles = circumference > TAU ? Math.floor(circumference / TAU) : 0;\n\n    if (circumference === 0 || this.innerRadius < 0 || this.outerRadius < 0) {\n      return;\n    }\n\n    ctx.save();\n\n    const halfAngle = (this.startAngle + this.endAngle) / 2;\n    ctx.translate(Math.cos(halfAngle) * offset, Math.sin(halfAngle) * offset);\n    const fix = 1 - Math.sin(Math.min(PI, circumference || 0));\n    const radiusOffset = offset * fix;\n\n    ctx.fillStyle = options.backgroundColor;\n    ctx.strokeStyle = options.borderColor;\n\n    drawArc(ctx, this, radiusOffset, spacing, circular);\n    drawBorder(ctx, this, radiusOffset, spacing, circular);\n\n    ctx.restore();\n  }\n}\n","import Element from '../core/core.element.js';\nimport {_bezierInterpolation, _pointInLine, _steppedInterpolation} from '../helpers/helpers.interpolation.js';\nimport {_computeSegments, _boundSegments} from '../helpers/helpers.segment.js';\nimport {_steppedLineTo, _bezierCurveTo} from '../helpers/helpers.canvas.js';\nimport {_updateBezierControlPoints} from '../helpers/helpers.curve.js';\nimport {valueOrDefault} from '../helpers/index.js';\n\n/**\n * @typedef { import('./element.point.js').default } PointElement\n */\n\nfunction setStyle(ctx, options, style = options) {\n  ctx.lineCap = valueOrDefault(style.borderCapStyle, options.borderCapStyle);\n  ctx.setLineDash(valueOrDefault(style.borderDash, options.borderDash));\n  ctx.lineDashOffset = valueOrDefault(style.borderDashOffset, options.borderDashOffset);\n  ctx.lineJoin = valueOrDefault(style.borderJoinStyle, options.borderJoinStyle);\n  ctx.lineWidth = valueOrDefault(style.borderWidth, options.borderWidth);\n  ctx.strokeStyle = valueOrDefault(style.borderColor, options.borderColor);\n}\n\nfunction lineTo(ctx, previous, target) {\n  ctx.lineTo(target.x, target.y);\n}\n\n/**\n * @returns {any}\n */\nfunction getLineMethod(options) {\n  if (options.stepped) {\n    return _steppedLineTo;\n  }\n\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\n    return _bezierCurveTo;\n  }\n\n  return lineTo;\n}\n\nfunction pathVars(points, segment, params = {}) {\n  const count = points.length;\n  const {start: paramsStart = 0, end: paramsEnd = count - 1} = params;\n  const {start: segmentStart, end: segmentEnd} = segment;\n  const start = Math.max(paramsStart, segmentStart);\n  const end = Math.min(paramsEnd, segmentEnd);\n  const outside = paramsStart < segmentStart && paramsEnd < segmentStart || paramsStart > segmentEnd && paramsEnd > segmentEnd;\n\n  return {\n    count,\n    start,\n    loop: segment.loop,\n    ilen: end < start && !outside ? count + end - start : end - start\n  };\n}\n\n/**\n * Create path from points, grouping by truncated x-coordinate\n * Points need to be in order by x-coordinate for this to work efficiently\n * @param {CanvasRenderingContext2D|Path2D} ctx - Context\n * @param {LineElement} line\n * @param {object} segment\n * @param {number} segment.start - start index of the segment, referring the points array\n * @param {number} segment.end - end index of the segment, referring the points array\n * @param {boolean} segment.loop - indicates that the segment is a loop\n * @param {object} params\n * @param {boolean} params.move - move to starting point (vs line to it)\n * @param {boolean} params.reverse - path the segment from end to start\n * @param {number} params.start - limit segment to points starting from `start` index\n * @param {number} params.end - limit segment to points ending at `start` + `count` index\n */\nfunction pathSegment(ctx, line, segment, params) {\n  const {points, options} = line;\n  const {count, start, loop, ilen} = pathVars(points, segment, params);\n  const lineMethod = getLineMethod(options);\n  // eslint-disable-next-line prefer-const\n  let {move = true, reverse} = params || {};\n  let i, point, prev;\n\n  for (i = 0; i <= ilen; ++i) {\n    point = points[(start + (reverse ? ilen - i : i)) % count];\n\n    if (point.skip) {\n      // If there is a skipped point inside a segment, spanGaps must be true\n      continue;\n    } else if (move) {\n      ctx.moveTo(point.x, point.y);\n      move = false;\n    } else {\n      lineMethod(ctx, prev, point, reverse, options.stepped);\n    }\n\n    prev = point;\n  }\n\n  if (loop) {\n    point = points[(start + (reverse ? ilen : 0)) % count];\n    lineMethod(ctx, prev, point, reverse, options.stepped);\n  }\n\n  return !!loop;\n}\n\n/**\n * Create path from points, grouping by truncated x-coordinate\n * Points need to be in order by x-coordinate for this to work efficiently\n * @param {CanvasRenderingContext2D|Path2D} ctx - Context\n * @param {LineElement} line\n * @param {object} segment\n * @param {number} segment.start - start index of the segment, referring the points array\n * @param {number} segment.end - end index of the segment, referring the points array\n * @param {boolean} segment.loop - indicates that the segment is a loop\n * @param {object} params\n * @param {boolean} params.move - move to starting point (vs line to it)\n * @param {boolean} params.reverse - path the segment from end to start\n * @param {number} params.start - limit segment to points starting from `start` index\n * @param {number} params.end - limit segment to points ending at `start` + `count` index\n */\nfunction fastPathSegment(ctx, line, segment, params) {\n  const points = line.points;\n  const {count, start, ilen} = pathVars(points, segment, params);\n  const {move = true, reverse} = params || {};\n  let avgX = 0;\n  let countX = 0;\n  let i, point, prevX, minY, maxY, lastY;\n\n  const pointIndex = (index) => (start + (reverse ? ilen - index : index)) % count;\n  const drawX = () => {\n    if (minY !== maxY) {\n      // Draw line to maxY and minY, using the average x-coordinate\n      ctx.lineTo(avgX, maxY);\n      ctx.lineTo(avgX, minY);\n      // Line to y-value of last point in group. So the line continues\n      // from correct position. Not using move, to have solid path.\n      ctx.lineTo(avgX, lastY);\n    }\n  };\n\n  if (move) {\n    point = points[pointIndex(0)];\n    ctx.moveTo(point.x, point.y);\n  }\n\n  for (i = 0; i <= ilen; ++i) {\n    point = points[pointIndex(i)];\n\n    if (point.skip) {\n      // If there is a skipped point inside a segment, spanGaps must be true\n      continue;\n    }\n\n    const x = point.x;\n    const y = point.y;\n    const truncX = x | 0; // truncated x-coordinate\n\n    if (truncX === prevX) {\n      // Determine `minY` / `maxY` and `avgX` while we stay within same x-position\n      if (y < minY) {\n        minY = y;\n      } else if (y > maxY) {\n        maxY = y;\n      }\n      // For first point in group, countX is `0`, so average will be `x` / 1.\n      avgX = (countX * avgX + x) / ++countX;\n    } else {\n      drawX();\n      // Draw line to next x-position, using the first (or only)\n      // y-value in that group\n      ctx.lineTo(x, y);\n\n      prevX = truncX;\n      countX = 0;\n      minY = maxY = y;\n    }\n    // Keep track of the last y-value in group\n    lastY = y;\n  }\n  drawX();\n}\n\n/**\n * @param {LineElement} line - the line\n * @returns {function}\n * @private\n */\nfunction _getSegmentMethod(line) {\n  const opts = line.options;\n  const borderDash = opts.borderDash && opts.borderDash.length;\n  const useFastPath = !line._decimated && !line._loop && !opts.tension && opts.cubicInterpolationMode !== 'monotone' && !opts.stepped && !borderDash;\n  return useFastPath ? fastPathSegment : pathSegment;\n}\n\n/**\n * @private\n */\nfunction _getInterpolationMethod(options) {\n  if (options.stepped) {\n    return _steppedInterpolation;\n  }\n\n  if (options.tension || options.cubicInterpolationMode === 'monotone') {\n    return _bezierInterpolation;\n  }\n\n  return _pointInLine;\n}\n\nfunction strokePathWithCache(ctx, line, start, count) {\n  let path = line._path;\n  if (!path) {\n    path = line._path = new Path2D();\n    if (line.path(path, start, count)) {\n      path.closePath();\n    }\n  }\n  setStyle(ctx, line.options);\n  ctx.stroke(path);\n}\n\nfunction strokePathDirect(ctx, line, start, count) {\n  const {segments, options} = line;\n  const segmentMethod = _getSegmentMethod(line);\n\n  for (const segment of segments) {\n    setStyle(ctx, options, segment.style);\n    ctx.beginPath();\n    if (segmentMethod(ctx, line, segment, {start, end: start + count - 1})) {\n      ctx.closePath();\n    }\n    ctx.stroke();\n  }\n}\n\nconst usePath2D = typeof Path2D === 'function';\n\nfunction draw(ctx, line, start, count) {\n  if (usePath2D && !line.options.segment) {\n    strokePathWithCache(ctx, line, start, count);\n  } else {\n    strokePathDirect(ctx, line, start, count);\n  }\n}\n\nexport default class LineElement extends Element {\n\n  static id = 'line';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    borderCapStyle: 'butt',\n    borderDash: [],\n    borderDashOffset: 0,\n    borderJoinStyle: 'miter',\n    borderWidth: 3,\n    capBezierPoints: true,\n    cubicInterpolationMode: 'default',\n    fill: false,\n    spanGaps: false,\n    stepped: false,\n    tension: 0,\n  };\n\n  /**\n   * @type {any}\n   */\n  static defaultRoutes = {\n    backgroundColor: 'backgroundColor',\n    borderColor: 'borderColor'\n  };\n\n\n  static descriptors = {\n    _scriptable: true,\n    _indexable: (name) => name !== 'borderDash' && name !== 'fill',\n  };\n\n\n  constructor(cfg) {\n    super();\n\n    this.animated = true;\n    this.options = undefined;\n    this._chart = undefined;\n    this._loop = undefined;\n    this._fullLoop = undefined;\n    this._path = undefined;\n    this._points = undefined;\n    this._segments = undefined;\n    this._decimated = false;\n    this._pointsUpdated = false;\n    this._datasetIndex = undefined;\n\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n\n  updateControlPoints(chartArea, indexAxis) {\n    const options = this.options;\n    if ((options.tension || options.cubicInterpolationMode === 'monotone') && !options.stepped && !this._pointsUpdated) {\n      const loop = options.spanGaps ? this._loop : this._fullLoop;\n      _updateBezierControlPoints(this._points, options, chartArea, loop, indexAxis);\n      this._pointsUpdated = true;\n    }\n  }\n\n  set points(points) {\n    this._points = points;\n    delete this._segments;\n    delete this._path;\n    this._pointsUpdated = false;\n  }\n\n  get points() {\n    return this._points;\n  }\n\n  get segments() {\n    return this._segments || (this._segments = _computeSegments(this, this.options.segment));\n  }\n\n  /**\n\t * First non-skipped point on this line\n\t * @returns {PointElement|undefined}\n\t */\n  first() {\n    const segments = this.segments;\n    const points = this.points;\n    return segments.length && points[segments[0].start];\n  }\n\n  /**\n\t * Last non-skipped point on this line\n\t * @returns {PointElement|undefined}\n\t */\n  last() {\n    const segments = this.segments;\n    const points = this.points;\n    const count = segments.length;\n    return count && points[segments[count - 1].end];\n  }\n\n  /**\n\t * Interpolate a point in this line at the same value on `property` as\n\t * the reference `point` provided\n\t * @param {PointElement} point - the reference point\n\t * @param {string} property - the property to match on\n\t * @returns {PointElement|undefined}\n\t */\n  interpolate(point, property) {\n    const options = this.options;\n    const value = point[property];\n    const points = this.points;\n    const segments = _boundSegments(this, {property, start: value, end: value});\n\n    if (!segments.length) {\n      return;\n    }\n\n    const result = [];\n    const _interpolate = _getInterpolationMethod(options);\n    let i, ilen;\n    for (i = 0, ilen = segments.length; i < ilen; ++i) {\n      const {start, end} = segments[i];\n      const p1 = points[start];\n      const p2 = points[end];\n      if (p1 === p2) {\n        result.push(p1);\n        continue;\n      }\n      const t = Math.abs((value - p1[property]) / (p2[property] - p1[property]));\n      const interpolated = _interpolate(p1, p2, t, options.stepped);\n      interpolated[property] = point[property];\n      result.push(interpolated);\n    }\n    return result.length === 1 ? result[0] : result;\n  }\n\n  /**\n\t * Append a segment of this line to current path.\n\t * @param {CanvasRenderingContext2D} ctx\n\t * @param {object} segment\n\t * @param {number} segment.start - start index of the segment, referring the points array\n \t * @param {number} segment.end - end index of the segment, referring the points array\n \t * @param {boolean} segment.loop - indicates that the segment is a loop\n\t * @param {object} params\n\t * @param {boolean} params.move - move to starting point (vs line to it)\n\t * @param {boolean} params.reverse - path the segment from end to start\n\t * @param {number} params.start - limit segment to points starting from `start` index\n\t * @param {number} params.end - limit segment to points ending at `start` + `count` index\n\t * @returns {undefined|boolean} - true if the segment is a full loop (path should be closed)\n\t */\n  pathSegment(ctx, segment, params) {\n    const segmentMethod = _getSegmentMethod(this);\n    return segmentMethod(ctx, this, segment, params);\n  }\n\n  /**\n\t * Append all segments of this line to current path.\n\t * @param {CanvasRenderingContext2D|Path2D} ctx\n\t * @param {number} [start]\n\t * @param {number} [count]\n\t * @returns {undefined|boolean} - true if line is a full loop (path should be closed)\n\t */\n  path(ctx, start, count) {\n    const segments = this.segments;\n    const segmentMethod = _getSegmentMethod(this);\n    let loop = this._loop;\n\n    start = start || 0;\n    count = count || (this.points.length - start);\n\n    for (const segment of segments) {\n      loop &= segmentMethod(ctx, this, segment, {start, end: start + count - 1});\n    }\n    return !!loop;\n  }\n\n  /**\n\t * Draw\n\t * @param {CanvasRenderingContext2D} ctx\n\t * @param {object} chartArea\n\t * @param {number} [start]\n\t * @param {number} [count]\n\t */\n  draw(ctx, chartArea, start, count) {\n    const options = this.options || {};\n    const points = this.points || [];\n\n    if (points.length && options.borderWidth) {\n      ctx.save();\n\n      draw(ctx, this, start, count);\n\n      ctx.restore();\n    }\n\n    if (this.animated) {\n      // When line is animated, the control points and path are not cached.\n      this._pointsUpdated = false;\n      this._path = undefined;\n    }\n  }\n}\n","import Element from '../core/core.element.js';\nimport {drawPoint, _isPointInArea} from '../helpers/helpers.canvas.js';\nimport type {\n  CartesianParsedData,\n  ChartArea,\n  Point,\n  PointHoverOptions,\n  PointOptions,\n} from '../types/index.js';\n\nfunction inRange(el: PointElement, pos: number, axis: 'x' | 'y', useFinalPosition?: boolean) {\n  const options = el.options;\n  const {[axis]: value} = el.getProps([axis], useFinalPosition);\n\n  return (Math.abs(pos - value) < options.radius + options.hitRadius);\n}\n\nexport type PointProps = Point\n\nexport default class PointElement extends Element<PointProps, PointOptions & PointHoverOptions> {\n\n  static id = 'point';\n\n  parsed: CartesianParsedData;\n  skip?: boolean;\n  stop?: boolean;\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    borderWidth: 1,\n    hitRadius: 1,\n    hoverBorderWidth: 1,\n    hoverRadius: 4,\n    pointStyle: 'circle',\n    radius: 3,\n    rotation: 0\n  };\n\n  /**\n   * @type {any}\n   */\n  static defaultRoutes = {\n    backgroundColor: 'backgroundColor',\n    borderColor: 'borderColor'\n  };\n\n  constructor(cfg) {\n    super();\n\n    this.options = undefined;\n    this.parsed = undefined;\n    this.skip = undefined;\n    this.stop = undefined;\n\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n\n  inRange(mouseX: number, mouseY: number, useFinalPosition?: boolean) {\n    const options = this.options;\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return ((Math.pow(mouseX - x, 2) + Math.pow(mouseY - y, 2)) < Math.pow(options.hitRadius + options.radius, 2));\n  }\n\n  inXRange(mouseX: number, useFinalPosition?: boolean) {\n    return inRange(this, mouseX, 'x', useFinalPosition);\n  }\n\n  inYRange(mouseY: number, useFinalPosition?: boolean) {\n    return inRange(this, mouseY, 'y', useFinalPosition);\n  }\n\n  getCenterPoint(useFinalPosition?: boolean) {\n    const {x, y} = this.getProps(['x', 'y'], useFinalPosition);\n    return {x, y};\n  }\n\n  size(options?: Partial<PointOptions & PointHoverOptions>) {\n    options = options || this.options || {};\n    let radius = options.radius || 0;\n    radius = Math.max(radius, radius && options.hoverRadius || 0);\n    const borderWidth = radius && options.borderWidth || 0;\n    return (radius + borderWidth) * 2;\n  }\n\n  draw(ctx: CanvasRenderingContext2D, area: ChartArea) {\n    const options = this.options;\n\n    if (this.skip || options.radius < 0.1 || !_isPointInArea(this, area, this.size(options) / 2)) {\n      return;\n    }\n\n    ctx.strokeStyle = options.borderColor;\n    ctx.lineWidth = options.borderWidth;\n    ctx.fillStyle = options.backgroundColor;\n    drawPoint(ctx, options, this.x, this.y);\n  }\n\n  getRange() {\n    const options = this.options || {};\n    // @ts-expect-error Fallbacks should never be hit in practice\n    return options.radius + options.hitRadius;\n  }\n}\n","import Element from '../core/core.element.js';\nimport {isObject, _isBetween, _limitValue} from '../helpers/index.js';\nimport {addRoundedRectPath} from '../helpers/helpers.canvas.js';\nimport {toTRBL, toTRBLCorners} from '../helpers/helpers.options.js';\n\n/** @typedef {{ x: number, y: number, base: number, horizontal: boolean, width: number, height: number }} BarProps */\n\n/**\n * Helper function to get the bounds of the bar regardless of the orientation\n * @param {BarElement} bar the bar\n * @param {boolean} [useFinalPosition]\n * @return {object} bounds of the bar\n * @private\n */\nfunction getBarBounds(bar, useFinalPosition) {\n  const {x, y, base, width, height} = /** @type {BarProps} */ (bar.getProps(['x', 'y', 'base', 'width', 'height'], useFinalPosition));\n\n  let left, right, top, bottom, half;\n\n  if (bar.horizontal) {\n    half = height / 2;\n    left = Math.min(x, base);\n    right = Math.max(x, base);\n    top = y - half;\n    bottom = y + half;\n  } else {\n    half = width / 2;\n    left = x - half;\n    right = x + half;\n    top = Math.min(y, base);\n    bottom = Math.max(y, base);\n  }\n\n  return {left, top, right, bottom};\n}\n\nfunction skipOrLimit(skip, value, min, max) {\n  return skip ? 0 : _limitValue(value, min, max);\n}\n\nfunction parseBorderWidth(bar, maxW, maxH) {\n  const value = bar.options.borderWidth;\n  const skip = bar.borderSkipped;\n  const o = toTRBL(value);\n\n  return {\n    t: skipOrLimit(skip.top, o.top, 0, maxH),\n    r: skipOrLimit(skip.right, o.right, 0, maxW),\n    b: skipOrLimit(skip.bottom, o.bottom, 0, maxH),\n    l: skipOrLimit(skip.left, o.left, 0, maxW)\n  };\n}\n\nfunction parseBorderRadius(bar, maxW, maxH) {\n  const {enableBorderRadius} = bar.getProps(['enableBorderRadius']);\n  const value = bar.options.borderRadius;\n  const o = toTRBLCorners(value);\n  const maxR = Math.min(maxW, maxH);\n  const skip = bar.borderSkipped;\n\n  // If the value is an object, assume the user knows what they are doing\n  // and apply as directed.\n  const enableBorder = enableBorderRadius || isObject(value);\n\n  return {\n    topLeft: skipOrLimit(!enableBorder || skip.top || skip.left, o.topLeft, 0, maxR),\n    topRight: skipOrLimit(!enableBorder || skip.top || skip.right, o.topRight, 0, maxR),\n    bottomLeft: skipOrLimit(!enableBorder || skip.bottom || skip.left, o.bottomLeft, 0, maxR),\n    bottomRight: skipOrLimit(!enableBorder || skip.bottom || skip.right, o.bottomRight, 0, maxR)\n  };\n}\n\nfunction boundingRects(bar) {\n  const bounds = getBarBounds(bar);\n  const width = bounds.right - bounds.left;\n  const height = bounds.bottom - bounds.top;\n  const border = parseBorderWidth(bar, width / 2, height / 2);\n  const radius = parseBorderRadius(bar, width / 2, height / 2);\n\n  return {\n    outer: {\n      x: bounds.left,\n      y: bounds.top,\n      w: width,\n      h: height,\n      radius\n    },\n    inner: {\n      x: bounds.left + border.l,\n      y: bounds.top + border.t,\n      w: width - border.l - border.r,\n      h: height - border.t - border.b,\n      radius: {\n        topLeft: Math.max(0, radius.topLeft - Math.max(border.t, border.l)),\n        topRight: Math.max(0, radius.topRight - Math.max(border.t, border.r)),\n        bottomLeft: Math.max(0, radius.bottomLeft - Math.max(border.b, border.l)),\n        bottomRight: Math.max(0, radius.bottomRight - Math.max(border.b, border.r)),\n      }\n    }\n  };\n}\n\nfunction inRange(bar, x, y, useFinalPosition) {\n  const skipX = x === null;\n  const skipY = y === null;\n  const skipBoth = skipX && skipY;\n  const bounds = bar && !skipBoth && getBarBounds(bar, useFinalPosition);\n\n  return bounds\n\t\t&& (skipX || _isBetween(x, bounds.left, bounds.right))\n\t\t&& (skipY || _isBetween(y, bounds.top, bounds.bottom));\n}\n\nfunction hasRadius(radius) {\n  return radius.topLeft || radius.topRight || radius.bottomLeft || radius.bottomRight;\n}\n\n/**\n * Add a path of a rectangle to the current sub-path\n * @param {CanvasRenderingContext2D} ctx Context\n * @param {*} rect Bounding rect\n */\nfunction addNormalRectPath(ctx, rect) {\n  ctx.rect(rect.x, rect.y, rect.w, rect.h);\n}\n\nfunction inflateRect(rect, amount, refRect = {}) {\n  const x = rect.x !== refRect.x ? -amount : 0;\n  const y = rect.y !== refRect.y ? -amount : 0;\n  const w = (rect.x + rect.w !== refRect.x + refRect.w ? amount : 0) - x;\n  const h = (rect.y + rect.h !== refRect.y + refRect.h ? amount : 0) - y;\n  return {\n    x: rect.x + x,\n    y: rect.y + y,\n    w: rect.w + w,\n    h: rect.h + h,\n    radius: rect.radius\n  };\n}\n\nexport default class BarElement extends Element {\n\n  static id = 'bar';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    borderSkipped: 'start',\n    borderWidth: 0,\n    borderRadius: 0,\n    inflateAmount: 'auto',\n    pointStyle: undefined\n  };\n\n  /**\n   * @type {any}\n   */\n  static defaultRoutes = {\n    backgroundColor: 'backgroundColor',\n    borderColor: 'borderColor'\n  };\n\n  constructor(cfg) {\n    super();\n\n    this.options = undefined;\n    this.horizontal = undefined;\n    this.base = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this.inflateAmount = undefined;\n\n    if (cfg) {\n      Object.assign(this, cfg);\n    }\n  }\n\n  draw(ctx) {\n    const {inflateAmount, options: {borderColor, backgroundColor}} = this;\n    const {inner, outer} = boundingRects(this);\n    const addRectPath = hasRadius(outer.radius) ? addRoundedRectPath : addNormalRectPath;\n\n    ctx.save();\n\n    if (outer.w !== inner.w || outer.h !== inner.h) {\n      ctx.beginPath();\n      addRectPath(ctx, inflateRect(outer, inflateAmount, inner));\n      ctx.clip();\n      addRectPath(ctx, inflateRect(inner, -inflateAmount, outer));\n      ctx.fillStyle = borderColor;\n      ctx.fill('evenodd');\n    }\n\n    ctx.beginPath();\n    addRectPath(ctx, inflateRect(inner, inflateAmount));\n    ctx.fillStyle = backgroundColor;\n    ctx.fill();\n\n    ctx.restore();\n  }\n\n  inRange(mouseX, mouseY, useFinalPosition) {\n    return inRange(this, mouseX, mouseY, useFinalPosition);\n  }\n\n  inXRange(mouseX, useFinalPosition) {\n    return inRange(this, mouseX, null, useFinalPosition);\n  }\n\n  inYRange(mouseY, useFinalPosition) {\n    return inRange(this, null, mouseY, useFinalPosition);\n  }\n\n  getCenterPoint(useFinalPosition) {\n    const {x, y, base, horizontal} = /** @type {BarProps} */ (this.getProps(['x', 'y', 'base', 'horizontal'], useFinalPosition));\n    return {\n      x: horizontal ? (x + base) / 2 : x,\n      y: horizontal ? y : (y + base) / 2\n    };\n  }\n\n  getRange(axis) {\n    return axis === 'x' ? this.width / 2 : this.height / 2;\n  }\n}\n","import {DoughnutController, PolarAreaController} from '../index.js';\nimport type {Chart, ChartDataset} from '../types.js';\n\nexport interface ColorsPluginOptions {\n  enabled?: boolean;\n  forceOverride?: boolean;\n}\n\ninterface ColorsDescriptor {\n  backgroundColor?: unknown;\n  borderColor?: unknown;\n}\n\nconst BORDER_COLORS = [\n  'rgb(54, 162, 235)', // blue\n  'rgb(255, 99, 132)', // red\n  'rgb(255, 159, 64)', // orange\n  'rgb(255, 205, 86)', // yellow\n  'rgb(75, 192, 192)', // green\n  'rgb(153, 102, 255)', // purple\n  'rgb(201, 203, 207)' // grey\n];\n\n// Border colors with 50% transparency\nconst BACKGROUND_COLORS = /* #__PURE__ */ BORDER_COLORS.map(color => color.replace('rgb(', 'rgba(').replace(')', ', 0.5)'));\n\nfunction getBorderColor(i: number) {\n  return BORDER_COLORS[i % BORDER_COLORS.length];\n}\n\nfunction getBackgroundColor(i: number) {\n  return BACKGROUND_COLORS[i % BACKGROUND_COLORS.length];\n}\n\nfunction colorizeDefaultDataset(dataset: ChartDataset, i: number) {\n  dataset.borderColor = getBorderColor(i);\n  dataset.backgroundColor = getBackgroundColor(i);\n\n  return ++i;\n}\n\nfunction colorizeDoughnutDataset(dataset: ChartDataset, i: number) {\n  dataset.backgroundColor = dataset.data.map(() => getBorderColor(i++));\n\n  return i;\n}\n\nfunction colorizePolarAreaDataset(dataset: ChartDataset, i: number) {\n  dataset.backgroundColor = dataset.data.map(() => getBackgroundColor(i++));\n\n  return i;\n}\n\nfunction getColorizer(chart: Chart) {\n  let i = 0;\n\n  return (dataset: ChartDataset, datasetIndex: number) => {\n    const controller = chart.getDatasetMeta(datasetIndex).controller;\n\n    if (controller instanceof DoughnutController) {\n      i = colorizeDoughnutDataset(dataset, i);\n    } else if (controller instanceof PolarAreaController) {\n      i = colorizePolarAreaDataset(dataset, i);\n    } else if (controller) {\n      i = colorizeDefaultDataset(dataset, i);\n    }\n  };\n}\n\nfunction containsColorsDefinitions(\n  descriptors: ColorsDescriptor[] | Record<string, ColorsDescriptor>\n) {\n  let k: number | string;\n\n  for (k in descriptors) {\n    if (descriptors[k].borderColor || descriptors[k].backgroundColor) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nfunction containsColorsDefinition(\n  descriptor: ColorsDescriptor\n) {\n  return descriptor && (descriptor.borderColor || descriptor.backgroundColor);\n}\n\nexport default {\n  id: 'colors',\n\n  defaults: {\n    enabled: true,\n    forceOverride: false\n  } as ColorsPluginOptions,\n\n  beforeLayout(chart: Chart, _args, options: ColorsPluginOptions) {\n    if (!options.enabled) {\n      return;\n    }\n\n    const {\n      data: {datasets},\n      options: chartOptions\n    } = chart.config;\n    const {elements} = chartOptions;\n\n    if (!options.forceOverride && (containsColorsDefinitions(datasets) || containsColorsDefinition(chartOptions) || (elements && containsColorsDefinitions(elements)))) {\n      return;\n    }\n\n    const colorizer = getColorizer(chart);\n\n    datasets.forEach(colorizer);\n  }\n};\n","import {_limitValue, _lookupByKey, isNullOrUndef, resolve} from '../helpers/index.js';\n\nfunction lttbDecimation(data, start, count, availableWidth, options) {\n  /**\n   * Implementation of the Largest Triangle Three Buckets algorithm.\n   *\n   * This implementation is based on the original implementation by Sveinn Steinarsson\n   * in https://github.com/sveinn-steinarsson/flot-downsample/blob/master/jquery.flot.downsample.js\n   *\n   * The original implementation is MIT licensed.\n   */\n  const samples = options.samples || availableWidth;\n  // There are less points than the threshold, returning the whole array\n  if (samples >= count) {\n    return data.slice(start, start + count);\n  }\n\n  const decimated = [];\n\n  const bucketWidth = (count - 2) / (samples - 2);\n  let sampledIndex = 0;\n  const endIndex = start + count - 1;\n  // Starting from offset\n  let a = start;\n  let i, maxAreaPoint, maxArea, area, nextA;\n\n  decimated[sampledIndex++] = data[a];\n\n  for (i = 0; i < samples - 2; i++) {\n    let avgX = 0;\n    let avgY = 0;\n    let j;\n\n    // Adding offset\n    const avgRangeStart = Math.floor((i + 1) * bucketWidth) + 1 + start;\n    const avgRangeEnd = Math.min(Math.floor((i + 2) * bucketWidth) + 1, count) + start;\n    const avgRangeLength = avgRangeEnd - avgRangeStart;\n\n    for (j = avgRangeStart; j < avgRangeEnd; j++) {\n      avgX += data[j].x;\n      avgY += data[j].y;\n    }\n\n    avgX /= avgRangeLength;\n    avgY /= avgRangeLength;\n\n    // Adding offset\n    const rangeOffs = Math.floor(i * bucketWidth) + 1 + start;\n    const rangeTo = Math.min(Math.floor((i + 1) * bucketWidth) + 1, count) + start;\n    const {x: pointAx, y: pointAy} = data[a];\n\n    // Note that this is changed from the original algorithm which initializes these\n    // values to 1. The reason for this change is that if the area is small, nextA\n    // would never be set and thus a crash would occur in the next loop as `a` would become\n    // `undefined`. Since the area is always positive, but could be 0 in the case of a flat trace,\n    // initializing with a negative number is the correct solution.\n    maxArea = area = -1;\n\n    for (j = rangeOffs; j < rangeTo; j++) {\n      area = 0.5 * Math.abs(\n        (pointAx - avgX) * (data[j].y - pointAy) -\n        (pointAx - data[j].x) * (avgY - pointAy)\n      );\n\n      if (area > maxArea) {\n        maxArea = area;\n        maxAreaPoint = data[j];\n        nextA = j;\n      }\n    }\n\n    decimated[sampledIndex++] = maxAreaPoint;\n    a = nextA;\n  }\n\n  // Include the last point\n  decimated[sampledIndex++] = data[endIndex];\n\n  return decimated;\n}\n\nfunction minMaxDecimation(data, start, count, availableWidth) {\n  let avgX = 0;\n  let countX = 0;\n  let i, point, x, y, prevX, minIndex, maxIndex, startIndex, minY, maxY;\n  const decimated = [];\n  const endIndex = start + count - 1;\n\n  const xMin = data[start].x;\n  const xMax = data[endIndex].x;\n  const dx = xMax - xMin;\n\n  for (i = start; i < start + count; ++i) {\n    point = data[i];\n    x = (point.x - xMin) / dx * availableWidth;\n    y = point.y;\n    const truncX = x | 0;\n\n    if (truncX === prevX) {\n      // Determine `minY` / `maxY` and `avgX` while we stay within same x-position\n      if (y < minY) {\n        minY = y;\n        minIndex = i;\n      } else if (y > maxY) {\n        maxY = y;\n        maxIndex = i;\n      }\n      // For first point in group, countX is `0`, so average will be `x` / 1.\n      // Use point.x here because we're computing the average data `x` value\n      avgX = (countX * avgX + point.x) / ++countX;\n    } else {\n      // Push up to 4 points, 3 for the last interval and the first point for this interval\n      const lastIndex = i - 1;\n\n      if (!isNullOrUndef(minIndex) && !isNullOrUndef(maxIndex)) {\n        // The interval is defined by 4 points: start, min, max, end.\n        // The starting point is already considered at this point, so we need to determine which\n        // of the other points to add. We need to sort these points to ensure the decimated data\n        // is still sorted and then ensure there are no duplicates.\n        const intermediateIndex1 = Math.min(minIndex, maxIndex);\n        const intermediateIndex2 = Math.max(minIndex, maxIndex);\n\n        if (intermediateIndex1 !== startIndex && intermediateIndex1 !== lastIndex) {\n          decimated.push({\n            ...data[intermediateIndex1],\n            x: avgX,\n          });\n        }\n        if (intermediateIndex2 !== startIndex && intermediateIndex2 !== lastIndex) {\n          decimated.push({\n            ...data[intermediateIndex2],\n            x: avgX\n          });\n        }\n      }\n\n      // lastIndex === startIndex will occur when a range has only 1 point which could\n      // happen with very uneven data\n      if (i > 0 && lastIndex !== startIndex) {\n        // Last point in the previous interval\n        decimated.push(data[lastIndex]);\n      }\n\n      // Start of the new interval\n      decimated.push(point);\n      prevX = truncX;\n      countX = 0;\n      minY = maxY = y;\n      minIndex = maxIndex = startIndex = i;\n    }\n  }\n\n  return decimated;\n}\n\nfunction cleanDecimatedDataset(dataset) {\n  if (dataset._decimated) {\n    const data = dataset._data;\n    delete dataset._decimated;\n    delete dataset._data;\n    Object.defineProperty(dataset, 'data', {\n      configurable: true,\n      enumerable: true,\n      writable: true,\n      value: data,\n    });\n  }\n}\n\nfunction cleanDecimatedData(chart) {\n  chart.data.datasets.forEach((dataset) => {\n    cleanDecimatedDataset(dataset);\n  });\n}\n\nfunction getStartAndCountOfVisiblePointsSimplified(meta, points) {\n  const pointCount = points.length;\n\n  let start = 0;\n  let count;\n\n  const {iScale} = meta;\n  const {min, max, minDefined, maxDefined} = iScale.getUserBounds();\n\n  if (minDefined) {\n    start = _limitValue(_lookupByKey(points, iScale.axis, min).lo, 0, pointCount - 1);\n  }\n  if (maxDefined) {\n    count = _limitValue(_lookupByKey(points, iScale.axis, max).hi + 1, start, pointCount) - start;\n  } else {\n    count = pointCount - start;\n  }\n\n  return {start, count};\n}\n\nexport default {\n  id: 'decimation',\n\n  defaults: {\n    algorithm: 'min-max',\n    enabled: false,\n  },\n\n  beforeElementsUpdate: (chart, args, options) => {\n    if (!options.enabled) {\n      // The decimation plugin may have been previously enabled. Need to remove old `dataset._data` handlers\n      cleanDecimatedData(chart);\n      return;\n    }\n\n    // Assume the entire chart is available to show a few more points than needed\n    const availableWidth = chart.width;\n\n    chart.data.datasets.forEach((dataset, datasetIndex) => {\n      const {_data, indexAxis} = dataset;\n      const meta = chart.getDatasetMeta(datasetIndex);\n      const data = _data || dataset.data;\n\n      if (resolve([indexAxis, chart.options.indexAxis]) === 'y') {\n        // Decimation is only supported for lines that have an X indexAxis\n        return;\n      }\n\n      if (!meta.controller.supportsDecimation) {\n        // Only line datasets are supported\n        return;\n      }\n\n      const xAxis = chart.scales[meta.xAxisID];\n      if (xAxis.type !== 'linear' && xAxis.type !== 'time') {\n        // Only linear interpolation is supported\n        return;\n      }\n\n      if (chart.options.parsing) {\n        // Plugin only supports data that does not need parsing\n        return;\n      }\n\n      let {start, count} = getStartAndCountOfVisiblePointsSimplified(meta, data);\n      const threshold = options.threshold || 4 * availableWidth;\n      if (count <= threshold) {\n        // No decimation is required until we are above this threshold\n        cleanDecimatedDataset(dataset);\n        return;\n      }\n\n      if (isNullOrUndef(_data)) {\n        // First time we are seeing this dataset\n        // We override the 'data' property with a setter that stores the\n        // raw data in _data, but reads the decimated data from _decimated\n        dataset._data = data;\n        delete dataset.data;\n        Object.defineProperty(dataset, 'data', {\n          configurable: true,\n          enumerable: true,\n          get: function() {\n            return this._decimated;\n          },\n          set: function(d) {\n            this._data = d;\n          }\n        });\n      }\n\n      // Point the chart to the decimated data\n      let decimated;\n      switch (options.algorithm) {\n      case 'lttb':\n        decimated = lttbDecimation(data, start, count, availableWidth, options);\n        break;\n      case 'min-max':\n        decimated = minMaxDecimation(data, start, count, availableWidth);\n        break;\n      default:\n        throw new Error(`Unsupported decimation algorithm '${options.algorithm}'`);\n      }\n\n      dataset._decimated = decimated;\n    });\n  },\n\n  destroy(chart) {\n    cleanDecimatedData(chart);\n  }\n};\n","import {_boundSegment, _boundSegments, _normalizeAngle} from '../../helpers/index.js';\n\nexport function _segments(line, target, property) {\n  const segments = line.segments;\n  const points = line.points;\n  const tpoints = target.points;\n  const parts = [];\n\n  for (const segment of segments) {\n    let {start, end} = segment;\n    end = _findSegmentEnd(start, end, points);\n\n    const bounds = _getBounds(property, points[start], points[end], segment.loop);\n\n    if (!target.segments) {\n      // Special case for boundary not supporting `segments` (simpleArc)\n      // Bounds are provided as `target` for partial circle, or undefined for full circle\n      parts.push({\n        source: segment,\n        target: bounds,\n        start: points[start],\n        end: points[end]\n      });\n      continue;\n    }\n\n    // Get all segments from `target` that intersect the bounds of current segment of `line`\n    const targetSegments = _boundSegments(target, bounds);\n\n    for (const tgt of targetSegments) {\n      const subBounds = _getBounds(property, tpoints[tgt.start], tpoints[tgt.end], tgt.loop);\n      const fillSources = _boundSegment(segment, points, subBounds);\n\n      for (const fillSource of fillSources) {\n        parts.push({\n          source: fillSource,\n          target: tgt,\n          start: {\n            [property]: _getEdge(bounds, subBounds, 'start', Math.max)\n          },\n          end: {\n            [property]: _getEdge(bounds, subBounds, 'end', Math.min)\n          }\n        });\n      }\n    }\n  }\n  return parts;\n}\n\nexport function _getBounds(property, first, last, loop) {\n  if (loop) {\n    return;\n  }\n  let start = first[property];\n  let end = last[property];\n\n  if (property === 'angle') {\n    start = _normalizeAngle(start);\n    end = _normalizeAngle(end);\n  }\n  return {property, start, end};\n}\n\nexport function _pointsFromSegments(boundary, line) {\n  const {x = null, y = null} = boundary || {};\n  const linePoints = line.points;\n  const points = [];\n  line.segments.forEach(({start, end}) => {\n    end = _findSegmentEnd(start, end, linePoints);\n    const first = linePoints[start];\n    const last = linePoints[end];\n    if (y !== null) {\n      points.push({x: first.x, y});\n      points.push({x: last.x, y});\n    } else if (x !== null) {\n      points.push({x, y: first.y});\n      points.push({x, y: last.y});\n    }\n  });\n  return points;\n}\n\nexport function _findSegmentEnd(start, end, points) {\n  for (;end > start; end--) {\n    const point = points[end];\n    if (!isNaN(point.x) && !isNaN(point.y)) {\n      break;\n    }\n  }\n  return end;\n}\n\nfunction _getEdge(a, b, prop, fn) {\n  if (a && b) {\n    return fn(a[prop], b[prop]);\n  }\n  return a ? a[prop] : b ? b[prop] : 0;\n}\n","/**\n * @typedef { import('../../core/core.controller.js').default } Chart\n * @typedef { import('../../core/core.scale.js').default } Scale\n * @typedef { import('../../elements/element.point.js').default } PointElement\n */\n\nimport {LineElement} from '../../elements/index.js';\nimport {isArray} from '../../helpers/index.js';\nimport {_pointsFromSegments} from './filler.segment.js';\n\n/**\n * @param {PointElement[] | { x: number; y: number; }} boundary\n * @param {LineElement} line\n * @return {LineElement?}\n */\nexport function _createBoundaryLine(boundary, line) {\n  let points = [];\n  let _loop = false;\n\n  if (isArray(boundary)) {\n    _loop = true;\n    // @ts-ignore\n    points = boundary;\n  } else {\n    points = _pointsFromSegments(boundary, line);\n  }\n\n  return points.length ? new LineElement({\n    points,\n    options: {tension: 0},\n    _loop,\n    _fullLoop: _loop\n  }) : null;\n}\n\nexport function _shouldApplyFill(source) {\n  return source && source.fill !== false;\n}\n","import {isObject, isFinite, valueOrDefault} from '../../helpers/helpers.core.js';\n\n/**\n * @typedef { import('../../core/core.scale.js').default } Scale\n * @typedef { import('../../elements/element.line.js').default } LineElement\n * @typedef { import('../../types/index.js').FillTarget } FillTarget\n * @typedef { import('../../types/index.js').ComplexFillTarget } ComplexFillTarget\n */\n\nexport function _resolveTarget(sources, index, propagate) {\n  const source = sources[index];\n  let fill = source.fill;\n  const visited = [index];\n  let target;\n\n  if (!propagate) {\n    return fill;\n  }\n\n  while (fill !== false && visited.indexOf(fill) === -1) {\n    if (!isFinite(fill)) {\n      return fill;\n    }\n\n    target = sources[fill];\n    if (!target) {\n      return false;\n    }\n\n    if (target.visible) {\n      return fill;\n    }\n\n    visited.push(fill);\n    fill = target.fill;\n  }\n\n  return false;\n}\n\n/**\n * @param {LineElement} line\n * @param {number} index\n * @param {number} count\n */\nexport function _decodeFill(line, index, count) {\n  /** @type {string | {value: number}} */\n  const fill = parseFillOption(line);\n\n  if (isObject(fill)) {\n    return isNaN(fill.value) ? false : fill;\n  }\n\n  let target = parseFloat(fill);\n\n  if (isFinite(target) && Math.floor(target) === target) {\n    return decodeTargetIndex(fill[0], index, target, count);\n  }\n\n  return ['origin', 'start', 'end', 'stack', 'shape'].indexOf(fill) >= 0 && fill;\n}\n\nfunction decodeTargetIndex(firstCh, index, target, count) {\n  if (firstCh === '-' || firstCh === '+') {\n    target = index + target;\n  }\n\n  if (target === index || target < 0 || target >= count) {\n    return false;\n  }\n\n  return target;\n}\n\n/**\n * @param {FillTarget | ComplexFillTarget} fill\n * @param {Scale} scale\n * @returns {number | null}\n */\nexport function _getTargetPixel(fill, scale) {\n  let pixel = null;\n  if (fill === 'start') {\n    pixel = scale.bottom;\n  } else if (fill === 'end') {\n    pixel = scale.top;\n  } else if (isObject(fill)) {\n    // @ts-ignore\n    pixel = scale.getPixelForValue(fill.value);\n  } else if (scale.getBasePixel) {\n    pixel = scale.getBasePixel();\n  }\n  return pixel;\n}\n\n/**\n * @param {FillTarget | ComplexFillTarget} fill\n * @param {Scale} scale\n * @param {number} startValue\n * @returns {number | undefined}\n */\nexport function _getTargetValue(fill, scale, startValue) {\n  let value;\n\n  if (fill === 'start') {\n    value = startValue;\n  } else if (fill === 'end') {\n    value = scale.options.reverse ? scale.min : scale.max;\n  } else if (isObject(fill)) {\n    // @ts-ignore\n    value = fill.value;\n  } else {\n    value = scale.getBaseValue();\n  }\n  return value;\n}\n\n/**\n * @param {LineElement} line\n */\nfunction parseFillOption(line) {\n  const options = line.options;\n  const fillOption = options.fill;\n  let fill = valueOrDefault(fillOption && fillOption.target, fillOption);\n\n  if (fill === undefined) {\n    fill = !!options.backgroundColor;\n  }\n\n  if (fill === false || fill === null) {\n    return false;\n  }\n\n  if (fill === true) {\n    return 'origin';\n  }\n  return fill;\n}\n","/**\n * @typedef { import('../../core/core.controller.js').default } Chart\n * @typedef { import('../../core/core.scale.js').default } Scale\n * @typedef { import('../../elements/element.point.js').default } PointElement\n */\n\nimport {LineElement} from '../../elements/index.js';\nimport {_isBetween} from '../../helpers/index.js';\nimport {_createBoundaryLine} from './filler.helper.js';\n\n/**\n * @param {{ chart: Chart; scale: Scale; index: number; line: LineElement; }} source\n * @return {LineElement}\n */\nexport function _buildStackLine(source) {\n  const {scale, index, line} = source;\n  const points = [];\n  const segments = line.segments;\n  const sourcePoints = line.points;\n  const linesBelow = getLinesBelow(scale, index);\n  linesBelow.push(_createBoundaryLine({x: null, y: scale.bottom}, line));\n\n  for (let i = 0; i < segments.length; i++) {\n    const segment = segments[i];\n    for (let j = segment.start; j <= segment.end; j++) {\n      addPointsBelow(points, sourcePoints[j], linesBelow);\n    }\n  }\n  return new LineElement({points, options: {}});\n}\n\n/**\n * @param {Scale} scale\n * @param {number} index\n * @return {LineElement[]}\n */\nfunction getLinesBelow(scale, index) {\n  const below = [];\n  const metas = scale.getMatchingVisibleMetas('line');\n\n  for (let i = 0; i < metas.length; i++) {\n    const meta = metas[i];\n    if (meta.index === index) {\n      break;\n    }\n    if (!meta.hidden) {\n      below.unshift(meta.dataset);\n    }\n  }\n  return below;\n}\n\n/**\n * @param {PointElement[]} points\n * @param {PointElement} sourcePoint\n * @param {LineElement[]} linesBelow\n */\nfunction addPointsBelow(points, sourcePoint, linesBelow) {\n  const postponed = [];\n  for (let j = 0; j < linesBelow.length; j++) {\n    const line = linesBelow[j];\n    const {first, last, point} = findPoint(line, sourcePoint, 'x');\n\n    if (!point || (first && last)) {\n      continue;\n    }\n    if (first) {\n      // First point of an segment -> need to add another point before this,\n      // from next line below.\n      postponed.unshift(point);\n    } else {\n      points.push(point);\n      if (!last) {\n        // In the middle of an segment, no need to add more points.\n        break;\n      }\n    }\n  }\n  points.push(...postponed);\n}\n\n/**\n * @param {LineElement} line\n * @param {PointElement} sourcePoint\n * @param {string} property\n * @returns {{point?: PointElement, first?: boolean, last?: boolean}}\n */\nfunction findPoint(line, sourcePoint, property) {\n  const point = line.interpolate(sourcePoint, property);\n  if (!point) {\n    return {};\n  }\n\n  const pointValue = point[property];\n  const segments = line.segments;\n  const linePoints = line.points;\n  let first = false;\n  let last = false;\n  for (let i = 0; i < segments.length; i++) {\n    const segment = segments[i];\n    const firstValue = linePoints[segment.start][property];\n    const lastValue = linePoints[segment.end][property];\n    if (_isBetween(pointValue, firstValue, lastValue)) {\n      first = pointValue === firstValue;\n      last = pointValue === lastValue;\n      break;\n    }\n  }\n  return {first, last, point};\n}\n","import {TAU} from '../../helpers/index.js';\n\n// TODO: use elements.ArcElement instead\nexport class simpleArc {\n  constructor(opts) {\n    this.x = opts.x;\n    this.y = opts.y;\n    this.radius = opts.radius;\n  }\n\n  pathSegment(ctx, bounds, opts) {\n    const {x, y, radius} = this;\n    bounds = bounds || {start: 0, end: TAU};\n    ctx.arc(x, y, radius, bounds.end, bounds.start, true);\n    return !opts.bounds;\n  }\n\n  interpolate(point) {\n    const {x, y, radius} = this;\n    const angle = point.angle;\n    return {\n      x: x + Math.cos(angle) * radius,\n      y: y + Math.sin(angle) * radius,\n      angle\n    };\n  }\n}\n","import {isFinite} from '../../helpers/index.js';\nimport {_createBoundaryLine} from './filler.helper.js';\nimport {_getTargetPixel, _getTargetValue} from './filler.options.js';\nimport {_buildStackLine} from './filler.target.stack.js';\nimport {simpleArc} from './simpleArc.js';\n\n/**\n * @typedef { import('../../core/core.controller.js').default } Chart\n * @typedef { import('../../core/core.scale.js').default } Scale\n * @typedef { import('../../elements/element.point.js').default } PointElement\n */\n\nexport function _getTarget(source) {\n  const {chart, fill, line} = source;\n\n  if (isFinite(fill)) {\n    return getLineByIndex(chart, fill);\n  }\n\n  if (fill === 'stack') {\n    return _buildStackLine(source);\n  }\n\n  if (fill === 'shape') {\n    return true;\n  }\n\n  const boundary = computeBoundary(source);\n\n  if (boundary instanceof simpleArc) {\n    return boundary;\n  }\n\n  return _createBoundaryLine(boundary, line);\n}\n\n/**\n * @param {Chart} chart\n * @param {number} index\n */\nfunction getLineByIndex(chart, index) {\n  const meta = chart.getDatasetMeta(index);\n  const visible = meta && chart.isDatasetVisible(index);\n  return visible ? meta.dataset : null;\n}\n\nfunction computeBoundary(source) {\n  const scale = source.scale || {};\n\n  if (scale.getPointPositionForValue) {\n    return computeCircularBoundary(source);\n  }\n  return computeLinearBoundary(source);\n}\n\n\nfunction computeLinearBoundary(source) {\n  const {scale = {}, fill} = source;\n  const pixel = _getTargetPixel(fill, scale);\n\n  if (isFinite(pixel)) {\n    const horizontal = scale.isHorizontal();\n\n    return {\n      x: horizontal ? pixel : null,\n      y: horizontal ? null : pixel\n    };\n  }\n\n  return null;\n}\n\nfunction computeCircularBoundary(source) {\n  const {scale, fill} = source;\n  const options = scale.options;\n  const length = scale.getLabels().length;\n  const start = options.reverse ? scale.max : scale.min;\n  const value = _getTargetValue(fill, scale, start);\n  const target = [];\n\n  if (options.grid.circular) {\n    const center = scale.getPointPositionForValue(0, start);\n    return new simpleArc({\n      x: center.x,\n      y: center.y,\n      radius: scale.getDistanceFromCenterForValue(value)\n    });\n  }\n\n  for (let i = 0; i < length; ++i) {\n    target.push(scale.getPointPositionForValue(i, value));\n  }\n  return target;\n}\n\n","import {clipArea, unclipArea} from '../../helpers/index.js';\nimport {_findSegmentEnd, _getBounds, _segments} from './filler.segment.js';\nimport {_getTarget} from './filler.target.js';\n\nexport function _drawfill(ctx, source, area) {\n  const target = _getTarget(source);\n  const {line, scale, axis} = source;\n  const lineOpts = line.options;\n  const fillOption = lineOpts.fill;\n  const color = lineOpts.backgroundColor;\n  const {above = color, below = color} = fillOption || {};\n  if (target && line.points.length) {\n    clipArea(ctx, area);\n    doFill(ctx, {line, target, above, below, area, scale, axis});\n    unclipArea(ctx);\n  }\n}\n\nfunction doFill(ctx, cfg) {\n  const {line, target, above, below, area, scale} = cfg;\n  const property = line._loop ? 'angle' : cfg.axis;\n\n  ctx.save();\n\n  if (property === 'x' && below !== above) {\n    clipVertical(ctx, target, area.top);\n    fill(ctx, {line, target, color: above, scale, property});\n    ctx.restore();\n    ctx.save();\n    clipVertical(ctx, target, area.bottom);\n  }\n  fill(ctx, {line, target, color: below, scale, property});\n\n  ctx.restore();\n}\n\nfunction clipVertical(ctx, target, clipY) {\n  const {segments, points} = target;\n  let first = true;\n  let lineLoop = false;\n\n  ctx.beginPath();\n  for (const segment of segments) {\n    const {start, end} = segment;\n    const firstPoint = points[start];\n    const lastPoint = points[_findSegmentEnd(start, end, points)];\n    if (first) {\n      ctx.moveTo(firstPoint.x, firstPoint.y);\n      first = false;\n    } else {\n      ctx.lineTo(firstPoint.x, clipY);\n      ctx.lineTo(firstPoint.x, firstPoint.y);\n    }\n    lineLoop = !!target.pathSegment(ctx, segment, {move: lineLoop});\n    if (lineLoop) {\n      ctx.closePath();\n    } else {\n      ctx.lineTo(lastPoint.x, clipY);\n    }\n  }\n\n  ctx.lineTo(target.first().x, clipY);\n  ctx.closePath();\n  ctx.clip();\n}\n\nfunction fill(ctx, cfg) {\n  const {line, target, property, color, scale} = cfg;\n  const segments = _segments(line, target, property);\n\n  for (const {source: src, target: tgt, start, end} of segments) {\n    const {style: {backgroundColor = color} = {}} = src;\n    const notShape = target !== true;\n\n    ctx.save();\n    ctx.fillStyle = backgroundColor;\n\n    clipBounds(ctx, scale, notShape && _getBounds(property, start, end));\n\n    ctx.beginPath();\n\n    const lineLoop = !!line.pathSegment(ctx, src);\n\n    let loop;\n    if (notShape) {\n      if (lineLoop) {\n        ctx.closePath();\n      } else {\n        interpolatedLineTo(ctx, target, end, property);\n      }\n\n      const targetLoop = !!target.pathSegment(ctx, tgt, {move: lineLoop, reverse: true});\n      loop = lineLoop && targetLoop;\n      if (!loop) {\n        interpolatedLineTo(ctx, target, start, property);\n      }\n    }\n\n    ctx.closePath();\n    ctx.fill(loop ? 'evenodd' : 'nonzero');\n\n    ctx.restore();\n  }\n}\n\nfunction clipBounds(ctx, scale, bounds) {\n  const {top, bottom} = scale.chart.chartArea;\n  const {property, start, end} = bounds || {};\n  if (property === 'x') {\n    ctx.beginPath();\n    ctx.rect(start, top, end - start, bottom - top);\n    ctx.clip();\n  }\n}\n\nfunction interpolatedLineTo(ctx, target, point, property) {\n  const interpolatedPoint = target.interpolate(point, property);\n  if (interpolatedPoint) {\n    ctx.lineTo(interpolatedPoint.x, interpolatedPoint.y);\n  }\n}\n\n","/**\n * Plugin based on discussion from the following Chart.js issues:\n * @see https://github.com/chartjs/Chart.js/issues/2380#issuecomment-279961569\n * @see https://github.com/chartjs/Chart.js/issues/2440#issuecomment-256461897\n */\n\nimport LineElement from '../../elements/element.line.js';\nimport {_drawfill} from './filler.drawing.js';\nimport {_shouldApplyFill} from './filler.helper.js';\nimport {_decodeFill, _resolveTarget} from './filler.options.js';\n\nexport default {\n  id: 'filler',\n\n  afterDatasetsUpdate(chart, _args, options) {\n    const count = (chart.data.datasets || []).length;\n    const sources = [];\n    let meta, i, line, source;\n\n    for (i = 0; i < count; ++i) {\n      meta = chart.getDatasetMeta(i);\n      line = meta.dataset;\n      source = null;\n\n      if (line && line.options && line instanceof LineElement) {\n        source = {\n          visible: chart.isDatasetVisible(i),\n          index: i,\n          fill: _decodeFill(line, i, count),\n          chart,\n          axis: meta.controller.options.indexAxis,\n          scale: meta.vScale,\n          line,\n        };\n      }\n\n      meta.$filler = source;\n      sources.push(source);\n    }\n\n    for (i = 0; i < count; ++i) {\n      source = sources[i];\n      if (!source || source.fill === false) {\n        continue;\n      }\n\n      source.fill = _resolveTarget(sources, i, options.propagate);\n    }\n  },\n\n  beforeDraw(chart, _args, options) {\n    const draw = options.drawTime === 'beforeDraw';\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    const area = chart.chartArea;\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      const source = metasets[i].$filler;\n      if (!source) {\n        continue;\n      }\n\n      source.line.updateControlPoints(area, source.axis);\n      if (draw && source.fill) {\n        _drawfill(chart.ctx, source, area);\n      }\n    }\n  },\n\n  beforeDatasetsDraw(chart, _args, options) {\n    if (options.drawTime !== 'beforeDatasetsDraw') {\n      return;\n    }\n\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    for (let i = metasets.length - 1; i >= 0; --i) {\n      const source = metasets[i].$filler;\n\n      if (_shouldApplyFill(source)) {\n        _drawfill(chart.ctx, source, chart.chartArea);\n      }\n    }\n  },\n\n  beforeDatasetDraw(chart, args, options) {\n    const source = args.meta.$filler;\n\n    if (!_shouldApplyFill(source) || options.drawTime !== 'beforeDatasetDraw') {\n      return;\n    }\n\n    _drawfill(chart.ctx, source, chart.chartArea);\n  },\n\n  defaults: {\n    propagate: true,\n    drawTime: 'beforeDatasetDraw'\n  }\n};\n","import defaults from '../core/core.defaults.js';\nimport Element from '../core/core.element.js';\nimport layouts from '../core/core.layouts.js';\nimport {addRoundedRectPath, drawPointLegend, renderText} from '../helpers/helpers.canvas.js';\nimport {\n  _isBetween,\n  callback as call,\n  clipArea,\n  getRtlAdapter,\n  overrideTextDirection,\n  restoreTextDirection,\n  toFont,\n  toPadding,\n  unclipArea,\n  valueOrDefault,\n} from '../helpers/index.js';\nimport {_alignStartEnd, _textX, _toLeftRightCenter} from '../helpers/helpers.extras.js';\nimport {toTRBLCorners} from '../helpers/helpers.options.js';\n\n/**\n * @typedef { import('../types/index.js').ChartEvent } ChartEvent\n */\n\nconst getBoxSize = (labelOpts, fontSize) => {\n  let {boxHeight = fontSize, boxWidth = fontSize} = labelOpts;\n\n  if (labelOpts.usePointStyle) {\n    boxHeight = Math.min(boxHeight, fontSize);\n    boxWidth = labelOpts.pointStyleWidth || Math.min(boxWidth, fontSize);\n  }\n\n  return {\n    boxWidth,\n    boxHeight,\n    itemHeight: Math.max(fontSize, boxHeight)\n  };\n};\n\nconst itemsEqual = (a, b) => a !== null && b !== null && a.datasetIndex === b.datasetIndex && a.index === b.index;\n\nexport class Legend extends Element {\n\n  /**\n\t * @param {{ ctx: any; options: any; chart: any; }} config\n\t */\n  constructor(config) {\n    super();\n\n    this._added = false;\n\n    // Contains hit boxes for each dataset (in dataset order)\n    this.legendHitBoxes = [];\n\n    /**\n \t\t * @private\n \t\t */\n    this._hoveredItem = null;\n\n    // Are we in doughnut mode which has a different data type\n    this.doughnutMode = false;\n\n    this.chart = config.chart;\n    this.options = config.options;\n    this.ctx = config.ctx;\n    this.legendItems = undefined;\n    this.columnSizes = undefined;\n    this.lineWidths = undefined;\n    this.maxHeight = undefined;\n    this.maxWidth = undefined;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.height = undefined;\n    this.width = undefined;\n    this._margins = undefined;\n    this.position = undefined;\n    this.weight = undefined;\n    this.fullSize = undefined;\n  }\n\n  update(maxWidth, maxHeight, margins) {\n    this.maxWidth = maxWidth;\n    this.maxHeight = maxHeight;\n    this._margins = margins;\n\n    this.setDimensions();\n    this.buildLabels();\n    this.fit();\n  }\n\n  setDimensions() {\n    if (this.isHorizontal()) {\n      this.width = this.maxWidth;\n      this.left = this._margins.left;\n      this.right = this.width;\n    } else {\n      this.height = this.maxHeight;\n      this.top = this._margins.top;\n      this.bottom = this.height;\n    }\n  }\n\n  buildLabels() {\n    const labelOpts = this.options.labels || {};\n    let legendItems = call(labelOpts.generateLabels, [this.chart], this) || [];\n\n    if (labelOpts.filter) {\n      legendItems = legendItems.filter((item) => labelOpts.filter(item, this.chart.data));\n    }\n\n    if (labelOpts.sort) {\n      legendItems = legendItems.sort((a, b) => labelOpts.sort(a, b, this.chart.data));\n    }\n\n    if (this.options.reverse) {\n      legendItems.reverse();\n    }\n\n    this.legendItems = legendItems;\n  }\n\n  fit() {\n    const {options, ctx} = this;\n\n    // The legend may not be displayed for a variety of reasons including\n    // the fact that the defaults got set to `false`.\n    // When the legend is not displayed, there are no guarantees that the options\n    // are correctly formatted so we need to bail out as early as possible.\n    if (!options.display) {\n      this.width = this.height = 0;\n      return;\n    }\n\n    const labelOpts = options.labels;\n    const labelFont = toFont(labelOpts.font);\n    const fontSize = labelFont.size;\n    const titleHeight = this._computeTitleHeight();\n    const {boxWidth, itemHeight} = getBoxSize(labelOpts, fontSize);\n\n    let width, height;\n\n    ctx.font = labelFont.string;\n\n    if (this.isHorizontal()) {\n      width = this.maxWidth; // fill all the width\n      height = this._fitRows(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n    } else {\n      height = this.maxHeight; // fill all the height\n      width = this._fitCols(titleHeight, labelFont, boxWidth, itemHeight) + 10;\n    }\n\n    this.width = Math.min(width, options.maxWidth || this.maxWidth);\n    this.height = Math.min(height, options.maxHeight || this.maxHeight);\n  }\n\n  /**\n\t * @private\n\t */\n  _fitRows(titleHeight, fontSize, boxWidth, itemHeight) {\n    const {ctx, maxWidth, options: {labels: {padding}}} = this;\n    const hitboxes = this.legendHitBoxes = [];\n    // Width of each line of legend boxes. Labels wrap onto multiple lines when there are too many to fit on one\n    const lineWidths = this.lineWidths = [0];\n    const lineHeight = itemHeight + padding;\n    let totalHeight = titleHeight;\n\n    ctx.textAlign = 'left';\n    ctx.textBaseline = 'middle';\n\n    let row = -1;\n    let top = -lineHeight;\n    this.legendItems.forEach((legendItem, i) => {\n      const itemWidth = boxWidth + (fontSize / 2) + ctx.measureText(legendItem.text).width;\n\n      if (i === 0 || lineWidths[lineWidths.length - 1] + itemWidth + 2 * padding > maxWidth) {\n        totalHeight += lineHeight;\n        lineWidths[lineWidths.length - (i > 0 ? 0 : 1)] = 0;\n        top += lineHeight;\n        row++;\n      }\n\n      hitboxes[i] = {left: 0, top, row, width: itemWidth, height: itemHeight};\n\n      lineWidths[lineWidths.length - 1] += itemWidth + padding;\n    });\n\n    return totalHeight;\n  }\n\n  _fitCols(titleHeight, labelFont, boxWidth, _itemHeight) {\n    const {ctx, maxHeight, options: {labels: {padding}}} = this;\n    const hitboxes = this.legendHitBoxes = [];\n    const columnSizes = this.columnSizes = [];\n    const heightLimit = maxHeight - titleHeight;\n\n    let totalWidth = padding;\n    let currentColWidth = 0;\n    let currentColHeight = 0;\n\n    let left = 0;\n    let col = 0;\n\n    this.legendItems.forEach((legendItem, i) => {\n      const {itemWidth, itemHeight} = calculateItemSize(boxWidth, labelFont, ctx, legendItem, _itemHeight);\n\n      // If too tall, go to new column\n      if (i > 0 && currentColHeight + itemHeight + 2 * padding > heightLimit) {\n        totalWidth += currentColWidth + padding;\n        columnSizes.push({width: currentColWidth, height: currentColHeight}); // previous column size\n        left += currentColWidth + padding;\n        col++;\n        currentColWidth = currentColHeight = 0;\n      }\n\n      // Store the hitbox width and height here. Final position will be updated in `draw`\n      hitboxes[i] = {left, top: currentColHeight, col, width: itemWidth, height: itemHeight};\n\n      // Get max width\n      currentColWidth = Math.max(currentColWidth, itemWidth);\n      currentColHeight += itemHeight + padding;\n    });\n\n    totalWidth += currentColWidth;\n    columnSizes.push({width: currentColWidth, height: currentColHeight}); // previous column size\n\n    return totalWidth;\n  }\n\n  adjustHitBoxes() {\n    if (!this.options.display) {\n      return;\n    }\n    const titleHeight = this._computeTitleHeight();\n    const {legendHitBoxes: hitboxes, options: {align, labels: {padding}, rtl}} = this;\n    const rtlHelper = getRtlAdapter(rtl, this.left, this.width);\n    if (this.isHorizontal()) {\n      let row = 0;\n      let left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n      for (const hitbox of hitboxes) {\n        if (row !== hitbox.row) {\n          row = hitbox.row;\n          left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n        }\n        hitbox.top += this.top + titleHeight + padding;\n        hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(left), hitbox.width);\n        left += hitbox.width + padding;\n      }\n    } else {\n      let col = 0;\n      let top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n      for (const hitbox of hitboxes) {\n        if (hitbox.col !== col) {\n          col = hitbox.col;\n          top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n        }\n        hitbox.top = top;\n        hitbox.left += this.left + padding;\n        hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(hitbox.left), hitbox.width);\n        top += hitbox.height + padding;\n      }\n    }\n  }\n\n  isHorizontal() {\n    return this.options.position === 'top' || this.options.position === 'bottom';\n  }\n\n  draw() {\n    if (this.options.display) {\n      const ctx = this.ctx;\n      clipArea(ctx, this);\n\n      this._draw();\n\n      unclipArea(ctx);\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _draw() {\n    const {options: opts, columnSizes, lineWidths, ctx} = this;\n    const {align, labels: labelOpts} = opts;\n    const defaultColor = defaults.color;\n    const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n    const labelFont = toFont(labelOpts.font);\n    const {padding} = labelOpts;\n    const fontSize = labelFont.size;\n    const halfFontSize = fontSize / 2;\n    let cursor;\n\n    this.drawTitle();\n\n    // Canvas setup\n    ctx.textAlign = rtlHelper.textAlign('left');\n    ctx.textBaseline = 'middle';\n    ctx.lineWidth = 0.5;\n    ctx.font = labelFont.string;\n\n    const {boxWidth, boxHeight, itemHeight} = getBoxSize(labelOpts, fontSize);\n\n    // current position\n    const drawLegendBox = function(x, y, legendItem) {\n      if (isNaN(boxWidth) || boxWidth <= 0 || isNaN(boxHeight) || boxHeight < 0) {\n        return;\n      }\n\n      // Set the ctx for the box\n      ctx.save();\n\n      const lineWidth = valueOrDefault(legendItem.lineWidth, 1);\n      ctx.fillStyle = valueOrDefault(legendItem.fillStyle, defaultColor);\n      ctx.lineCap = valueOrDefault(legendItem.lineCap, 'butt');\n      ctx.lineDashOffset = valueOrDefault(legendItem.lineDashOffset, 0);\n      ctx.lineJoin = valueOrDefault(legendItem.lineJoin, 'miter');\n      ctx.lineWidth = lineWidth;\n      ctx.strokeStyle = valueOrDefault(legendItem.strokeStyle, defaultColor);\n\n      ctx.setLineDash(valueOrDefault(legendItem.lineDash, []));\n\n      if (labelOpts.usePointStyle) {\n        // Recalculate x and y for drawPoint() because its expecting\n        // x and y to be center of figure (instead of top left)\n        const drawOptions = {\n          radius: boxHeight * Math.SQRT2 / 2,\n          pointStyle: legendItem.pointStyle,\n          rotation: legendItem.rotation,\n          borderWidth: lineWidth\n        };\n        const centerX = rtlHelper.xPlus(x, boxWidth / 2);\n        const centerY = y + halfFontSize;\n\n        // Draw pointStyle as legend symbol\n        drawPointLegend(ctx, drawOptions, centerX, centerY, labelOpts.pointStyleWidth && boxWidth);\n      } else {\n        // Draw box as legend symbol\n        // Adjust position when boxHeight < fontSize (want it centered)\n        const yBoxTop = y + Math.max((fontSize - boxHeight) / 2, 0);\n        const xBoxLeft = rtlHelper.leftForLtr(x, boxWidth);\n        const borderRadius = toTRBLCorners(legendItem.borderRadius);\n\n        ctx.beginPath();\n\n        if (Object.values(borderRadius).some(v => v !== 0)) {\n          addRoundedRectPath(ctx, {\n            x: xBoxLeft,\n            y: yBoxTop,\n            w: boxWidth,\n            h: boxHeight,\n            radius: borderRadius,\n          });\n        } else {\n          ctx.rect(xBoxLeft, yBoxTop, boxWidth, boxHeight);\n        }\n\n        ctx.fill();\n        if (lineWidth !== 0) {\n          ctx.stroke();\n        }\n      }\n\n      ctx.restore();\n    };\n\n    const fillText = function(x, y, legendItem) {\n      renderText(ctx, legendItem.text, x, y + (itemHeight / 2), labelFont, {\n        strikethrough: legendItem.hidden,\n        textAlign: rtlHelper.textAlign(legendItem.textAlign)\n      });\n    };\n\n    // Horizontal\n    const isHorizontal = this.isHorizontal();\n    const titleHeight = this._computeTitleHeight();\n    if (isHorizontal) {\n      cursor = {\n        x: _alignStartEnd(align, this.left + padding, this.right - lineWidths[0]),\n        y: this.top + padding + titleHeight,\n        line: 0\n      };\n    } else {\n      cursor = {\n        x: this.left + padding,\n        y: _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[0].height),\n        line: 0\n      };\n    }\n\n    overrideTextDirection(this.ctx, opts.textDirection);\n\n    const lineHeight = itemHeight + padding;\n    this.legendItems.forEach((legendItem, i) => {\n      ctx.strokeStyle = legendItem.fontColor; // for strikethrough effect\n      ctx.fillStyle = legendItem.fontColor; // render in correct colour\n\n      const textWidth = ctx.measureText(legendItem.text).width;\n      const textAlign = rtlHelper.textAlign(legendItem.textAlign || (legendItem.textAlign = labelOpts.textAlign));\n      const width = boxWidth + halfFontSize + textWidth;\n      let x = cursor.x;\n      let y = cursor.y;\n\n      rtlHelper.setWidth(this.width);\n\n      if (isHorizontal) {\n        if (i > 0 && x + width + padding > this.right) {\n          y = cursor.y += lineHeight;\n          cursor.line++;\n          x = cursor.x = _alignStartEnd(align, this.left + padding, this.right - lineWidths[cursor.line]);\n        }\n      } else if (i > 0 && y + lineHeight > this.bottom) {\n        x = cursor.x = x + columnSizes[cursor.line].width + padding;\n        cursor.line++;\n        y = cursor.y = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[cursor.line].height);\n      }\n\n      const realX = rtlHelper.x(x);\n\n      drawLegendBox(realX, y, legendItem);\n\n      x = _textX(textAlign, x + boxWidth + halfFontSize, isHorizontal ? x + width : this.right, opts.rtl);\n\n      // Fill the actual label\n      fillText(rtlHelper.x(x), y, legendItem);\n\n      if (isHorizontal) {\n        cursor.x += width + padding;\n      } else if (typeof legendItem.text !== 'string') {\n        const fontLineHeight = labelFont.lineHeight;\n        cursor.y += calculateLegendItemHeight(legendItem, fontLineHeight) + padding;\n      } else {\n        cursor.y += lineHeight;\n      }\n    });\n\n    restoreTextDirection(this.ctx, opts.textDirection);\n  }\n\n  /**\n\t * @protected\n\t */\n  drawTitle() {\n    const opts = this.options;\n    const titleOpts = opts.title;\n    const titleFont = toFont(titleOpts.font);\n    const titlePadding = toPadding(titleOpts.padding);\n\n    if (!titleOpts.display) {\n      return;\n    }\n\n    const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n    const ctx = this.ctx;\n    const position = titleOpts.position;\n    const halfFontSize = titleFont.size / 2;\n    const topPaddingPlusHalfFontSize = titlePadding.top + halfFontSize;\n    let y;\n\n    // These defaults are used when the legend is vertical.\n    // When horizontal, they are computed below.\n    let left = this.left;\n    let maxWidth = this.width;\n\n    if (this.isHorizontal()) {\n      // Move left / right so that the title is above the legend lines\n      maxWidth = Math.max(...this.lineWidths);\n      y = this.top + topPaddingPlusHalfFontSize;\n      left = _alignStartEnd(opts.align, left, this.right - maxWidth);\n    } else {\n      // Move down so that the title is above the legend stack in every alignment\n      const maxHeight = this.columnSizes.reduce((acc, size) => Math.max(acc, size.height), 0);\n      y = topPaddingPlusHalfFontSize + _alignStartEnd(opts.align, this.top, this.bottom - maxHeight - opts.labels.padding - this._computeTitleHeight());\n    }\n\n    // Now that we know the left edge of the inner legend box, compute the correct\n    // X coordinate from the title alignment\n    const x = _alignStartEnd(position, left, left + maxWidth);\n\n    // Canvas setup\n    ctx.textAlign = rtlHelper.textAlign(_toLeftRightCenter(position));\n    ctx.textBaseline = 'middle';\n    ctx.strokeStyle = titleOpts.color;\n    ctx.fillStyle = titleOpts.color;\n    ctx.font = titleFont.string;\n\n    renderText(ctx, titleOpts.text, x, y, titleFont);\n  }\n\n  /**\n\t * @private\n\t */\n  _computeTitleHeight() {\n    const titleOpts = this.options.title;\n    const titleFont = toFont(titleOpts.font);\n    const titlePadding = toPadding(titleOpts.padding);\n    return titleOpts.display ? titleFont.lineHeight + titlePadding.height : 0;\n  }\n\n  /**\n\t * @private\n\t */\n  _getLegendItemAt(x, y) {\n    let i, hitBox, lh;\n\n    if (_isBetween(x, this.left, this.right)\n      && _isBetween(y, this.top, this.bottom)) {\n      // See if we are touching one of the dataset boxes\n      lh = this.legendHitBoxes;\n      for (i = 0; i < lh.length; ++i) {\n        hitBox = lh[i];\n\n        if (_isBetween(x, hitBox.left, hitBox.left + hitBox.width)\n          && _isBetween(y, hitBox.top, hitBox.top + hitBox.height)) {\n          // Touching an element\n          return this.legendItems[i];\n        }\n      }\n    }\n\n    return null;\n  }\n\n  /**\n\t * Handle an event\n\t * @param {ChartEvent} e - The event to handle\n\t */\n  handleEvent(e) {\n    const opts = this.options;\n    if (!isListened(e.type, opts)) {\n      return;\n    }\n\n    // Chart event already has relative position in it\n    const hoveredItem = this._getLegendItemAt(e.x, e.y);\n\n    if (e.type === 'mousemove' || e.type === 'mouseout') {\n      const previous = this._hoveredItem;\n      const sameItem = itemsEqual(previous, hoveredItem);\n      if (previous && !sameItem) {\n        call(opts.onLeave, [e, previous, this], this);\n      }\n\n      this._hoveredItem = hoveredItem;\n\n      if (hoveredItem && !sameItem) {\n        call(opts.onHover, [e, hoveredItem, this], this);\n      }\n    } else if (hoveredItem) {\n      call(opts.onClick, [e, hoveredItem, this], this);\n    }\n  }\n}\n\nfunction calculateItemSize(boxWidth, labelFont, ctx, legendItem, _itemHeight) {\n  const itemWidth = calculateItemWidth(legendItem, boxWidth, labelFont, ctx);\n  const itemHeight = calculateItemHeight(_itemHeight, legendItem, labelFont.lineHeight);\n  return {itemWidth, itemHeight};\n}\n\nfunction calculateItemWidth(legendItem, boxWidth, labelFont, ctx) {\n  let legendItemText = legendItem.text;\n  if (legendItemText && typeof legendItemText !== 'string') {\n    legendItemText = legendItemText.reduce((a, b) => a.length > b.length ? a : b);\n  }\n  return boxWidth + (labelFont.size / 2) + ctx.measureText(legendItemText).width;\n}\n\nfunction calculateItemHeight(_itemHeight, legendItem, fontLineHeight) {\n  let itemHeight = _itemHeight;\n  if (typeof legendItem.text !== 'string') {\n    itemHeight = calculateLegendItemHeight(legendItem, fontLineHeight);\n  }\n  return itemHeight;\n}\n\nfunction calculateLegendItemHeight(legendItem, fontLineHeight) {\n  const labelHeight = legendItem.text ? legendItem.text.length : 0;\n  return fontLineHeight * labelHeight;\n}\n\nfunction isListened(type, opts) {\n  if ((type === 'mousemove' || type === 'mouseout') && (opts.onHover || opts.onLeave)) {\n    return true;\n  }\n  if (opts.onClick && (type === 'click' || type === 'mouseup')) {\n    return true;\n  }\n  return false;\n}\n\nexport default {\n  id: 'legend',\n\n  /**\n\t * For tests\n\t * @private\n\t */\n  _element: Legend,\n\n  start(chart, _args, options) {\n    const legend = chart.legend = new Legend({ctx: chart.ctx, options, chart});\n    layouts.configure(chart, legend, options);\n    layouts.addBox(chart, legend);\n  },\n\n  stop(chart) {\n    layouts.removeBox(chart, chart.legend);\n    delete chart.legend;\n  },\n\n  // During the beforeUpdate step, the layout configuration needs to run\n  // This ensures that if the legend position changes (via an option update)\n  // the layout system respects the change. See https://github.com/chartjs/Chart.js/issues/7527\n  beforeUpdate(chart, _args, options) {\n    const legend = chart.legend;\n    layouts.configure(chart, legend, options);\n    legend.options = options;\n  },\n\n  // The labels need to be built after datasets are updated to ensure that colors\n  // and other styling are correct. See https://github.com/chartjs/Chart.js/issues/6968\n  afterUpdate(chart) {\n    const legend = chart.legend;\n    legend.buildLabels();\n    legend.adjustHitBoxes();\n  },\n\n\n  afterEvent(chart, args) {\n    if (!args.replay) {\n      chart.legend.handleEvent(args.event);\n    }\n  },\n\n  defaults: {\n    display: true,\n    position: 'top',\n    align: 'center',\n    fullSize: true,\n    reverse: false,\n    weight: 1000,\n\n    // a callback that will handle\n    onClick(e, legendItem, legend) {\n      const index = legendItem.datasetIndex;\n      const ci = legend.chart;\n      if (ci.isDatasetVisible(index)) {\n        ci.hide(index);\n        legendItem.hidden = true;\n      } else {\n        ci.show(index);\n        legendItem.hidden = false;\n      }\n    },\n\n    onHover: null,\n    onLeave: null,\n\n    labels: {\n      color: (ctx) => ctx.chart.options.color,\n      boxWidth: 40,\n      padding: 10,\n      // Generates labels shown in the legend\n      // Valid properties to return:\n      // text : text to display\n      // fillStyle : fill of coloured box\n      // strokeStyle: stroke of coloured box\n      // hidden : if this legend item refers to a hidden item\n      // lineCap : cap style for line\n      // lineDash\n      // lineDashOffset :\n      // lineJoin :\n      // lineWidth :\n      generateLabels(chart) {\n        const datasets = chart.data.datasets;\n        const {labels: {usePointStyle, pointStyle, textAlign, color, useBorderRadius, borderRadius}} = chart.legend.options;\n\n        return chart._getSortedDatasetMetas().map((meta) => {\n          const style = meta.controller.getStyle(usePointStyle ? 0 : undefined);\n          const borderWidth = toPadding(style.borderWidth);\n\n          return {\n            text: datasets[meta.index].label,\n            fillStyle: style.backgroundColor,\n            fontColor: color,\n            hidden: !meta.visible,\n            lineCap: style.borderCapStyle,\n            lineDash: style.borderDash,\n            lineDashOffset: style.borderDashOffset,\n            lineJoin: style.borderJoinStyle,\n            lineWidth: (borderWidth.width + borderWidth.height) / 4,\n            strokeStyle: style.borderColor,\n            pointStyle: pointStyle || style.pointStyle,\n            rotation: style.rotation,\n            textAlign: textAlign || style.textAlign,\n            borderRadius: useBorderRadius && (borderRadius || style.borderRadius),\n\n            // Below is extra data used for toggling the datasets\n            datasetIndex: meta.index\n          };\n        }, this);\n      }\n    },\n\n    title: {\n      color: (ctx) => ctx.chart.options.color,\n      display: false,\n      position: 'center',\n      text: '',\n    }\n  },\n\n  descriptors: {\n    _scriptable: (name) => !name.startsWith('on'),\n    labels: {\n      _scriptable: (name) => !['generateLabels', 'filter', 'sort'].includes(name),\n    }\n  },\n};\n","import Element from '../core/core.element.js';\nimport layouts from '../core/core.layouts.js';\nimport {PI, isArray, toPadding, toFont} from '../helpers/index.js';\nimport {_toLeftRightCenter, _alignStartEnd} from '../helpers/helpers.extras.js';\nimport {renderText} from '../helpers/helpers.canvas.js';\n\nexport class Title extends Element {\n  /**\n\t * @param {{ ctx: any; options: any; chart: any; }} config\n\t */\n  constructor(config) {\n    super();\n\n    this.chart = config.chart;\n    this.options = config.options;\n    this.ctx = config.ctx;\n    this._padding = undefined;\n    this.top = undefined;\n    this.bottom = undefined;\n    this.left = undefined;\n    this.right = undefined;\n    this.width = undefined;\n    this.height = undefined;\n    this.position = undefined;\n    this.weight = undefined;\n    this.fullSize = undefined;\n  }\n\n  update(maxWidth, maxHeight) {\n    const opts = this.options;\n\n    this.left = 0;\n    this.top = 0;\n\n    if (!opts.display) {\n      this.width = this.height = this.right = this.bottom = 0;\n      return;\n    }\n\n    this.width = this.right = maxWidth;\n    this.height = this.bottom = maxHeight;\n\n    const lineCount = isArray(opts.text) ? opts.text.length : 1;\n    this._padding = toPadding(opts.padding);\n    const textSize = lineCount * toFont(opts.font).lineHeight + this._padding.height;\n\n    if (this.isHorizontal()) {\n      this.height = textSize;\n    } else {\n      this.width = textSize;\n    }\n  }\n\n  isHorizontal() {\n    const pos = this.options.position;\n    return pos === 'top' || pos === 'bottom';\n  }\n\n  _drawArgs(offset) {\n    const {top, left, bottom, right, options} = this;\n    const align = options.align;\n    let rotation = 0;\n    let maxWidth, titleX, titleY;\n\n    if (this.isHorizontal()) {\n      titleX = _alignStartEnd(align, left, right);\n      titleY = top + offset;\n      maxWidth = right - left;\n    } else {\n      if (options.position === 'left') {\n        titleX = left + offset;\n        titleY = _alignStartEnd(align, bottom, top);\n        rotation = PI * -0.5;\n      } else {\n        titleX = right - offset;\n        titleY = _alignStartEnd(align, top, bottom);\n        rotation = PI * 0.5;\n      }\n      maxWidth = bottom - top;\n    }\n    return {titleX, titleY, maxWidth, rotation};\n  }\n\n  draw() {\n    const ctx = this.ctx;\n    const opts = this.options;\n\n    if (!opts.display) {\n      return;\n    }\n\n    const fontOpts = toFont(opts.font);\n    const lineHeight = fontOpts.lineHeight;\n    const offset = lineHeight / 2 + this._padding.top;\n    const {titleX, titleY, maxWidth, rotation} = this._drawArgs(offset);\n\n    renderText(ctx, opts.text, 0, 0, fontOpts, {\n      color: opts.color,\n      maxWidth,\n      rotation,\n      textAlign: _toLeftRightCenter(opts.align),\n      textBaseline: 'middle',\n      translation: [titleX, titleY],\n    });\n  }\n}\n\nfunction createTitle(chart, titleOpts) {\n  const title = new Title({\n    ctx: chart.ctx,\n    options: titleOpts,\n    chart\n  });\n\n  layouts.configure(chart, title, titleOpts);\n  layouts.addBox(chart, title);\n  chart.titleBlock = title;\n}\n\nexport default {\n  id: 'title',\n\n  /**\n\t * For tests\n\t * @private\n\t */\n  _element: Title,\n\n  start(chart, _args, options) {\n    createTitle(chart, options);\n  },\n\n  stop(chart) {\n    const titleBlock = chart.titleBlock;\n    layouts.removeBox(chart, titleBlock);\n    delete chart.titleBlock;\n  },\n\n  beforeUpdate(chart, _args, options) {\n    const title = chart.titleBlock;\n    layouts.configure(chart, title, options);\n    title.options = options;\n  },\n\n  defaults: {\n    align: 'center',\n    display: false,\n    font: {\n      weight: 'bold',\n    },\n    fullSize: true,\n    padding: 10,\n    position: 'top',\n    text: '',\n    weight: 2000         // by default greater than legend (1000) to be above\n  },\n\n  defaultRoutes: {\n    color: 'color'\n  },\n\n  descriptors: {\n    _scriptable: true,\n    _indexable: false,\n  },\n};\n","import {Title} from './plugin.title.js';\nimport layouts from '../core/core.layouts.js';\n\nconst map = new WeakMap();\n\nexport default {\n  id: 'subtitle',\n\n  start(chart, _args, options) {\n    const title = new Title({\n      ctx: chart.ctx,\n      options,\n      chart\n    });\n\n    layouts.configure(chart, title, options);\n    layouts.addBox(chart, title);\n    map.set(chart, title);\n  },\n\n  stop(chart) {\n    layouts.removeBox(chart, map.get(chart));\n    map.delete(chart);\n  },\n\n  beforeUpdate(chart, _args, options) {\n    const title = map.get(chart);\n    layouts.configure(chart, title, options);\n    title.options = options;\n  },\n\n  defaults: {\n    align: 'center',\n    display: false,\n    font: {\n      weight: 'normal',\n    },\n    fullSize: true,\n    padding: 0,\n    position: 'top',\n    text: '',\n    weight: 1500         // by default greater than legend (1000) and smaller than title (2000)\n  },\n\n  defaultRoutes: {\n    color: 'color'\n  },\n\n  descriptors: {\n    _scriptable: true,\n    _indexable: false,\n  },\n};\n","import Animations from '../core/core.animations.js';\nimport Element from '../core/core.element.js';\nimport {addRoundedRectPath} from '../helpers/helpers.canvas.js';\nimport {each, noop, isNullOrUndef, isArray, _elementsEqual, isObject} from '../helpers/helpers.core.js';\nimport {toFont, toPadding, toTRBLCorners} from '../helpers/helpers.options.js';\nimport {getRtlAdapter, overrideTextDirection, restoreTextDirection} from '../helpers/helpers.rtl.js';\nimport {distanceBetweenPoints, _limitValue} from '../helpers/helpers.math.js';\nimport {createContext, drawPoint} from '../helpers/index.js';\n\n/**\n * @typedef { import('../platform/platform.base.js').Chart } Chart\n * @typedef { import('../types/index.js').ChartEvent } ChartEvent\n * @typedef { import('../types/index.js').ActiveElement } ActiveElement\n * @typedef { import('../core/core.interaction.js').InteractionItem } InteractionItem\n */\n\nconst positioners = {\n  /**\n\t * Average mode places the tooltip at the average position of the elements shown\n\t */\n  average(items) {\n    if (!items.length) {\n      return false;\n    }\n\n    let i, len;\n    let xSet = new Set();\n    let y = 0;\n    let count = 0;\n\n    for (i = 0, len = items.length; i < len; ++i) {\n      const el = items[i].element;\n      if (el && el.hasValue()) {\n        const pos = el.tooltipPosition();\n        xSet.add(pos.x);\n        y += pos.y;\n        ++count;\n      }\n    }\n\n    // No visible items where found, return false so we don't have to divide by 0 which reduces in NaN\n    if (count === 0 || xSet.size === 0) {\n      return false;\n    }\n\n    const xAverage = [...xSet].reduce((a, b) => a + b) / xSet.size;\n\n    return {\n      x: xAverage,\n      y: y / count\n    };\n  },\n\n  /**\n\t * Gets the tooltip position nearest of the item nearest to the event position\n\t */\n  nearest(items, eventPosition) {\n    if (!items.length) {\n      return false;\n    }\n\n    let x = eventPosition.x;\n    let y = eventPosition.y;\n    let minDistance = Number.POSITIVE_INFINITY;\n    let i, len, nearestElement;\n\n    for (i = 0, len = items.length; i < len; ++i) {\n      const el = items[i].element;\n      if (el && el.hasValue()) {\n        const center = el.getCenterPoint();\n        const d = distanceBetweenPoints(eventPosition, center);\n\n        if (d < minDistance) {\n          minDistance = d;\n          nearestElement = el;\n        }\n      }\n    }\n\n    if (nearestElement) {\n      const tp = nearestElement.tooltipPosition();\n      x = tp.x;\n      y = tp.y;\n    }\n\n    return {\n      x,\n      y\n    };\n  }\n};\n\n// Helper to push or concat based on if the 2nd parameter is an array or not\nfunction pushOrConcat(base, toPush) {\n  if (toPush) {\n    if (isArray(toPush)) {\n      // base = base.concat(toPush);\n      Array.prototype.push.apply(base, toPush);\n    } else {\n      base.push(toPush);\n    }\n  }\n\n  return base;\n}\n\n/**\n * Returns array of strings split by newline\n * @param {*} str - The value to split by newline.\n * @returns {string|string[]} value if newline present - Returned from String split() method\n * @function\n */\nfunction splitNewlines(str) {\n  if ((typeof str === 'string' || str instanceof String) && str.indexOf('\\n') > -1) {\n    return str.split('\\n');\n  }\n  return str;\n}\n\n\n/**\n * Private helper to create a tooltip item model\n * @param {Chart} chart\n * @param {ActiveElement} item - {element, index, datasetIndex} to create the tooltip item for\n * @return new tooltip item\n */\nfunction createTooltipItem(chart, item) {\n  const {element, datasetIndex, index} = item;\n  const controller = chart.getDatasetMeta(datasetIndex).controller;\n  const {label, value} = controller.getLabelAndValue(index);\n\n  return {\n    chart,\n    label,\n    parsed: controller.getParsed(index),\n    raw: chart.data.datasets[datasetIndex].data[index],\n    formattedValue: value,\n    dataset: controller.getDataset(),\n    dataIndex: index,\n    datasetIndex,\n    element\n  };\n}\n\n/**\n * Get the size of the tooltip\n */\nfunction getTooltipSize(tooltip, options) {\n  const ctx = tooltip.chart.ctx;\n  const {body, footer, title} = tooltip;\n  const {boxWidth, boxHeight} = options;\n  const bodyFont = toFont(options.bodyFont);\n  const titleFont = toFont(options.titleFont);\n  const footerFont = toFont(options.footerFont);\n  const titleLineCount = title.length;\n  const footerLineCount = footer.length;\n  const bodyLineItemCount = body.length;\n\n  const padding = toPadding(options.padding);\n  let height = padding.height;\n  let width = 0;\n\n  // Count of all lines in the body\n  let combinedBodyLength = body.reduce((count, bodyItem) => count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length, 0);\n  combinedBodyLength += tooltip.beforeBody.length + tooltip.afterBody.length;\n\n  if (titleLineCount) {\n    height += titleLineCount * titleFont.lineHeight\n\t\t\t+ (titleLineCount - 1) * options.titleSpacing\n\t\t\t+ options.titleMarginBottom;\n  }\n  if (combinedBodyLength) {\n    // Body lines may include some extra height depending on boxHeight\n    const bodyLineHeight = options.displayColors ? Math.max(boxHeight, bodyFont.lineHeight) : bodyFont.lineHeight;\n    height += bodyLineItemCount * bodyLineHeight\n\t\t\t+ (combinedBodyLength - bodyLineItemCount) * bodyFont.lineHeight\n\t\t\t+ (combinedBodyLength - 1) * options.bodySpacing;\n  }\n  if (footerLineCount) {\n    height += options.footerMarginTop\n\t\t\t+ footerLineCount * footerFont.lineHeight\n\t\t\t+ (footerLineCount - 1) * options.footerSpacing;\n  }\n\n  // Title width\n  let widthPadding = 0;\n  const maxLineWidth = function(line) {\n    width = Math.max(width, ctx.measureText(line).width + widthPadding);\n  };\n\n  ctx.save();\n\n  ctx.font = titleFont.string;\n  each(tooltip.title, maxLineWidth);\n\n  // Body width\n  ctx.font = bodyFont.string;\n  each(tooltip.beforeBody.concat(tooltip.afterBody), maxLineWidth);\n\n  // Body lines may include some extra width due to the color box\n  widthPadding = options.displayColors ? (boxWidth + 2 + options.boxPadding) : 0;\n  each(body, (bodyItem) => {\n    each(bodyItem.before, maxLineWidth);\n    each(bodyItem.lines, maxLineWidth);\n    each(bodyItem.after, maxLineWidth);\n  });\n\n  // Reset back to 0\n  widthPadding = 0;\n\n  // Footer width\n  ctx.font = footerFont.string;\n  each(tooltip.footer, maxLineWidth);\n\n  ctx.restore();\n\n  // Add padding\n  width += padding.width;\n\n  return {width, height};\n}\n\nfunction determineYAlign(chart, size) {\n  const {y, height} = size;\n\n  if (y < height / 2) {\n    return 'top';\n  } else if (y > (chart.height - height / 2)) {\n    return 'bottom';\n  }\n  return 'center';\n}\n\nfunction doesNotFitWithAlign(xAlign, chart, options, size) {\n  const {x, width} = size;\n  const caret = options.caretSize + options.caretPadding;\n  if (xAlign === 'left' && x + width + caret > chart.width) {\n    return true;\n  }\n\n  if (xAlign === 'right' && x - width - caret < 0) {\n    return true;\n  }\n}\n\nfunction determineXAlign(chart, options, size, yAlign) {\n  const {x, width} = size;\n  const {width: chartWidth, chartArea: {left, right}} = chart;\n  let xAlign = 'center';\n\n  if (yAlign === 'center') {\n    xAlign = x <= (left + right) / 2 ? 'left' : 'right';\n  } else if (x <= width / 2) {\n    xAlign = 'left';\n  } else if (x >= chartWidth - width / 2) {\n    xAlign = 'right';\n  }\n\n  if (doesNotFitWithAlign(xAlign, chart, options, size)) {\n    xAlign = 'center';\n  }\n\n  return xAlign;\n}\n\n/**\n * Helper to get the alignment of a tooltip given the size\n */\nfunction determineAlignment(chart, options, size) {\n  const yAlign = size.yAlign || options.yAlign || determineYAlign(chart, size);\n\n  return {\n    xAlign: size.xAlign || options.xAlign || determineXAlign(chart, options, size, yAlign),\n    yAlign\n  };\n}\n\nfunction alignX(size, xAlign) {\n  let {x, width} = size;\n  if (xAlign === 'right') {\n    x -= width;\n  } else if (xAlign === 'center') {\n    x -= (width / 2);\n  }\n  return x;\n}\n\nfunction alignY(size, yAlign, paddingAndSize) {\n  // eslint-disable-next-line prefer-const\n  let {y, height} = size;\n  if (yAlign === 'top') {\n    y += paddingAndSize;\n  } else if (yAlign === 'bottom') {\n    y -= height + paddingAndSize;\n  } else {\n    y -= (height / 2);\n  }\n  return y;\n}\n\n/**\n * Helper to get the location a tooltip needs to be placed at given the initial position (via the vm) and the size and alignment\n */\nfunction getBackgroundPoint(options, size, alignment, chart) {\n  const {caretSize, caretPadding, cornerRadius} = options;\n  const {xAlign, yAlign} = alignment;\n  const paddingAndSize = caretSize + caretPadding;\n  const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(cornerRadius);\n\n  let x = alignX(size, xAlign);\n  const y = alignY(size, yAlign, paddingAndSize);\n\n  if (yAlign === 'center') {\n    if (xAlign === 'left') {\n      x += paddingAndSize;\n    } else if (xAlign === 'right') {\n      x -= paddingAndSize;\n    }\n  } else if (xAlign === 'left') {\n    x -= Math.max(topLeft, bottomLeft) + caretSize;\n  } else if (xAlign === 'right') {\n    x += Math.max(topRight, bottomRight) + caretSize;\n  }\n\n  return {\n    x: _limitValue(x, 0, chart.width - size.width),\n    y: _limitValue(y, 0, chart.height - size.height)\n  };\n}\n\nfunction getAlignedX(tooltip, align, options) {\n  const padding = toPadding(options.padding);\n\n  return align === 'center'\n    ? tooltip.x + tooltip.width / 2\n    : align === 'right'\n      ? tooltip.x + tooltip.width - padding.right\n      : tooltip.x + padding.left;\n}\n\n/**\n * Helper to build before and after body lines\n */\nfunction getBeforeAfterBodyLines(callback) {\n  return pushOrConcat([], splitNewlines(callback));\n}\n\nfunction createTooltipContext(parent, tooltip, tooltipItems) {\n  return createContext(parent, {\n    tooltip,\n    tooltipItems,\n    type: 'tooltip'\n  });\n}\n\nfunction overrideCallbacks(callbacks, context) {\n  const override = context && context.dataset && context.dataset.tooltip && context.dataset.tooltip.callbacks;\n  return override ? callbacks.override(override) : callbacks;\n}\n\nconst defaultCallbacks = {\n  // Args are: (tooltipItems, data)\n  beforeTitle: noop,\n  title(tooltipItems) {\n    if (tooltipItems.length > 0) {\n      const item = tooltipItems[0];\n      const labels = item.chart.data.labels;\n      const labelCount = labels ? labels.length : 0;\n\n      if (this && this.options && this.options.mode === 'dataset') {\n        return item.dataset.label || '';\n      } else if (item.label) {\n        return item.label;\n      } else if (labelCount > 0 && item.dataIndex < labelCount) {\n        return labels[item.dataIndex];\n      }\n    }\n\n    return '';\n  },\n  afterTitle: noop,\n\n  // Args are: (tooltipItems, data)\n  beforeBody: noop,\n\n  // Args are: (tooltipItem, data)\n  beforeLabel: noop,\n  label(tooltipItem) {\n    if (this && this.options && this.options.mode === 'dataset') {\n      return tooltipItem.label + ': ' + tooltipItem.formattedValue || tooltipItem.formattedValue;\n    }\n\n    let label = tooltipItem.dataset.label || '';\n\n    if (label) {\n      label += ': ';\n    }\n    const value = tooltipItem.formattedValue;\n    if (!isNullOrUndef(value)) {\n      label += value;\n    }\n    return label;\n  },\n  labelColor(tooltipItem) {\n    const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n    const options = meta.controller.getStyle(tooltipItem.dataIndex);\n    return {\n      borderColor: options.borderColor,\n      backgroundColor: options.backgroundColor,\n      borderWidth: options.borderWidth,\n      borderDash: options.borderDash,\n      borderDashOffset: options.borderDashOffset,\n      borderRadius: 0,\n    };\n  },\n  labelTextColor() {\n    return this.options.bodyColor;\n  },\n  labelPointStyle(tooltipItem) {\n    const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n    const options = meta.controller.getStyle(tooltipItem.dataIndex);\n    return {\n      pointStyle: options.pointStyle,\n      rotation: options.rotation,\n    };\n  },\n  afterLabel: noop,\n\n  // Args are: (tooltipItems, data)\n  afterBody: noop,\n\n  // Args are: (tooltipItems, data)\n  beforeFooter: noop,\n  footer: noop,\n  afterFooter: noop\n};\n\n/**\n * Invoke callback from object with context and arguments.\n * If callback returns `undefined`, then will be invoked default callback.\n * @param {Record<keyof typeof defaultCallbacks, Function>} callbacks\n * @param {keyof typeof defaultCallbacks} name\n * @param {*} ctx\n * @param {*} arg\n * @returns {any}\n */\nfunction invokeCallbackWithFallback(callbacks, name, ctx, arg) {\n  const result = callbacks[name].call(ctx, arg);\n\n  if (typeof result === 'undefined') {\n    return defaultCallbacks[name].call(ctx, arg);\n  }\n\n  return result;\n}\n\nexport class Tooltip extends Element {\n\n  /**\n   * @namespace Chart.Tooltip.positioners\n   */\n  static positioners = positioners;\n\n  constructor(config) {\n    super();\n\n    this.opacity = 0;\n    this._active = [];\n    this._eventPosition = undefined;\n    this._size = undefined;\n    this._cachedAnimations = undefined;\n    this._tooltipItems = [];\n    this.$animations = undefined;\n    this.$context = undefined;\n    this.chart = config.chart;\n    this.options = config.options;\n    this.dataPoints = undefined;\n    this.title = undefined;\n    this.beforeBody = undefined;\n    this.body = undefined;\n    this.afterBody = undefined;\n    this.footer = undefined;\n    this.xAlign = undefined;\n    this.yAlign = undefined;\n    this.x = undefined;\n    this.y = undefined;\n    this.height = undefined;\n    this.width = undefined;\n    this.caretX = undefined;\n    this.caretY = undefined;\n    // TODO: V4, make this private, rename to `_labelStyles`, and combine with `labelPointStyles`\n    // and `labelTextColors` to create a single variable\n    this.labelColors = undefined;\n    this.labelPointStyles = undefined;\n    this.labelTextColors = undefined;\n  }\n\n  initialize(options) {\n    this.options = options;\n    this._cachedAnimations = undefined;\n    this.$context = undefined;\n  }\n\n  /**\n\t * @private\n\t */\n  _resolveAnimations() {\n    const cached = this._cachedAnimations;\n\n    if (cached) {\n      return cached;\n    }\n\n    const chart = this.chart;\n    const options = this.options.setContext(this.getContext());\n    const opts = options.enabled && chart.options.animation && options.animations;\n    const animations = new Animations(this.chart, opts);\n    if (opts._cacheable) {\n      this._cachedAnimations = Object.freeze(animations);\n    }\n\n    return animations;\n  }\n\n  /**\n\t * @protected\n\t */\n  getContext() {\n    return this.$context ||\n\t\t\t(this.$context = createTooltipContext(this.chart.getContext(), this, this._tooltipItems));\n  }\n\n  getTitle(context, options) {\n    const {callbacks} = options;\n\n    const beforeTitle = invokeCallbackWithFallback(callbacks, 'beforeTitle', this, context);\n    const title = invokeCallbackWithFallback(callbacks, 'title', this, context);\n    const afterTitle = invokeCallbackWithFallback(callbacks, 'afterTitle', this, context);\n\n    let lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeTitle));\n    lines = pushOrConcat(lines, splitNewlines(title));\n    lines = pushOrConcat(lines, splitNewlines(afterTitle));\n\n    return lines;\n  }\n\n  getBeforeBody(tooltipItems, options) {\n    return getBeforeAfterBodyLines(\n      invokeCallbackWithFallback(options.callbacks, 'beforeBody', this, tooltipItems)\n    );\n  }\n\n  getBody(tooltipItems, options) {\n    const {callbacks} = options;\n    const bodyItems = [];\n\n    each(tooltipItems, (context) => {\n      const bodyItem = {\n        before: [],\n        lines: [],\n        after: []\n      };\n      const scoped = overrideCallbacks(callbacks, context);\n      pushOrConcat(bodyItem.before, splitNewlines(invokeCallbackWithFallback(scoped, 'beforeLabel', this, context)));\n      pushOrConcat(bodyItem.lines, invokeCallbackWithFallback(scoped, 'label', this, context));\n      pushOrConcat(bodyItem.after, splitNewlines(invokeCallbackWithFallback(scoped, 'afterLabel', this, context)));\n\n      bodyItems.push(bodyItem);\n    });\n\n    return bodyItems;\n  }\n\n  getAfterBody(tooltipItems, options) {\n    return getBeforeAfterBodyLines(\n      invokeCallbackWithFallback(options.callbacks, 'afterBody', this, tooltipItems)\n    );\n  }\n\n  // Get the footer and beforeFooter and afterFooter lines\n  getFooter(tooltipItems, options) {\n    const {callbacks} = options;\n\n    const beforeFooter = invokeCallbackWithFallback(callbacks, 'beforeFooter', this, tooltipItems);\n    const footer = invokeCallbackWithFallback(callbacks, 'footer', this, tooltipItems);\n    const afterFooter = invokeCallbackWithFallback(callbacks, 'afterFooter', this, tooltipItems);\n\n    let lines = [];\n    lines = pushOrConcat(lines, splitNewlines(beforeFooter));\n    lines = pushOrConcat(lines, splitNewlines(footer));\n    lines = pushOrConcat(lines, splitNewlines(afterFooter));\n\n    return lines;\n  }\n\n  /**\n\t * @private\n\t */\n  _createItems(options) {\n    const active = this._active;\n    const data = this.chart.data;\n    const labelColors = [];\n    const labelPointStyles = [];\n    const labelTextColors = [];\n    let tooltipItems = [];\n    let i, len;\n\n    for (i = 0, len = active.length; i < len; ++i) {\n      tooltipItems.push(createTooltipItem(this.chart, active[i]));\n    }\n\n    // If the user provided a filter function, use it to modify the tooltip items\n    if (options.filter) {\n      tooltipItems = tooltipItems.filter((element, index, array) => options.filter(element, index, array, data));\n    }\n\n    // If the user provided a sorting function, use it to modify the tooltip items\n    if (options.itemSort) {\n      tooltipItems = tooltipItems.sort((a, b) => options.itemSort(a, b, data));\n    }\n\n    // Determine colors for boxes\n    each(tooltipItems, (context) => {\n      const scoped = overrideCallbacks(options.callbacks, context);\n      labelColors.push(invokeCallbackWithFallback(scoped, 'labelColor', this, context));\n      labelPointStyles.push(invokeCallbackWithFallback(scoped, 'labelPointStyle', this, context));\n      labelTextColors.push(invokeCallbackWithFallback(scoped, 'labelTextColor', this, context));\n    });\n\n    this.labelColors = labelColors;\n    this.labelPointStyles = labelPointStyles;\n    this.labelTextColors = labelTextColors;\n    this.dataPoints = tooltipItems;\n    return tooltipItems;\n  }\n\n  update(changed, replay) {\n    const options = this.options.setContext(this.getContext());\n    const active = this._active;\n    let properties;\n    let tooltipItems = [];\n\n    if (!active.length) {\n      if (this.opacity !== 0) {\n        properties = {\n          opacity: 0\n        };\n      }\n    } else {\n      const position = positioners[options.position].call(this, active, this._eventPosition);\n      tooltipItems = this._createItems(options);\n\n      this.title = this.getTitle(tooltipItems, options);\n      this.beforeBody = this.getBeforeBody(tooltipItems, options);\n      this.body = this.getBody(tooltipItems, options);\n      this.afterBody = this.getAfterBody(tooltipItems, options);\n      this.footer = this.getFooter(tooltipItems, options);\n\n      const size = this._size = getTooltipSize(this, options);\n      const positionAndSize = Object.assign({}, position, size);\n      const alignment = determineAlignment(this.chart, options, positionAndSize);\n      const backgroundPoint = getBackgroundPoint(options, positionAndSize, alignment, this.chart);\n\n      this.xAlign = alignment.xAlign;\n      this.yAlign = alignment.yAlign;\n\n      properties = {\n        opacity: 1,\n        x: backgroundPoint.x,\n        y: backgroundPoint.y,\n        width: size.width,\n        height: size.height,\n        caretX: position.x,\n        caretY: position.y\n      };\n    }\n\n    this._tooltipItems = tooltipItems;\n    this.$context = undefined;\n\n    if (properties) {\n      this._resolveAnimations().update(this, properties);\n    }\n\n    if (changed && options.external) {\n      options.external.call(this, {chart: this.chart, tooltip: this, replay});\n    }\n  }\n\n  drawCaret(tooltipPoint, ctx, size, options) {\n    const caretPosition = this.getCaretPosition(tooltipPoint, size, options);\n\n    ctx.lineTo(caretPosition.x1, caretPosition.y1);\n    ctx.lineTo(caretPosition.x2, caretPosition.y2);\n    ctx.lineTo(caretPosition.x3, caretPosition.y3);\n  }\n\n  getCaretPosition(tooltipPoint, size, options) {\n    const {xAlign, yAlign} = this;\n    const {caretSize, cornerRadius} = options;\n    const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(cornerRadius);\n    const {x: ptX, y: ptY} = tooltipPoint;\n    const {width, height} = size;\n    let x1, x2, x3, y1, y2, y3;\n\n    if (yAlign === 'center') {\n      y2 = ptY + (height / 2);\n\n      if (xAlign === 'left') {\n        x1 = ptX;\n        x2 = x1 - caretSize;\n\n        // Left draws bottom -> top, this y1 is on the bottom\n        y1 = y2 + caretSize;\n        y3 = y2 - caretSize;\n      } else {\n        x1 = ptX + width;\n        x2 = x1 + caretSize;\n\n        // Right draws top -> bottom, thus y1 is on the top\n        y1 = y2 - caretSize;\n        y3 = y2 + caretSize;\n      }\n\n      x3 = x1;\n    } else {\n      if (xAlign === 'left') {\n        x2 = ptX + Math.max(topLeft, bottomLeft) + (caretSize);\n      } else if (xAlign === 'right') {\n        x2 = ptX + width - Math.max(topRight, bottomRight) - caretSize;\n      } else {\n        x2 = this.caretX;\n      }\n\n      if (yAlign === 'top') {\n        y1 = ptY;\n        y2 = y1 - caretSize;\n\n        // Top draws left -> right, thus x1 is on the left\n        x1 = x2 - caretSize;\n        x3 = x2 + caretSize;\n      } else {\n        y1 = ptY + height;\n        y2 = y1 + caretSize;\n\n        // Bottom draws right -> left, thus x1 is on the right\n        x1 = x2 + caretSize;\n        x3 = x2 - caretSize;\n      }\n      y3 = y1;\n    }\n    return {x1, x2, x3, y1, y2, y3};\n  }\n\n  drawTitle(pt, ctx, options) {\n    const title = this.title;\n    const length = title.length;\n    let titleFont, titleSpacing, i;\n\n    if (length) {\n      const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n\n      pt.x = getAlignedX(this, options.titleAlign, options);\n\n      ctx.textAlign = rtlHelper.textAlign(options.titleAlign);\n      ctx.textBaseline = 'middle';\n\n      titleFont = toFont(options.titleFont);\n      titleSpacing = options.titleSpacing;\n\n      ctx.fillStyle = options.titleColor;\n      ctx.font = titleFont.string;\n\n      for (i = 0; i < length; ++i) {\n        ctx.fillText(title[i], rtlHelper.x(pt.x), pt.y + titleFont.lineHeight / 2);\n        pt.y += titleFont.lineHeight + titleSpacing; // Line Height and spacing\n\n        if (i + 1 === length) {\n          pt.y += options.titleMarginBottom - titleSpacing; // If Last, add margin, remove spacing\n        }\n      }\n    }\n  }\n\n  /**\n\t * @private\n\t */\n  _drawColorBox(ctx, pt, i, rtlHelper, options) {\n    const labelColor = this.labelColors[i];\n    const labelPointStyle = this.labelPointStyles[i];\n    const {boxHeight, boxWidth} = options;\n    const bodyFont = toFont(options.bodyFont);\n    const colorX = getAlignedX(this, 'left', options);\n    const rtlColorX = rtlHelper.x(colorX);\n    const yOffSet = boxHeight < bodyFont.lineHeight ? (bodyFont.lineHeight - boxHeight) / 2 : 0;\n    const colorY = pt.y + yOffSet;\n\n    if (options.usePointStyle) {\n      const drawOptions = {\n        radius: Math.min(boxWidth, boxHeight) / 2, // fit the circle in the box\n        pointStyle: labelPointStyle.pointStyle,\n        rotation: labelPointStyle.rotation,\n        borderWidth: 1\n      };\n      // Recalculate x and y for drawPoint() because its expecting\n      // x and y to be center of figure (instead of top left)\n      const centerX = rtlHelper.leftForLtr(rtlColorX, boxWidth) + boxWidth / 2;\n      const centerY = colorY + boxHeight / 2;\n\n      // Fill the point with white so that colours merge nicely if the opacity is < 1\n      ctx.strokeStyle = options.multiKeyBackground;\n      ctx.fillStyle = options.multiKeyBackground;\n      drawPoint(ctx, drawOptions, centerX, centerY);\n\n      // Draw the point\n      ctx.strokeStyle = labelColor.borderColor;\n      ctx.fillStyle = labelColor.backgroundColor;\n      drawPoint(ctx, drawOptions, centerX, centerY);\n    } else {\n      // Border\n      ctx.lineWidth = isObject(labelColor.borderWidth) ? Math.max(...Object.values(labelColor.borderWidth)) : (labelColor.borderWidth || 1); // TODO, v4 remove fallback\n      ctx.strokeStyle = labelColor.borderColor;\n      ctx.setLineDash(labelColor.borderDash || []);\n      ctx.lineDashOffset = labelColor.borderDashOffset || 0;\n\n      // Fill a white rect so that colours merge nicely if the opacity is < 1\n      const outerX = rtlHelper.leftForLtr(rtlColorX, boxWidth);\n      const innerX = rtlHelper.leftForLtr(rtlHelper.xPlus(rtlColorX, 1), boxWidth - 2);\n      const borderRadius = toTRBLCorners(labelColor.borderRadius);\n\n      if (Object.values(borderRadius).some(v => v !== 0)) {\n        ctx.beginPath();\n        ctx.fillStyle = options.multiKeyBackground;\n        addRoundedRectPath(ctx, {\n          x: outerX,\n          y: colorY,\n          w: boxWidth,\n          h: boxHeight,\n          radius: borderRadius,\n        });\n        ctx.fill();\n        ctx.stroke();\n\n        // Inner square\n        ctx.fillStyle = labelColor.backgroundColor;\n        ctx.beginPath();\n        addRoundedRectPath(ctx, {\n          x: innerX,\n          y: colorY + 1,\n          w: boxWidth - 2,\n          h: boxHeight - 2,\n          radius: borderRadius,\n        });\n        ctx.fill();\n      } else {\n        // Normal rect\n        ctx.fillStyle = options.multiKeyBackground;\n        ctx.fillRect(outerX, colorY, boxWidth, boxHeight);\n        ctx.strokeRect(outerX, colorY, boxWidth, boxHeight);\n        // Inner square\n        ctx.fillStyle = labelColor.backgroundColor;\n        ctx.fillRect(innerX, colorY + 1, boxWidth - 2, boxHeight - 2);\n      }\n    }\n\n    // restore fillStyle\n    ctx.fillStyle = this.labelTextColors[i];\n  }\n\n  drawBody(pt, ctx, options) {\n    const {body} = this;\n    const {bodySpacing, bodyAlign, displayColors, boxHeight, boxWidth, boxPadding} = options;\n    const bodyFont = toFont(options.bodyFont);\n    let bodyLineHeight = bodyFont.lineHeight;\n    let xLinePadding = 0;\n\n    const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n\n    const fillLineOfText = function(line) {\n      ctx.fillText(line, rtlHelper.x(pt.x + xLinePadding), pt.y + bodyLineHeight / 2);\n      pt.y += bodyLineHeight + bodySpacing;\n    };\n\n    const bodyAlignForCalculation = rtlHelper.textAlign(bodyAlign);\n    let bodyItem, textColor, lines, i, j, ilen, jlen;\n\n    ctx.textAlign = bodyAlign;\n    ctx.textBaseline = 'middle';\n    ctx.font = bodyFont.string;\n\n    pt.x = getAlignedX(this, bodyAlignForCalculation, options);\n\n    // Before body lines\n    ctx.fillStyle = options.bodyColor;\n    each(this.beforeBody, fillLineOfText);\n\n    xLinePadding = displayColors && bodyAlignForCalculation !== 'right'\n      ? bodyAlign === 'center' ? (boxWidth / 2 + boxPadding) : (boxWidth + 2 + boxPadding)\n      : 0;\n\n    // Draw body lines now\n    for (i = 0, ilen = body.length; i < ilen; ++i) {\n      bodyItem = body[i];\n      textColor = this.labelTextColors[i];\n\n      ctx.fillStyle = textColor;\n      each(bodyItem.before, fillLineOfText);\n\n      lines = bodyItem.lines;\n      // Draw Legend-like boxes if needed\n      if (displayColors && lines.length) {\n        this._drawColorBox(ctx, pt, i, rtlHelper, options);\n        bodyLineHeight = Math.max(bodyFont.lineHeight, boxHeight);\n      }\n\n      for (j = 0, jlen = lines.length; j < jlen; ++j) {\n        fillLineOfText(lines[j]);\n        // Reset for any lines that don't include colorbox\n        bodyLineHeight = bodyFont.lineHeight;\n      }\n\n      each(bodyItem.after, fillLineOfText);\n    }\n\n    // Reset back to 0 for after body\n    xLinePadding = 0;\n    bodyLineHeight = bodyFont.lineHeight;\n\n    // After body lines\n    each(this.afterBody, fillLineOfText);\n    pt.y -= bodySpacing; // Remove last body spacing\n  }\n\n  drawFooter(pt, ctx, options) {\n    const footer = this.footer;\n    const length = footer.length;\n    let footerFont, i;\n\n    if (length) {\n      const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n\n      pt.x = getAlignedX(this, options.footerAlign, options);\n      pt.y += options.footerMarginTop;\n\n      ctx.textAlign = rtlHelper.textAlign(options.footerAlign);\n      ctx.textBaseline = 'middle';\n\n      footerFont = toFont(options.footerFont);\n\n      ctx.fillStyle = options.footerColor;\n      ctx.font = footerFont.string;\n\n      for (i = 0; i < length; ++i) {\n        ctx.fillText(footer[i], rtlHelper.x(pt.x), pt.y + footerFont.lineHeight / 2);\n        pt.y += footerFont.lineHeight + options.footerSpacing;\n      }\n    }\n  }\n\n  drawBackground(pt, ctx, tooltipSize, options) {\n    const {xAlign, yAlign} = this;\n    const {x, y} = pt;\n    const {width, height} = tooltipSize;\n    const {topLeft, topRight, bottomLeft, bottomRight} = toTRBLCorners(options.cornerRadius);\n\n    ctx.fillStyle = options.backgroundColor;\n    ctx.strokeStyle = options.borderColor;\n    ctx.lineWidth = options.borderWidth;\n\n    ctx.beginPath();\n    ctx.moveTo(x + topLeft, y);\n    if (yAlign === 'top') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + width - topRight, y);\n    ctx.quadraticCurveTo(x + width, y, x + width, y + topRight);\n    if (yAlign === 'center' && xAlign === 'right') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + width, y + height - bottomRight);\n    ctx.quadraticCurveTo(x + width, y + height, x + width - bottomRight, y + height);\n    if (yAlign === 'bottom') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x + bottomLeft, y + height);\n    ctx.quadraticCurveTo(x, y + height, x, y + height - bottomLeft);\n    if (yAlign === 'center' && xAlign === 'left') {\n      this.drawCaret(pt, ctx, tooltipSize, options);\n    }\n    ctx.lineTo(x, y + topLeft);\n    ctx.quadraticCurveTo(x, y, x + topLeft, y);\n    ctx.closePath();\n\n    ctx.fill();\n\n    if (options.borderWidth > 0) {\n      ctx.stroke();\n    }\n  }\n\n  /**\n\t * Update x/y animation targets when _active elements are animating too\n\t * @private\n\t */\n  _updateAnimationTarget(options) {\n    const chart = this.chart;\n    const anims = this.$animations;\n    const animX = anims && anims.x;\n    const animY = anims && anims.y;\n    if (animX || animY) {\n      const position = positioners[options.position].call(this, this._active, this._eventPosition);\n      if (!position) {\n        return;\n      }\n      const size = this._size = getTooltipSize(this, options);\n      const positionAndSize = Object.assign({}, position, this._size);\n      const alignment = determineAlignment(chart, options, positionAndSize);\n      const point = getBackgroundPoint(options, positionAndSize, alignment, chart);\n      if (animX._to !== point.x || animY._to !== point.y) {\n        this.xAlign = alignment.xAlign;\n        this.yAlign = alignment.yAlign;\n        this.width = size.width;\n        this.height = size.height;\n        this.caretX = position.x;\n        this.caretY = position.y;\n        this._resolveAnimations().update(this, point);\n      }\n    }\n  }\n\n  /**\n   * Determine if the tooltip will draw anything\n   * @returns {boolean} True if the tooltip will render\n   */\n  _willRender() {\n    return !!this.opacity;\n  }\n\n  draw(ctx) {\n    const options = this.options.setContext(this.getContext());\n    let opacity = this.opacity;\n\n    if (!opacity) {\n      return;\n    }\n\n    this._updateAnimationTarget(options);\n\n    const tooltipSize = {\n      width: this.width,\n      height: this.height\n    };\n    const pt = {\n      x: this.x,\n      y: this.y\n    };\n\n    // IE11/Edge does not like very small opacities, so snap to 0\n    opacity = Math.abs(opacity) < 1e-3 ? 0 : opacity;\n\n    const padding = toPadding(options.padding);\n\n    // Truthy/falsey value for empty tooltip\n    const hasTooltipContent = this.title.length || this.beforeBody.length || this.body.length || this.afterBody.length || this.footer.length;\n\n    if (options.enabled && hasTooltipContent) {\n      ctx.save();\n      ctx.globalAlpha = opacity;\n\n      // Draw Background\n      this.drawBackground(pt, ctx, tooltipSize, options);\n\n      overrideTextDirection(ctx, options.textDirection);\n\n      pt.y += padding.top;\n\n      // Titles\n      this.drawTitle(pt, ctx, options);\n\n      // Body\n      this.drawBody(pt, ctx, options);\n\n      // Footer\n      this.drawFooter(pt, ctx, options);\n\n      restoreTextDirection(ctx, options.textDirection);\n\n      ctx.restore();\n    }\n  }\n\n  /**\n\t * Get active elements in the tooltip\n\t * @returns {Array} Array of elements that are active in the tooltip\n\t */\n  getActiveElements() {\n    return this._active || [];\n  }\n\n  /**\n\t * Set active elements in the tooltip\n\t * @param {array} activeElements Array of active datasetIndex/index pairs.\n\t * @param {object} eventPosition Synthetic event position used in positioning\n\t */\n  setActiveElements(activeElements, eventPosition) {\n    const lastActive = this._active;\n    const active = activeElements.map(({datasetIndex, index}) => {\n      const meta = this.chart.getDatasetMeta(datasetIndex);\n\n      if (!meta) {\n        throw new Error('Cannot find a dataset at index ' + datasetIndex);\n      }\n\n      return {\n        datasetIndex,\n        element: meta.data[index],\n        index,\n      };\n    });\n    const changed = !_elementsEqual(lastActive, active);\n    const positionChanged = this._positionChanged(active, eventPosition);\n\n    if (changed || positionChanged) {\n      this._active = active;\n      this._eventPosition = eventPosition;\n      this._ignoreReplayEvents = true;\n      this.update(true);\n    }\n  }\n\n  /**\n\t * Handle an event\n\t * @param {ChartEvent} e - The event to handle\n\t * @param {boolean} [replay] - This is a replayed event (from update)\n\t * @param {boolean} [inChartArea] - The event is inside chartArea\n\t * @returns {boolean} true if the tooltip changed\n\t */\n  handleEvent(e, replay, inChartArea = true) {\n    if (replay && this._ignoreReplayEvents) {\n      return false;\n    }\n    this._ignoreReplayEvents = false;\n\n    const options = this.options;\n    const lastActive = this._active || [];\n    const active = this._getActiveElements(e, lastActive, replay, inChartArea);\n\n    // When there are multiple items shown, but the tooltip position is nearest mode\n    // an update may need to be made because our position may have changed even though\n    // the items are the same as before.\n    const positionChanged = this._positionChanged(active, e);\n\n    // Remember Last Actives\n    const changed = replay || !_elementsEqual(active, lastActive) || positionChanged;\n\n    // Only handle target event on tooltip change\n    if (changed) {\n      this._active = active;\n\n      if (options.enabled || options.external) {\n        this._eventPosition = {\n          x: e.x,\n          y: e.y\n        };\n\n        this.update(true, replay);\n      }\n    }\n\n    return changed;\n  }\n\n  /**\n\t * Helper for determining the active elements for event\n\t * @param {ChartEvent} e - The event to handle\n\t * @param {InteractionItem[]} lastActive - Previously active elements\n\t * @param {boolean} [replay] - This is a replayed event (from update)\n\t * @param {boolean} [inChartArea] - The event is inside chartArea\n\t * @returns {InteractionItem[]} - Active elements\n\t * @private\n\t */\n  _getActiveElements(e, lastActive, replay, inChartArea) {\n    const options = this.options;\n\n    if (e.type === 'mouseout') {\n      return [];\n    }\n\n    if (!inChartArea) {\n      // Let user control the active elements outside chartArea. Eg. using Legend.\n      // But make sure that active elements are still valid.\n      return lastActive.filter(i =>\n        this.chart.data.datasets[i.datasetIndex] &&\n        this.chart.getDatasetMeta(i.datasetIndex).controller.getParsed(i.index) !== undefined\n      );\n    }\n\n    // Find Active Elements for tooltips\n    const active = this.chart.getElementsAtEventForMode(e, options.mode, options, replay);\n\n    if (options.reverse) {\n      active.reverse();\n    }\n\n    return active;\n  }\n\n  /**\n\t * Determine if the active elements + event combination changes the\n\t * tooltip position\n\t * @param {array} active - Active elements\n\t * @param {ChartEvent} e - Event that triggered the position change\n\t * @returns {boolean} True if the position has changed\n\t */\n  _positionChanged(active, e) {\n    const {caretX, caretY, options} = this;\n    const position = positioners[options.position].call(this, active, e);\n    return position !== false && (caretX !== position.x || caretY !== position.y);\n  }\n}\n\nexport default {\n  id: 'tooltip',\n  _element: Tooltip,\n  positioners,\n\n  afterInit(chart, _args, options) {\n    if (options) {\n      chart.tooltip = new Tooltip({chart, options});\n    }\n  },\n\n  beforeUpdate(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n\n  reset(chart, _args, options) {\n    if (chart.tooltip) {\n      chart.tooltip.initialize(options);\n    }\n  },\n\n  afterDraw(chart) {\n    const tooltip = chart.tooltip;\n\n    if (tooltip && tooltip._willRender()) {\n      const args = {\n        tooltip\n      };\n\n      if (chart.notifyPlugins('beforeTooltipDraw', {...args, cancelable: true}) === false) {\n        return;\n      }\n\n      tooltip.draw(chart.ctx);\n\n      chart.notifyPlugins('afterTooltipDraw', args);\n    }\n  },\n\n  afterEvent(chart, args) {\n    if (chart.tooltip) {\n      // If the event is replayed from `update`, we should evaluate with the final positions.\n      const useFinalPosition = args.replay;\n      if (chart.tooltip.handleEvent(args.event, useFinalPosition, args.inChartArea)) {\n        // notify chart about the change, so it will render\n        args.changed = true;\n      }\n    }\n  },\n\n  defaults: {\n    enabled: true,\n    external: null,\n    position: 'average',\n    backgroundColor: 'rgba(0,0,0,0.8)',\n    titleColor: '#fff',\n    titleFont: {\n      weight: 'bold',\n    },\n    titleSpacing: 2,\n    titleMarginBottom: 6,\n    titleAlign: 'left',\n    bodyColor: '#fff',\n    bodySpacing: 2,\n    bodyFont: {\n    },\n    bodyAlign: 'left',\n    footerColor: '#fff',\n    footerSpacing: 2,\n    footerMarginTop: 6,\n    footerFont: {\n      weight: 'bold',\n    },\n    footerAlign: 'left',\n    padding: 6,\n    caretPadding: 2,\n    caretSize: 5,\n    cornerRadius: 6,\n    boxHeight: (ctx, opts) => opts.bodyFont.size,\n    boxWidth: (ctx, opts) => opts.bodyFont.size,\n    multiKeyBackground: '#fff',\n    displayColors: true,\n    boxPadding: 0,\n    borderColor: 'rgba(0,0,0,0)',\n    borderWidth: 0,\n    animation: {\n      duration: 400,\n      easing: 'easeOutQuart',\n    },\n    animations: {\n      numbers: {\n        type: 'number',\n        properties: ['x', 'y', 'width', 'height', 'caretX', 'caretY'],\n      },\n      opacity: {\n        easing: 'linear',\n        duration: 200\n      }\n    },\n    callbacks: defaultCallbacks\n  },\n\n  defaultRoutes: {\n    bodyFont: 'font',\n    footerFont: 'font',\n    titleFont: 'font'\n  },\n\n  descriptors: {\n    _scriptable: (name) => name !== 'filter' && name !== 'itemSort' && name !== 'external',\n    _indexable: false,\n    callbacks: {\n      _scriptable: false,\n      _indexable: false,\n    },\n    animation: {\n      _fallback: false\n    },\n    animations: {\n      _fallback: 'animation'\n    }\n  },\n\n  // Resolve additionally from `interaction` options and defaults.\n  additionalOptionScopes: ['interaction']\n};\n","import Scale from '../core/core.scale.js';\nimport {isNullOrUndef, valueOrDefault, _limitValue} from '../helpers/index.js';\n\nconst addIfString = (labels, raw, index, addedLabels) => {\n  if (typeof raw === 'string') {\n    index = labels.push(raw) - 1;\n    addedLabels.unshift({index, label: raw});\n  } else if (isNaN(raw)) {\n    index = null;\n  }\n  return index;\n};\n\nfunction findOrAddLabel(labels, raw, index, addedLabels) {\n  const first = labels.indexOf(raw);\n  if (first === -1) {\n    return addIfString(labels, raw, index, addedLabels);\n  }\n  const last = labels.lastIndexOf(raw);\n  return first !== last ? index : first;\n}\n\nconst validIndex = (index, max) => index === null ? null : _limitValue(Math.round(index), 0, max);\n\nfunction _getLabelForValue(value) {\n  const labels = this.getLabels();\n\n  if (value >= 0 && value < labels.length) {\n    return labels[value];\n  }\n  return value;\n}\n\nexport default class CategoryScale extends Scale {\n\n  static id = 'category';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    ticks: {\n      callback: _getLabelForValue\n    }\n  };\n\n  constructor(cfg) {\n    super(cfg);\n\n    /** @type {number} */\n    this._startValue = undefined;\n    this._valueRange = 0;\n    this._addedLabels = [];\n  }\n\n  init(scaleOptions) {\n    const added = this._addedLabels;\n    if (added.length) {\n      const labels = this.getLabels();\n      for (const {index, label} of added) {\n        if (labels[index] === label) {\n          labels.splice(index, 1);\n        }\n      }\n      this._addedLabels = [];\n    }\n    super.init(scaleOptions);\n  }\n\n  parse(raw, index) {\n    if (isNullOrUndef(raw)) {\n      return null;\n    }\n    const labels = this.getLabels();\n    index = isFinite(index) && labels[index] === raw ? index\n      : findOrAddLabel(labels, raw, valueOrDefault(index, raw), this._addedLabels);\n    return validIndex(index, labels.length - 1);\n  }\n\n  determineDataLimits() {\n    const {minDefined, maxDefined} = this.getUserBounds();\n    let {min, max} = this.getMinMax(true);\n\n    if (this.options.bounds === 'ticks') {\n      if (!minDefined) {\n        min = 0;\n      }\n      if (!maxDefined) {\n        max = this.getLabels().length - 1;\n      }\n    }\n\n    this.min = min;\n    this.max = max;\n  }\n\n  buildTicks() {\n    const min = this.min;\n    const max = this.max;\n    const offset = this.options.offset;\n    const ticks = [];\n    let labels = this.getLabels();\n\n    // If we are viewing some subset of labels, slice the original array\n    labels = (min === 0 && max === labels.length - 1) ? labels : labels.slice(min, max + 1);\n\n    this._valueRange = Math.max(labels.length - (offset ? 0 : 1), 1);\n    this._startValue = this.min - (offset ? 0.5 : 0);\n\n    for (let value = min; value <= max; value++) {\n      ticks.push({value});\n    }\n    return ticks;\n  }\n\n  getLabelForValue(value) {\n    return _getLabelForValue.call(this, value);\n  }\n\n  /**\n\t * @protected\n\t */\n  configure() {\n    super.configure();\n\n    if (!this.isHorizontal()) {\n      // For backward compatibility, vertical category scale reverse is inverted.\n      this._reversePixels = !this._reversePixels;\n    }\n  }\n\n  // Used to get data value locations. Value can either be an index or a numerical value\n  getPixelForValue(value) {\n    if (typeof value !== 'number') {\n      value = this.parse(value);\n    }\n\n    return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n  }\n\n  // Must override base implementation because it calls getPixelForValue\n  // and category scale can have duplicate values\n  getPixelForTick(index) {\n    const ticks = this.ticks;\n    if (index < 0 || index > ticks.length - 1) {\n      return null;\n    }\n    return this.getPixelForValue(ticks[index].value);\n  }\n\n  getValueForPixel(pixel) {\n    return Math.round(this._startValue + this.getDecimalForPixel(pixel) * this._valueRange);\n  }\n\n  getBasePixel() {\n    return this.bottom;\n  }\n}\n","import {isNullOrUndef} from '../helpers/helpers.core.js';\nimport {almostEquals, almostWhole, niceNum, _decimalPlaces, _setMinAndMaxByKey, sign, toRadians} from '../helpers/helpers.math.js';\nimport Scale from '../core/core.scale.js';\nimport {formatNumber} from '../helpers/helpers.intl.js';\n\n/**\n * Generate a set of linear ticks for an axis\n * 1. If generationOptions.min, generationOptions.max, and generationOptions.step are defined:\n *    if (max - min) / step is an integer, ticks are generated as [min, min + step, ..., max]\n *    Note that the generationOptions.maxCount setting is respected in this scenario\n *\n * 2. If generationOptions.min, generationOptions.max, and generationOptions.count is defined\n *    spacing = (max - min) / count\n *    Ticks are generated as [min, min + spacing, ..., max]\n *\n * 3. If generationOptions.count is defined\n *    spacing = (niceMax - niceMin) / count\n *\n * 4. Compute optimal spacing of ticks using niceNum algorithm\n *\n * @param generationOptions the options used to generate the ticks\n * @param dataRange the range of the data\n * @returns {object[]} array of tick objects\n */\nfunction generateTicks(generationOptions, dataRange) {\n  const ticks = [];\n  // To get a \"nice\" value for the tick spacing, we will use the appropriately named\n  // \"nice number\" algorithm. See https://stackoverflow.com/questions/8506881/nice-label-algorithm-for-charts-with-minimum-ticks\n  // for details.\n\n  const MIN_SPACING = 1e-14;\n  const {bounds, step, min, max, precision, count, maxTicks, maxDigits, includeBounds} = generationOptions;\n  const unit = step || 1;\n  const maxSpaces = maxTicks - 1;\n  const {min: rmin, max: rmax} = dataRange;\n  const minDefined = !isNullOrUndef(min);\n  const maxDefined = !isNullOrUndef(max);\n  const countDefined = !isNullOrUndef(count);\n  const minSpacing = (rmax - rmin) / (maxDigits + 1);\n  let spacing = niceNum((rmax - rmin) / maxSpaces / unit) * unit;\n  let factor, niceMin, niceMax, numSpaces;\n\n  // Beyond MIN_SPACING floating point numbers being to lose precision\n  // such that we can't do the math necessary to generate ticks\n  if (spacing < MIN_SPACING && !minDefined && !maxDefined) {\n    return [{value: rmin}, {value: rmax}];\n  }\n\n  numSpaces = Math.ceil(rmax / spacing) - Math.floor(rmin / spacing);\n  if (numSpaces > maxSpaces) {\n    // If the calculated num of spaces exceeds maxNumSpaces, recalculate it\n    spacing = niceNum(numSpaces * spacing / maxSpaces / unit) * unit;\n  }\n\n  if (!isNullOrUndef(precision)) {\n    // If the user specified a precision, round to that number of decimal places\n    factor = Math.pow(10, precision);\n    spacing = Math.ceil(spacing * factor) / factor;\n  }\n\n  if (bounds === 'ticks') {\n    niceMin = Math.floor(rmin / spacing) * spacing;\n    niceMax = Math.ceil(rmax / spacing) * spacing;\n  } else {\n    niceMin = rmin;\n    niceMax = rmax;\n  }\n\n  if (minDefined && maxDefined && step && almostWhole((max - min) / step, spacing / 1000)) {\n    // Case 1: If min, max and stepSize are set and they make an evenly spaced scale use it.\n    // spacing = step;\n    // numSpaces = (max - min) / spacing;\n    // Note that we round here to handle the case where almostWhole translated an FP error\n    numSpaces = Math.round(Math.min((max - min) / spacing, maxTicks));\n    spacing = (max - min) / numSpaces;\n    niceMin = min;\n    niceMax = max;\n  } else if (countDefined) {\n    // Cases 2 & 3, we have a count specified. Handle optional user defined edges to the range.\n    // Sometimes these are no-ops, but it makes the code a lot clearer\n    // and when a user defined range is specified, we want the correct ticks\n    niceMin = minDefined ? min : niceMin;\n    niceMax = maxDefined ? max : niceMax;\n    numSpaces = count - 1;\n    spacing = (niceMax - niceMin) / numSpaces;\n  } else {\n    // Case 4\n    numSpaces = (niceMax - niceMin) / spacing;\n\n    // If very close to our rounded value, use it.\n    if (almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n      numSpaces = Math.round(numSpaces);\n    } else {\n      numSpaces = Math.ceil(numSpaces);\n    }\n  }\n\n  // The spacing will have changed in cases 1, 2, and 3 so the factor cannot be computed\n  // until this point\n  const decimalPlaces = Math.max(\n    _decimalPlaces(spacing),\n    _decimalPlaces(niceMin)\n  );\n  factor = Math.pow(10, isNullOrUndef(precision) ? decimalPlaces : precision);\n  niceMin = Math.round(niceMin * factor) / factor;\n  niceMax = Math.round(niceMax * factor) / factor;\n\n  let j = 0;\n  if (minDefined) {\n    if (includeBounds && niceMin !== min) {\n      ticks.push({value: min});\n\n      if (niceMin < min) {\n        j++; // Skip niceMin\n      }\n      // If the next nice tick is close to min, skip it\n      if (almostEquals(Math.round((niceMin + j * spacing) * factor) / factor, min, relativeLabelSize(min, minSpacing, generationOptions))) {\n        j++;\n      }\n    } else if (niceMin < min) {\n      j++;\n    }\n  }\n\n  for (; j < numSpaces; ++j) {\n    const tickValue = Math.round((niceMin + j * spacing) * factor) / factor;\n    if (maxDefined && tickValue > max) {\n      break;\n    }\n    ticks.push({value: tickValue});\n  }\n\n  if (maxDefined && includeBounds && niceMax !== max) {\n    // If the previous tick is too close to max, replace it with max, else add max\n    if (ticks.length && almostEquals(ticks[ticks.length - 1].value, max, relativeLabelSize(max, minSpacing, generationOptions))) {\n      ticks[ticks.length - 1].value = max;\n    } else {\n      ticks.push({value: max});\n    }\n  } else if (!maxDefined || niceMax === max) {\n    ticks.push({value: niceMax});\n  }\n\n  return ticks;\n}\n\nfunction relativeLabelSize(value, minSpacing, {horizontal, minRotation}) {\n  const rad = toRadians(minRotation);\n  const ratio = (horizontal ? Math.sin(rad) : Math.cos(rad)) || 0.001;\n  const length = 0.75 * minSpacing * ('' + value).length;\n  return Math.min(minSpacing / ratio, length);\n}\n\nexport default class LinearScaleBase extends Scale {\n\n  constructor(cfg) {\n    super(cfg);\n\n    /** @type {number} */\n    this.start = undefined;\n    /** @type {number} */\n    this.end = undefined;\n    /** @type {number} */\n    this._startValue = undefined;\n    /** @type {number} */\n    this._endValue = undefined;\n    this._valueRange = 0;\n  }\n\n  parse(raw, index) { // eslint-disable-line no-unused-vars\n    if (isNullOrUndef(raw)) {\n      return null;\n    }\n    if ((typeof raw === 'number' || raw instanceof Number) && !isFinite(+raw)) {\n      return null;\n    }\n\n    return +raw;\n  }\n\n  handleTickRangeOptions() {\n    const {beginAtZero} = this.options;\n    const {minDefined, maxDefined} = this.getUserBounds();\n    let {min, max} = this;\n\n    const setMin = v => (min = minDefined ? min : v);\n    const setMax = v => (max = maxDefined ? max : v);\n\n    if (beginAtZero) {\n      const minSign = sign(min);\n      const maxSign = sign(max);\n\n      if (minSign < 0 && maxSign < 0) {\n        setMax(0);\n      } else if (minSign > 0 && maxSign > 0) {\n        setMin(0);\n      }\n    }\n\n    if (min === max) {\n      let offset = max === 0 ? 1 : Math.abs(max * 0.05);\n\n      setMax(max + offset);\n\n      if (!beginAtZero) {\n        setMin(min - offset);\n      }\n    }\n    this.min = min;\n    this.max = max;\n  }\n\n  getTickLimit() {\n    const tickOpts = this.options.ticks;\n    // eslint-disable-next-line prefer-const\n    let {maxTicksLimit, stepSize} = tickOpts;\n    let maxTicks;\n\n    if (stepSize) {\n      maxTicks = Math.ceil(this.max / stepSize) - Math.floor(this.min / stepSize) + 1;\n      if (maxTicks > 1000) {\n        console.warn(`scales.${this.id}.ticks.stepSize: ${stepSize} would result generating up to ${maxTicks} ticks. Limiting to 1000.`);\n        maxTicks = 1000;\n      }\n    } else {\n      maxTicks = this.computeTickLimit();\n      maxTicksLimit = maxTicksLimit || 11;\n    }\n\n    if (maxTicksLimit) {\n      maxTicks = Math.min(maxTicksLimit, maxTicks);\n    }\n\n    return maxTicks;\n  }\n\n  /**\n\t * @protected\n\t */\n  computeTickLimit() {\n    return Number.POSITIVE_INFINITY;\n  }\n\n  buildTicks() {\n    const opts = this.options;\n    const tickOpts = opts.ticks;\n\n    // Figure out what the max number of ticks we can support it is based on the size of\n    // the axis area. For now, we say that the minimum tick spacing in pixels must be 40\n    // We also limit the maximum number of ticks to 11 which gives a nice 10 squares on\n    // the graph. Make sure we always have at least 2 ticks\n    let maxTicks = this.getTickLimit();\n    maxTicks = Math.max(2, maxTicks);\n\n    const numericGeneratorOptions = {\n      maxTicks,\n      bounds: opts.bounds,\n      min: opts.min,\n      max: opts.max,\n      precision: tickOpts.precision,\n      step: tickOpts.stepSize,\n      count: tickOpts.count,\n      maxDigits: this._maxDigits(),\n      horizontal: this.isHorizontal(),\n      minRotation: tickOpts.minRotation || 0,\n      includeBounds: tickOpts.includeBounds !== false\n    };\n    const dataRange = this._range || this;\n    const ticks = generateTicks(numericGeneratorOptions, dataRange);\n\n    // At this point, we need to update our max and min given the tick values,\n    // since we probably have expanded the range of the scale\n    if (opts.bounds === 'ticks') {\n      _setMinAndMaxByKey(ticks, this, 'value');\n    }\n\n    if (opts.reverse) {\n      ticks.reverse();\n\n      this.start = this.max;\n      this.end = this.min;\n    } else {\n      this.start = this.min;\n      this.end = this.max;\n    }\n\n    return ticks;\n  }\n\n  /**\n\t * @protected\n\t */\n  configure() {\n    const ticks = this.ticks;\n    let start = this.min;\n    let end = this.max;\n\n    super.configure();\n\n    if (this.options.offset && ticks.length) {\n      const offset = (end - start) / Math.max(ticks.length - 1, 1) / 2;\n      start -= offset;\n      end += offset;\n    }\n    this._startValue = start;\n    this._endValue = end;\n    this._valueRange = end - start;\n  }\n\n  getLabelForValue(value) {\n    return formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n  }\n}\n","import {isFinite} from '../helpers/helpers.core.js';\nimport LinearScaleBase from './scale.linearbase.js';\nimport Ticks from '../core/core.ticks.js';\nimport {toRadians} from '../helpers/index.js';\n\nexport default class LinearScale extends LinearScaleBase {\n\n  static id = 'linear';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    ticks: {\n      callback: Ticks.formatters.numeric\n    }\n  };\n\n\n  determineDataLimits() {\n    const {min, max} = this.getMinMax(true);\n\n    this.min = isFinite(min) ? min : 0;\n    this.max = isFinite(max) ? max : 1;\n\n    // Common base implementation to handle min, max, beginAtZero\n    this.handleTickRangeOptions();\n  }\n\n  /**\n\t * Returns the maximum number of ticks based on the scale dimension\n\t * @protected\n \t */\n  computeTickLimit() {\n    const horizontal = this.isHorizontal();\n    const length = horizontal ? this.width : this.height;\n    const minRotation = toRadians(this.options.ticks.minRotation);\n    const ratio = (horizontal ? Math.sin(minRotation) : Math.cos(minRotation)) || 0.001;\n    const tickFont = this._resolveTickFontOptions(0);\n    return Math.ceil(length / Math.min(40, tickFont.lineHeight / ratio));\n  }\n\n  // Utils\n  getPixelForValue(value) {\n    return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n  }\n\n  getValueForPixel(pixel) {\n    return this._startValue + this.getDecimalForPixel(pixel) * this._valueRange;\n  }\n}\n","import {finiteOrDefault, isFinite} from '../helpers/helpers.core.js';\nimport {formatNumber} from '../helpers/helpers.intl.js';\nimport {_setMinAndMaxByKey, log10} from '../helpers/helpers.math.js';\nimport Scale from '../core/core.scale.js';\nimport LinearScaleBase from './scale.linearbase.js';\nimport Ticks from '../core/core.ticks.js';\n\nconst log10Floor = v => Math.floor(log10(v));\nconst changeExponent = (v, m) => Math.pow(10, log10Floor(v) + m);\n\nfunction isMajor(tickVal) {\n  const remain = tickVal / (Math.pow(10, log10Floor(tickVal)));\n  return remain === 1;\n}\n\nfunction steps(min, max, rangeExp) {\n  const rangeStep = Math.pow(10, rangeExp);\n  const start = Math.floor(min / rangeStep);\n  const end = Math.ceil(max / rangeStep);\n  return end - start;\n}\n\nfunction startExp(min, max) {\n  const range = max - min;\n  let rangeExp = log10Floor(range);\n  while (steps(min, max, rangeExp) > 10) {\n    rangeExp++;\n  }\n  while (steps(min, max, rangeExp) < 10) {\n    rangeExp--;\n  }\n  return Math.min(rangeExp, log10Floor(min));\n}\n\n\n/**\n * Generate a set of logarithmic ticks\n * @param generationOptions the options used to generate the ticks\n * @param dataRange the range of the data\n * @returns {object[]} array of tick objects\n */\nfunction generateTicks(generationOptions, {min, max}) {\n  min = finiteOrDefault(generationOptions.min, min);\n  const ticks = [];\n  const minExp = log10Floor(min);\n  let exp = startExp(min, max);\n  let precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\n  const stepSize = Math.pow(10, exp);\n  const base = minExp > exp ? Math.pow(10, minExp) : 0;\n  const start = Math.round((min - base) * precision) / precision;\n  const offset = Math.floor((min - base) / stepSize / 10) * stepSize * 10;\n  let significand = Math.floor((start - offset) / Math.pow(10, exp));\n  let value = finiteOrDefault(generationOptions.min, Math.round((base + offset + significand * Math.pow(10, exp)) * precision) / precision);\n  while (value < max) {\n    ticks.push({value, major: isMajor(value), significand});\n    if (significand >= 10) {\n      significand = significand < 15 ? 15 : 20;\n    } else {\n      significand++;\n    }\n    if (significand >= 20) {\n      exp++;\n      significand = 2;\n      precision = exp >= 0 ? 1 : precision;\n    }\n    value = Math.round((base + offset + significand * Math.pow(10, exp)) * precision) / precision;\n  }\n  const lastTick = finiteOrDefault(generationOptions.max, value);\n  ticks.push({value: lastTick, major: isMajor(lastTick), significand});\n\n  return ticks;\n}\n\nexport default class LogarithmicScale extends Scale {\n\n  static id = 'logarithmic';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    ticks: {\n      callback: Ticks.formatters.logarithmic,\n      major: {\n        enabled: true\n      }\n    }\n  };\n\n\n  constructor(cfg) {\n    super(cfg);\n\n    /** @type {number} */\n    this.start = undefined;\n    /** @type {number} */\n    this.end = undefined;\n    /** @type {number} */\n    this._startValue = undefined;\n    this._valueRange = 0;\n  }\n\n  parse(raw, index) {\n    const value = LinearScaleBase.prototype.parse.apply(this, [raw, index]);\n    if (value === 0) {\n      this._zero = true;\n      return undefined;\n    }\n    return isFinite(value) && value > 0 ? value : null;\n  }\n\n  determineDataLimits() {\n    const {min, max} = this.getMinMax(true);\n\n    this.min = isFinite(min) ? Math.max(0, min) : null;\n    this.max = isFinite(max) ? Math.max(0, max) : null;\n\n    if (this.options.beginAtZero) {\n      this._zero = true;\n    }\n\n    // if data has `0` in it or `beginAtZero` is true, min (non zero) value is at bottom\n    // of scale, and it does not equal suggestedMin, lower the min bound by one exp.\n    if (this._zero && this.min !== this._suggestedMin && !isFinite(this._userMin)) {\n      this.min = min === changeExponent(this.min, 0) ? changeExponent(this.min, -1) : changeExponent(this.min, 0);\n    }\n\n    this.handleTickRangeOptions();\n  }\n\n  handleTickRangeOptions() {\n    const {minDefined, maxDefined} = this.getUserBounds();\n    let min = this.min;\n    let max = this.max;\n\n    const setMin = v => (min = minDefined ? min : v);\n    const setMax = v => (max = maxDefined ? max : v);\n\n    if (min === max) {\n      if (min <= 0) { // includes null\n        setMin(1);\n        setMax(10);\n      } else {\n        setMin(changeExponent(min, -1));\n        setMax(changeExponent(max, +1));\n      }\n    }\n    if (min <= 0) {\n      setMin(changeExponent(max, -1));\n    }\n    if (max <= 0) {\n\n      setMax(changeExponent(min, +1));\n    }\n\n    this.min = min;\n    this.max = max;\n  }\n\n  buildTicks() {\n    const opts = this.options;\n\n    const generationOptions = {\n      min: this._userMin,\n      max: this._userMax\n    };\n    const ticks = generateTicks(generationOptions, this);\n\n    // At this point, we need to update our max and min given the tick values,\n    // since we probably have expanded the range of the scale\n    if (opts.bounds === 'ticks') {\n      _setMinAndMaxByKey(ticks, this, 'value');\n    }\n\n    if (opts.reverse) {\n      ticks.reverse();\n\n      this.start = this.max;\n      this.end = this.min;\n    } else {\n      this.start = this.min;\n      this.end = this.max;\n    }\n\n    return ticks;\n  }\n\n  /**\n\t * @param {number} value\n\t * @return {string}\n\t */\n  getLabelForValue(value) {\n    return value === undefined\n      ? '0'\n      : formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n  }\n\n  /**\n\t * @protected\n\t */\n  configure() {\n    const start = this.min;\n\n    super.configure();\n\n    this._startValue = log10(start);\n    this._valueRange = log10(this.max) - log10(start);\n  }\n\n  getPixelForValue(value) {\n    if (value === undefined || value === 0) {\n      value = this.min;\n    }\n    if (value === null || isNaN(value)) {\n      return NaN;\n    }\n    return this.getPixelForDecimal(value === this.min\n      ? 0\n      : (log10(value) - this._startValue) / this._valueRange);\n  }\n\n  getValueForPixel(pixel) {\n    const decimal = this.getDecimalForPixel(pixel);\n    return Math.pow(10, this._startValue + decimal * this._valueRange);\n  }\n}\n","import defaults from '../core/core.defaults.js';\nimport {_longestText, addRoundedRectPath, renderText, _isPointInArea} from '../helpers/helpers.canvas.js';\nimport {HALF_PI, TAU, toDegrees, toRadians, _normalizeAngle, PI} from '../helpers/helpers.math.js';\nimport LinearScaleBase from './scale.linearbase.js';\nimport Ticks from '../core/core.ticks.js';\nimport {valueOrDefault, isArray, isFinite, callback as callCallback, isNullOrUndef} from '../helpers/helpers.core.js';\nimport {createContext, toFont, toPadding, toTRBLCorners} from '../helpers/helpers.options.js';\n\nfunction getTickBackdropHeight(opts) {\n  const tickOpts = opts.ticks;\n\n  if (tickOpts.display && opts.display) {\n    const padding = toPadding(tickOpts.backdropPadding);\n    return valueOrDefault(tickOpts.font && tickOpts.font.size, defaults.font.size) + padding.height;\n  }\n  return 0;\n}\n\nfunction measureLabelSize(ctx, font, label) {\n  label = isArray(label) ? label : [label];\n  return {\n    w: _longestText(ctx, font.string, label),\n    h: label.length * font.lineHeight\n  };\n}\n\nfunction determineLimits(angle, pos, size, min, max) {\n  if (angle === min || angle === max) {\n    return {\n      start: pos - (size / 2),\n      end: pos + (size / 2)\n    };\n  } else if (angle < min || angle > max) {\n    return {\n      start: pos - size,\n      end: pos\n    };\n  }\n\n  return {\n    start: pos,\n    end: pos + size\n  };\n}\n\n/**\n * Helper function to fit a radial linear scale with point labels\n */\nfunction fitWithPointLabels(scale) {\n\n  // Right, this is really confusing and there is a lot of maths going on here\n  // The gist of the problem is here: https://gist.github.com/nnnick/696cc9c55f4b0beb8fe9\n  //\n  // Reaction: https://dl.dropboxusercontent.com/u/34601363/toomuchscience.gif\n  //\n  // Solution:\n  //\n  // We assume the radius of the polygon is half the size of the canvas at first\n  // at each index we check if the text overlaps.\n  //\n  // Where it does, we store that angle and that index.\n  //\n  // After finding the largest index and angle we calculate how much we need to remove\n  // from the shape radius to move the point inwards by that x.\n  //\n  // We average the left and right distances to get the maximum shape radius that can fit in the box\n  // along with labels.\n  //\n  // Once we have that, we can find the centre point for the chart, by taking the x text protrusion\n  // on each side, removing that from the size, halving it and adding the left x protrusion width.\n  //\n  // This will mean we have a shape fitted to the canvas, as large as it can be with the labels\n  // and position it in the most space efficient manner\n  //\n  // https://dl.dropboxusercontent.com/u/34601363/yeahscience.gif\n\n  // Get maximum radius of the polygon. Either half the height (minus the text width) or half the width.\n  // Use this to calculate the offset + change. - Make sure L/R protrusion is at least 0 to stop issues with centre points\n  const orig = {\n    l: scale.left + scale._padding.left,\n    r: scale.right - scale._padding.right,\n    t: scale.top + scale._padding.top,\n    b: scale.bottom - scale._padding.bottom\n  };\n  const limits = Object.assign({}, orig);\n  const labelSizes = [];\n  const padding = [];\n  const valueCount = scale._pointLabels.length;\n  const pointLabelOpts = scale.options.pointLabels;\n  const additionalAngle = pointLabelOpts.centerPointLabels ? PI / valueCount : 0;\n\n  for (let i = 0; i < valueCount; i++) {\n    const opts = pointLabelOpts.setContext(scale.getPointLabelContext(i));\n    padding[i] = opts.padding;\n    const pointPosition = scale.getPointPosition(i, scale.drawingArea + padding[i], additionalAngle);\n    const plFont = toFont(opts.font);\n    const textSize = measureLabelSize(scale.ctx, plFont, scale._pointLabels[i]);\n    labelSizes[i] = textSize;\n\n    const angleRadians = _normalizeAngle(scale.getIndexAngle(i) + additionalAngle);\n    const angle = Math.round(toDegrees(angleRadians));\n    const hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n    const vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n    updateLimits(limits, orig, angleRadians, hLimits, vLimits);\n  }\n\n  scale.setCenterPoint(\n    orig.l - limits.l,\n    limits.r - orig.r,\n    orig.t - limits.t,\n    limits.b - orig.b\n  );\n\n  // Now that text size is determined, compute the full positions\n  scale._pointLabelItems = buildPointLabelItems(scale, labelSizes, padding);\n}\n\nfunction updateLimits(limits, orig, angle, hLimits, vLimits) {\n  const sin = Math.abs(Math.sin(angle));\n  const cos = Math.abs(Math.cos(angle));\n  let x = 0;\n  let y = 0;\n  if (hLimits.start < orig.l) {\n    x = (orig.l - hLimits.start) / sin;\n    limits.l = Math.min(limits.l, orig.l - x);\n  } else if (hLimits.end > orig.r) {\n    x = (hLimits.end - orig.r) / sin;\n    limits.r = Math.max(limits.r, orig.r + x);\n  }\n  if (vLimits.start < orig.t) {\n    y = (orig.t - vLimits.start) / cos;\n    limits.t = Math.min(limits.t, orig.t - y);\n  } else if (vLimits.end > orig.b) {\n    y = (vLimits.end - orig.b) / cos;\n    limits.b = Math.max(limits.b, orig.b + y);\n  }\n}\n\nfunction createPointLabelItem(scale, index, itemOpts) {\n  const outerDistance = scale.drawingArea;\n  const {extra, additionalAngle, padding, size} = itemOpts;\n  const pointLabelPosition = scale.getPointPosition(index, outerDistance + extra + padding, additionalAngle);\n  const angle = Math.round(toDegrees(_normalizeAngle(pointLabelPosition.angle + HALF_PI)));\n  const y = yForAngle(pointLabelPosition.y, size.h, angle);\n  const textAlign = getTextAlignForAngle(angle);\n  const left = leftForTextAlign(pointLabelPosition.x, size.w, textAlign);\n  return {\n    // if to draw or overlapped\n    visible: true,\n\n    // Text position\n    x: pointLabelPosition.x,\n    y,\n\n    // Text rendering data\n    textAlign,\n\n    // Bounding box\n    left,\n    top: y,\n    right: left + size.w,\n    bottom: y + size.h\n  };\n}\n\nfunction isNotOverlapped(item, area) {\n  if (!area) {\n    return true;\n  }\n  const {left, top, right, bottom} = item;\n  const apexesInArea = _isPointInArea({x: left, y: top}, area) || _isPointInArea({x: left, y: bottom}, area) ||\n    _isPointInArea({x: right, y: top}, area) || _isPointInArea({x: right, y: bottom}, area);\n  return !apexesInArea;\n}\n\nfunction buildPointLabelItems(scale, labelSizes, padding) {\n  const items = [];\n  const valueCount = scale._pointLabels.length;\n  const opts = scale.options;\n  const {centerPointLabels, display} = opts.pointLabels;\n  const itemOpts = {\n    extra: getTickBackdropHeight(opts) / 2,\n    additionalAngle: centerPointLabels ? PI / valueCount : 0\n  };\n  let area;\n\n  for (let i = 0; i < valueCount; i++) {\n    itemOpts.padding = padding[i];\n    itemOpts.size = labelSizes[i];\n\n    const item = createPointLabelItem(scale, i, itemOpts);\n    items.push(item);\n    if (display === 'auto') {\n      item.visible = isNotOverlapped(item, area);\n      if (item.visible) {\n        area = item;\n      }\n    }\n  }\n  return items;\n}\n\nfunction getTextAlignForAngle(angle) {\n  if (angle === 0 || angle === 180) {\n    return 'center';\n  } else if (angle < 180) {\n    return 'left';\n  }\n\n  return 'right';\n}\n\nfunction leftForTextAlign(x, w, align) {\n  if (align === 'right') {\n    x -= w;\n  } else if (align === 'center') {\n    x -= (w / 2);\n  }\n  return x;\n}\n\nfunction yForAngle(y, h, angle) {\n  if (angle === 90 || angle === 270) {\n    y -= (h / 2);\n  } else if (angle > 270 || angle < 90) {\n    y -= h;\n  }\n  return y;\n}\n\nfunction drawPointLabelBox(ctx, opts, item) {\n  const {left, top, right, bottom} = item;\n  const {backdropColor} = opts;\n\n  if (!isNullOrUndef(backdropColor)) {\n    const borderRadius = toTRBLCorners(opts.borderRadius);\n    const padding = toPadding(opts.backdropPadding);\n    ctx.fillStyle = backdropColor;\n\n    const backdropLeft = left - padding.left;\n    const backdropTop = top - padding.top;\n    const backdropWidth = right - left + padding.width;\n    const backdropHeight = bottom - top + padding.height;\n\n    if (Object.values(borderRadius).some(v => v !== 0)) {\n      ctx.beginPath();\n      addRoundedRectPath(ctx, {\n        x: backdropLeft,\n        y: backdropTop,\n        w: backdropWidth,\n        h: backdropHeight,\n        radius: borderRadius,\n      });\n      ctx.fill();\n    } else {\n      ctx.fillRect(backdropLeft, backdropTop, backdropWidth, backdropHeight);\n    }\n  }\n}\n\nfunction drawPointLabels(scale, labelCount) {\n  const {ctx, options: {pointLabels}} = scale;\n\n  for (let i = labelCount - 1; i >= 0; i--) {\n    const item = scale._pointLabelItems[i];\n    if (!item.visible) {\n      // overlapping\n      continue;\n    }\n    const optsAtIndex = pointLabels.setContext(scale.getPointLabelContext(i));\n    drawPointLabelBox(ctx, optsAtIndex, item);\n    const plFont = toFont(optsAtIndex.font);\n    const {x, y, textAlign} = item;\n\n    renderText(\n      ctx,\n      scale._pointLabels[i],\n      x,\n      y + (plFont.lineHeight / 2),\n      plFont,\n      {\n        color: optsAtIndex.color,\n        textAlign: textAlign,\n        textBaseline: 'middle'\n      }\n    );\n  }\n}\n\nfunction pathRadiusLine(scale, radius, circular, labelCount) {\n  const {ctx} = scale;\n  if (circular) {\n    // Draw circular arcs between the points\n    ctx.arc(scale.xCenter, scale.yCenter, radius, 0, TAU);\n  } else {\n    // Draw straight lines connecting each index\n    let pointPosition = scale.getPointPosition(0, radius);\n    ctx.moveTo(pointPosition.x, pointPosition.y);\n\n    for (let i = 1; i < labelCount; i++) {\n      pointPosition = scale.getPointPosition(i, radius);\n      ctx.lineTo(pointPosition.x, pointPosition.y);\n    }\n  }\n}\n\nfunction drawRadiusLine(scale, gridLineOpts, radius, labelCount, borderOpts) {\n  const ctx = scale.ctx;\n  const circular = gridLineOpts.circular;\n\n  const {color, lineWidth} = gridLineOpts;\n\n  if ((!circular && !labelCount) || !color || !lineWidth || radius < 0) {\n    return;\n  }\n\n  ctx.save();\n  ctx.strokeStyle = color;\n  ctx.lineWidth = lineWidth;\n  ctx.setLineDash(borderOpts.dash);\n  ctx.lineDashOffset = borderOpts.dashOffset;\n\n  ctx.beginPath();\n  pathRadiusLine(scale, radius, circular, labelCount);\n  ctx.closePath();\n  ctx.stroke();\n  ctx.restore();\n}\n\nfunction createPointLabelContext(parent, index, label) {\n  return createContext(parent, {\n    label,\n    index,\n    type: 'pointLabel'\n  });\n}\n\nexport default class RadialLinearScale extends LinearScaleBase {\n\n  static id = 'radialLinear';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    display: true,\n\n    // Boolean - Whether to animate scaling the chart from the centre\n    animate: true,\n    position: 'chartArea',\n\n    angleLines: {\n      display: true,\n      lineWidth: 1,\n      borderDash: [],\n      borderDashOffset: 0.0\n    },\n\n    grid: {\n      circular: false\n    },\n\n    startAngle: 0,\n\n    // label settings\n    ticks: {\n      // Boolean - Show a backdrop to the scale label\n      showLabelBackdrop: true,\n\n      callback: Ticks.formatters.numeric\n    },\n\n    pointLabels: {\n      backdropColor: undefined,\n\n      // Number - The backdrop padding above & below the label in pixels\n      backdropPadding: 2,\n\n      // Boolean - if true, show point labels\n      display: true,\n\n      // Number - Point label font size in pixels\n      font: {\n        size: 10\n      },\n\n      // Function - Used to convert point labels\n      callback(label) {\n        return label;\n      },\n\n      // Number - Additionl padding between scale and pointLabel\n      padding: 5,\n\n      // Boolean - if true, center point labels to slices in polar chart\n      centerPointLabels: false\n    }\n  };\n\n  static defaultRoutes = {\n    'angleLines.color': 'borderColor',\n    'pointLabels.color': 'color',\n    'ticks.color': 'color'\n  };\n\n  static descriptors = {\n    angleLines: {\n      _fallback: 'grid'\n    }\n  };\n\n  constructor(cfg) {\n    super(cfg);\n\n    /** @type {number} */\n    this.xCenter = undefined;\n    /** @type {number} */\n    this.yCenter = undefined;\n    /** @type {number} */\n    this.drawingArea = undefined;\n    /** @type {string[]} */\n    this._pointLabels = [];\n    this._pointLabelItems = [];\n  }\n\n  setDimensions() {\n    // Set the unconstrained dimension before label rotation\n    const padding = this._padding = toPadding(getTickBackdropHeight(this.options) / 2);\n    const w = this.width = this.maxWidth - padding.width;\n    const h = this.height = this.maxHeight - padding.height;\n    this.xCenter = Math.floor(this.left + w / 2 + padding.left);\n    this.yCenter = Math.floor(this.top + h / 2 + padding.top);\n    this.drawingArea = Math.floor(Math.min(w, h) / 2);\n  }\n\n  determineDataLimits() {\n    const {min, max} = this.getMinMax(false);\n\n    this.min = isFinite(min) && !isNaN(min) ? min : 0;\n    this.max = isFinite(max) && !isNaN(max) ? max : 0;\n\n    // Common base implementation to handle min, max, beginAtZero\n    this.handleTickRangeOptions();\n  }\n\n  /**\n\t * Returns the maximum number of ticks based on the scale dimension\n\t * @protected\n\t */\n  computeTickLimit() {\n    return Math.ceil(this.drawingArea / getTickBackdropHeight(this.options));\n  }\n\n  generateTickLabels(ticks) {\n    LinearScaleBase.prototype.generateTickLabels.call(this, ticks);\n\n    // Point labels\n    this._pointLabels = this.getLabels()\n      .map((value, index) => {\n        const label = callCallback(this.options.pointLabels.callback, [value, index], this);\n        return label || label === 0 ? label : '';\n      })\n      .filter((v, i) => this.chart.getDataVisibility(i));\n  }\n\n  fit() {\n    const opts = this.options;\n\n    if (opts.display && opts.pointLabels.display) {\n      fitWithPointLabels(this);\n    } else {\n      this.setCenterPoint(0, 0, 0, 0);\n    }\n  }\n\n  setCenterPoint(leftMovement, rightMovement, topMovement, bottomMovement) {\n    this.xCenter += Math.floor((leftMovement - rightMovement) / 2);\n    this.yCenter += Math.floor((topMovement - bottomMovement) / 2);\n    this.drawingArea -= Math.min(this.drawingArea / 2, Math.max(leftMovement, rightMovement, topMovement, bottomMovement));\n  }\n\n  getIndexAngle(index) {\n    const angleMultiplier = TAU / (this._pointLabels.length || 1);\n    const startAngle = this.options.startAngle || 0;\n\n    return _normalizeAngle(index * angleMultiplier + toRadians(startAngle));\n  }\n\n  getDistanceFromCenterForValue(value) {\n    if (isNullOrUndef(value)) {\n      return NaN;\n    }\n\n    // Take into account half font size + the yPadding of the top value\n    const scalingFactor = this.drawingArea / (this.max - this.min);\n    if (this.options.reverse) {\n      return (this.max - value) * scalingFactor;\n    }\n    return (value - this.min) * scalingFactor;\n  }\n\n  getValueForDistanceFromCenter(distance) {\n    if (isNullOrUndef(distance)) {\n      return NaN;\n    }\n\n    const scaledDistance = distance / (this.drawingArea / (this.max - this.min));\n    return this.options.reverse ? this.max - scaledDistance : this.min + scaledDistance;\n  }\n\n  getPointLabelContext(index) {\n    const pointLabels = this._pointLabels || [];\n\n    if (index >= 0 && index < pointLabels.length) {\n      const pointLabel = pointLabels[index];\n      return createPointLabelContext(this.getContext(), index, pointLabel);\n    }\n  }\n\n  getPointPosition(index, distanceFromCenter, additionalAngle = 0) {\n    const angle = this.getIndexAngle(index) - HALF_PI + additionalAngle;\n    return {\n      x: Math.cos(angle) * distanceFromCenter + this.xCenter,\n      y: Math.sin(angle) * distanceFromCenter + this.yCenter,\n      angle\n    };\n  }\n\n  getPointPositionForValue(index, value) {\n    return this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n  }\n\n  getBasePosition(index) {\n    return this.getPointPositionForValue(index || 0, this.getBaseValue());\n  }\n\n  getPointLabelPosition(index) {\n    const {left, top, right, bottom} = this._pointLabelItems[index];\n    return {\n      left,\n      top,\n      right,\n      bottom,\n    };\n  }\n\n  /**\n\t * @protected\n\t */\n  drawBackground() {\n    const {backgroundColor, grid: {circular}} = this.options;\n    if (backgroundColor) {\n      const ctx = this.ctx;\n      ctx.save();\n      ctx.beginPath();\n      pathRadiusLine(this, this.getDistanceFromCenterForValue(this._endValue), circular, this._pointLabels.length);\n      ctx.closePath();\n      ctx.fillStyle = backgroundColor;\n      ctx.fill();\n      ctx.restore();\n    }\n  }\n\n  /**\n\t * @protected\n\t */\n  drawGrid() {\n    const ctx = this.ctx;\n    const opts = this.options;\n    const {angleLines, grid, border} = opts;\n    const labelCount = this._pointLabels.length;\n\n    let i, offset, position;\n\n    if (opts.pointLabels.display) {\n      drawPointLabels(this, labelCount);\n    }\n\n    if (grid.display) {\n      this.ticks.forEach((tick, index) => {\n        if (index !== 0 || (index === 0 && this.min < 0)) {\n          offset = this.getDistanceFromCenterForValue(tick.value);\n          const context = this.getContext(index);\n          const optsAtIndex = grid.setContext(context);\n          const optsAtIndexBorder = border.setContext(context);\n\n          drawRadiusLine(this, optsAtIndex, offset, labelCount, optsAtIndexBorder);\n        }\n      });\n    }\n\n    if (angleLines.display) {\n      ctx.save();\n\n      for (i = labelCount - 1; i >= 0; i--) {\n        const optsAtIndex = angleLines.setContext(this.getPointLabelContext(i));\n        const {color, lineWidth} = optsAtIndex;\n\n        if (!lineWidth || !color) {\n          continue;\n        }\n\n        ctx.lineWidth = lineWidth;\n        ctx.strokeStyle = color;\n\n        ctx.setLineDash(optsAtIndex.borderDash);\n        ctx.lineDashOffset = optsAtIndex.borderDashOffset;\n\n        offset = this.getDistanceFromCenterForValue(opts.reverse ? this.min : this.max);\n        position = this.getPointPosition(i, offset);\n        ctx.beginPath();\n        ctx.moveTo(this.xCenter, this.yCenter);\n        ctx.lineTo(position.x, position.y);\n        ctx.stroke();\n      }\n\n      ctx.restore();\n    }\n  }\n\n  /**\n\t * @protected\n\t */\n  drawBorder() {}\n\n  /**\n\t * @protected\n\t */\n  drawLabels() {\n    const ctx = this.ctx;\n    const opts = this.options;\n    const tickOpts = opts.ticks;\n\n    if (!tickOpts.display) {\n      return;\n    }\n\n    const startAngle = this.getIndexAngle(0);\n    let offset, width;\n\n    ctx.save();\n    ctx.translate(this.xCenter, this.yCenter);\n    ctx.rotate(startAngle);\n    ctx.textAlign = 'center';\n    ctx.textBaseline = 'middle';\n\n    this.ticks.forEach((tick, index) => {\n      if ((index === 0 && this.min >= 0) && !opts.reverse) {\n        return;\n      }\n\n      const optsAtIndex = tickOpts.setContext(this.getContext(index));\n      const tickFont = toFont(optsAtIndex.font);\n      offset = this.getDistanceFromCenterForValue(this.ticks[index].value);\n\n      if (optsAtIndex.showLabelBackdrop) {\n        ctx.font = tickFont.string;\n        width = ctx.measureText(tick.label).width;\n        ctx.fillStyle = optsAtIndex.backdropColor;\n\n        const padding = toPadding(optsAtIndex.backdropPadding);\n        ctx.fillRect(\n          -width / 2 - padding.left,\n          -offset - tickFont.size / 2 - padding.top,\n          width + padding.width,\n          tickFont.size + padding.height\n        );\n      }\n\n      renderText(ctx, tick.label, 0, -offset, tickFont, {\n        color: optsAtIndex.color,\n        strokeColor: optsAtIndex.textStrokeColor,\n        strokeWidth: optsAtIndex.textStrokeWidth,\n      });\n    });\n\n    ctx.restore();\n  }\n\n  /**\n\t * @protected\n\t */\n  drawTitle() {}\n}\n","import adapters from '../core/core.adapters.js';\nimport {callback as call, isFinite, isNullOrUndef, mergeIf, valueOrDefault} from '../helpers/helpers.core.js';\nimport {toRadians, isNumber, _limitValue} from '../helpers/helpers.math.js';\nimport Scale from '../core/core.scale.js';\nimport {_arrayUnique, _filterBetween, _lookup} from '../helpers/helpers.collection.js';\n\n/**\n * @typedef { import('../core/core.adapters.js').TimeUnit } Unit\n * @typedef {{common: boolean, size: number, steps?: number}} Interval\n * @typedef { import('../core/core.adapters.js').DateAdapter } DateAdapter\n */\n\n/**\n * @type {Object<Unit, Interval>}\n */\nconst INTERVALS = {\n  millisecond: {common: true, size: 1, steps: 1000},\n  second: {common: true, size: 1000, steps: 60},\n  minute: {common: true, size: 60000, steps: 60},\n  hour: {common: true, size: 3600000, steps: 24},\n  day: {common: true, size: 86400000, steps: 30},\n  week: {common: false, size: 604800000, steps: 4},\n  month: {common: true, size: 2.628e9, steps: 12},\n  quarter: {common: false, size: 7.884e9, steps: 4},\n  year: {common: true, size: 3.154e10}\n};\n\n/**\n * @type {Unit[]}\n */\nconst UNITS = /** @type Unit[] */ /* #__PURE__ */ (Object.keys(INTERVALS));\n\n/**\n * @param {number} a\n * @param {number} b\n */\nfunction sorter(a, b) {\n  return a - b;\n}\n\n/**\n * @param {TimeScale} scale\n * @param {*} input\n * @return {number}\n */\nfunction parse(scale, input) {\n  if (isNullOrUndef(input)) {\n    return null;\n  }\n\n  const adapter = scale._adapter;\n  const {parser, round, isoWeekday} = scale._parseOpts;\n  let value = input;\n\n  if (typeof parser === 'function') {\n    value = parser(value);\n  }\n\n  // Only parse if it's not a timestamp already\n  if (!isFinite(value)) {\n    value = typeof parser === 'string'\n      ? adapter.parse(value, /** @type {Unit} */ (parser))\n      : adapter.parse(value);\n  }\n\n  if (value === null) {\n    return null;\n  }\n\n  if (round) {\n    value = round === 'week' && (isNumber(isoWeekday) || isoWeekday === true)\n      ? adapter.startOf(value, 'isoWeek', isoWeekday)\n      : adapter.startOf(value, round);\n  }\n\n  return +value;\n}\n\n/**\n * Figures out what unit results in an appropriate number of auto-generated ticks\n * @param {Unit} minUnit\n * @param {number} min\n * @param {number} max\n * @param {number} capacity\n * @return {object}\n */\nfunction determineUnitForAutoTicks(minUnit, min, max, capacity) {\n  const ilen = UNITS.length;\n\n  for (let i = UNITS.indexOf(minUnit); i < ilen - 1; ++i) {\n    const interval = INTERVALS[UNITS[i]];\n    const factor = interval.steps ? interval.steps : Number.MAX_SAFE_INTEGER;\n\n    if (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\n      return UNITS[i];\n    }\n  }\n\n  return UNITS[ilen - 1];\n}\n\n/**\n * Figures out what unit to format a set of ticks with\n * @param {TimeScale} scale\n * @param {number} numTicks\n * @param {Unit} minUnit\n * @param {number} min\n * @param {number} max\n * @return {Unit}\n */\nfunction determineUnitForFormatting(scale, numTicks, minUnit, min, max) {\n  for (let i = UNITS.length - 1; i >= UNITS.indexOf(minUnit); i--) {\n    const unit = UNITS[i];\n    if (INTERVALS[unit].common && scale._adapter.diff(max, min, unit) >= numTicks - 1) {\n      return unit;\n    }\n  }\n\n  return UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\n}\n\n/**\n * @param {Unit} unit\n * @return {object}\n */\nfunction determineMajorUnit(unit) {\n  for (let i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i) {\n    if (INTERVALS[UNITS[i]].common) {\n      return UNITS[i];\n    }\n  }\n}\n\n/**\n * @param {object} ticks\n * @param {number} time\n * @param {number[]} [timestamps] - if defined, snap to these timestamps\n */\nfunction addTick(ticks, time, timestamps) {\n  if (!timestamps) {\n    ticks[time] = true;\n  } else if (timestamps.length) {\n    const {lo, hi} = _lookup(timestamps, time);\n    const timestamp = timestamps[lo] >= time ? timestamps[lo] : timestamps[hi];\n    ticks[timestamp] = true;\n  }\n}\n\n/**\n * @param {TimeScale} scale\n * @param {object[]} ticks\n * @param {object} map\n * @param {Unit} majorUnit\n * @return {object[]}\n */\nfunction setMajorTicks(scale, ticks, map, majorUnit) {\n  const adapter = scale._adapter;\n  const first = +adapter.startOf(ticks[0].value, majorUnit);\n  const last = ticks[ticks.length - 1].value;\n  let major, index;\n\n  for (major = first; major <= last; major = +adapter.add(major, 1, majorUnit)) {\n    index = map[major];\n    if (index >= 0) {\n      ticks[index].major = true;\n    }\n  }\n  return ticks;\n}\n\n/**\n * @param {TimeScale} scale\n * @param {number[]} values\n * @param {Unit|undefined} [majorUnit]\n * @return {object[]}\n */\nfunction ticksFromTimestamps(scale, values, majorUnit) {\n  const ticks = [];\n  /** @type {Object<number,object>} */\n  const map = {};\n  const ilen = values.length;\n  let i, value;\n\n  for (i = 0; i < ilen; ++i) {\n    value = values[i];\n    map[value] = i;\n\n    ticks.push({\n      value,\n      major: false\n    });\n  }\n\n  // We set the major ticks separately from the above loop because calling startOf for every tick\n  // is expensive when there is a large number of ticks\n  return (ilen === 0 || !majorUnit) ? ticks : setMajorTicks(scale, ticks, map, majorUnit);\n}\n\nexport default class TimeScale extends Scale {\n\n  static id = 'time';\n\n  /**\n   * @type {any}\n   */\n  static defaults = {\n    /**\n     * Scale boundary strategy (bypassed by min/max time options)\n     * - `data`: make sure data are fully visible, ticks outside are removed\n     * - `ticks`: make sure ticks are fully visible, data outside are truncated\n     * @see https://github.com/chartjs/Chart.js/pull/4556\n     * @since 2.7.0\n     */\n    bounds: 'data',\n\n    adapters: {},\n    time: {\n      parser: false, // false == a pattern string from or a custom callback that converts its argument to a timestamp\n      unit: false, // false == automatic or override with week, month, year, etc.\n      round: false, // none, or override with week, month, year, etc.\n      isoWeekday: false, // override week start day\n      minUnit: 'millisecond',\n      displayFormats: {}\n    },\n    ticks: {\n      /**\n       * Ticks generation input values:\n       * - 'auto': generates \"optimal\" ticks based on scale size and time options.\n       * - 'data': generates ticks from data (including labels from data {t|x|y} objects).\n       * - 'labels': generates ticks from user given `data.labels` values ONLY.\n       * @see https://github.com/chartjs/Chart.js/pull/4507\n       * @since 2.7.0\n       */\n      source: 'auto',\n\n      callback: false,\n\n      major: {\n        enabled: false\n      }\n    }\n  };\n\n  /**\n\t * @param {object} props\n\t */\n  constructor(props) {\n    super(props);\n\n    /** @type {{data: number[], labels: number[], all: number[]}} */\n    this._cache = {\n      data: [],\n      labels: [],\n      all: []\n    };\n\n    /** @type {Unit} */\n    this._unit = 'day';\n    /** @type {Unit=} */\n    this._majorUnit = undefined;\n    this._offsets = {};\n    this._normalized = false;\n    this._parseOpts = undefined;\n  }\n\n  init(scaleOpts, opts = {}) {\n    const time = scaleOpts.time || (scaleOpts.time = {});\n    /** @type {DateAdapter} */\n    const adapter = this._adapter = new adapters._date(scaleOpts.adapters.date);\n\n    adapter.init(opts);\n\n    // Backward compatibility: before introducing adapter, `displayFormats` was\n    // supposed to contain *all* unit/string pairs but this can't be resolved\n    // when loading the scale (adapters are loaded afterward), so let's populate\n    // missing formats on update\n    mergeIf(time.displayFormats, adapter.formats());\n\n    this._parseOpts = {\n      parser: time.parser,\n      round: time.round,\n      isoWeekday: time.isoWeekday\n    };\n\n    super.init(scaleOpts);\n\n    this._normalized = opts.normalized;\n  }\n\n  /**\n\t * @param {*} raw\n\t * @param {number?} [index]\n\t * @return {number}\n\t */\n  parse(raw, index) { // eslint-disable-line no-unused-vars\n    if (raw === undefined) {\n      return null;\n    }\n    return parse(this, raw);\n  }\n\n  beforeLayout() {\n    super.beforeLayout();\n    this._cache = {\n      data: [],\n      labels: [],\n      all: []\n    };\n  }\n\n  determineDataLimits() {\n    const options = this.options;\n    const adapter = this._adapter;\n    const unit = options.time.unit || 'day';\n    // eslint-disable-next-line prefer-const\n    let {min, max, minDefined, maxDefined} = this.getUserBounds();\n\n    /**\n\t\t * @param {object} bounds\n\t\t */\n    function _applyBounds(bounds) {\n      if (!minDefined && !isNaN(bounds.min)) {\n        min = Math.min(min, bounds.min);\n      }\n      if (!maxDefined && !isNaN(bounds.max)) {\n        max = Math.max(max, bounds.max);\n      }\n    }\n\n    // If we have user provided `min` and `max` labels / data bounds can be ignored\n    if (!minDefined || !maxDefined) {\n      // Labels are always considered, when user did not force bounds\n      _applyBounds(this._getLabelBounds());\n\n      // If `bounds` is `'ticks'` and `ticks.source` is `'labels'`,\n      // data bounds are ignored (and don't need to be determined)\n      if (options.bounds !== 'ticks' || options.ticks.source !== 'labels') {\n        _applyBounds(this.getMinMax(false));\n      }\n    }\n\n    min = isFinite(min) && !isNaN(min) ? min : +adapter.startOf(Date.now(), unit);\n    max = isFinite(max) && !isNaN(max) ? max : +adapter.endOf(Date.now(), unit) + 1;\n\n    // Make sure that max is strictly higher than min (required by the timeseries lookup table)\n    this.min = Math.min(min, max - 1);\n    this.max = Math.max(min + 1, max);\n  }\n\n  /**\n\t * @private\n\t */\n  _getLabelBounds() {\n    const arr = this.getLabelTimestamps();\n    let min = Number.POSITIVE_INFINITY;\n    let max = Number.NEGATIVE_INFINITY;\n\n    if (arr.length) {\n      min = arr[0];\n      max = arr[arr.length - 1];\n    }\n    return {min, max};\n  }\n\n  /**\n\t * @return {object[]}\n\t */\n  buildTicks() {\n    const options = this.options;\n    const timeOpts = options.time;\n    const tickOpts = options.ticks;\n    const timestamps = tickOpts.source === 'labels' ? this.getLabelTimestamps() : this._generate();\n\n    if (options.bounds === 'ticks' && timestamps.length) {\n      this.min = this._userMin || timestamps[0];\n      this.max = this._userMax || timestamps[timestamps.length - 1];\n    }\n\n    const min = this.min;\n    const max = this.max;\n\n    const ticks = _filterBetween(timestamps, min, max);\n\n    // PRIVATE\n    // determineUnitForFormatting relies on the number of ticks so we don't use it when\n    // autoSkip is enabled because we don't yet know what the final number of ticks will be\n    this._unit = timeOpts.unit || (tickOpts.autoSkip\n      ? determineUnitForAutoTicks(timeOpts.minUnit, this.min, this.max, this._getLabelCapacity(min))\n      : determineUnitForFormatting(this, ticks.length, timeOpts.minUnit, this.min, this.max));\n    this._majorUnit = !tickOpts.major.enabled || this._unit === 'year' ? undefined\n      : determineMajorUnit(this._unit);\n    this.initOffsets(timestamps);\n\n    if (options.reverse) {\n      ticks.reverse();\n    }\n\n    return ticksFromTimestamps(this, ticks, this._majorUnit);\n  }\n\n  afterAutoSkip() {\n    // Offsets for bar charts need to be handled with the auto skipped\n    // ticks. Once ticks have been skipped, we re-compute the offsets.\n    if (this.options.offsetAfterAutoskip) {\n      this.initOffsets(this.ticks.map(tick => +tick.value));\n    }\n  }\n\n  /**\n\t * Returns the start and end offsets from edges in the form of {start, end}\n\t * where each value is a relative width to the scale and ranges between 0 and 1.\n\t * They add extra margins on the both sides by scaling down the original scale.\n\t * Offsets are added when the `offset` option is true.\n\t * @param {number[]} timestamps\n\t * @protected\n\t */\n  initOffsets(timestamps = []) {\n    let start = 0;\n    let end = 0;\n    let first, last;\n\n    if (this.options.offset && timestamps.length) {\n      first = this.getDecimalForValue(timestamps[0]);\n      if (timestamps.length === 1) {\n        start = 1 - first;\n      } else {\n        start = (this.getDecimalForValue(timestamps[1]) - first) / 2;\n      }\n      last = this.getDecimalForValue(timestamps[timestamps.length - 1]);\n      if (timestamps.length === 1) {\n        end = last;\n      } else {\n        end = (last - this.getDecimalForValue(timestamps[timestamps.length - 2])) / 2;\n      }\n    }\n    const limit = timestamps.length < 3 ? 0.5 : 0.25;\n    start = _limitValue(start, 0, limit);\n    end = _limitValue(end, 0, limit);\n\n    this._offsets = {start, end, factor: 1 / (start + 1 + end)};\n  }\n\n  /**\n\t * Generates a maximum of `capacity` timestamps between min and max, rounded to the\n\t * `minor` unit using the given scale time `options`.\n\t * Important: this method can return ticks outside the min and max range, it's the\n\t * responsibility of the calling code to clamp values if needed.\n\t * @protected\n\t */\n  _generate() {\n    const adapter = this._adapter;\n    const min = this.min;\n    const max = this.max;\n    const options = this.options;\n    const timeOpts = options.time;\n    // @ts-ignore\n    const minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, this._getLabelCapacity(min));\n    const stepSize = valueOrDefault(options.ticks.stepSize, 1);\n    const weekday = minor === 'week' ? timeOpts.isoWeekday : false;\n    const hasWeekday = isNumber(weekday) || weekday === true;\n    const ticks = {};\n    let first = min;\n    let time, count;\n\n    // For 'week' unit, handle the first day of week option\n    if (hasWeekday) {\n      first = +adapter.startOf(first, 'isoWeek', weekday);\n    }\n\n    // Align first ticks on unit\n    first = +adapter.startOf(first, hasWeekday ? 'day' : minor);\n\n    // Prevent browser from freezing in case user options request millions of milliseconds\n    if (adapter.diff(max, min, minor) > 100000 * stepSize) {\n      throw new Error(min + ' and ' + max + ' are too far apart with stepSize of ' + stepSize + ' ' + minor);\n    }\n\n    const timestamps = options.ticks.source === 'data' && this.getDataTimestamps();\n    for (time = first, count = 0; time < max; time = +adapter.add(time, stepSize, minor), count++) {\n      addTick(ticks, time, timestamps);\n    }\n\n    if (time === max || options.bounds === 'ticks' || count === 1) {\n      addTick(ticks, time, timestamps);\n    }\n\n    // @ts-ignore\n    return Object.keys(ticks).sort(sorter).map(x => +x);\n  }\n\n  /**\n\t * @param {number} value\n\t * @return {string}\n\t */\n  getLabelForValue(value) {\n    const adapter = this._adapter;\n    const timeOpts = this.options.time;\n\n    if (timeOpts.tooltipFormat) {\n      return adapter.format(value, timeOpts.tooltipFormat);\n    }\n    return adapter.format(value, timeOpts.displayFormats.datetime);\n  }\n\n  /**\n\t * @param {number} value\n\t * @param {string|undefined} format\n\t * @return {string}\n\t */\n  format(value, format) {\n    const options = this.options;\n    const formats = options.time.displayFormats;\n    const unit = this._unit;\n    const fmt = format || formats[unit];\n    return this._adapter.format(value, fmt);\n  }\n\n  /**\n\t * Function to format an individual tick mark\n\t * @param {number} time\n\t * @param {number} index\n\t * @param {object[]} ticks\n\t * @param {string|undefined} [format]\n\t * @return {string}\n\t * @private\n\t */\n  _tickFormatFunction(time, index, ticks, format) {\n    const options = this.options;\n    const formatter = options.ticks.callback;\n\n    if (formatter) {\n      return call(formatter, [time, index, ticks], this);\n    }\n\n    const formats = options.time.displayFormats;\n    const unit = this._unit;\n    const majorUnit = this._majorUnit;\n    const minorFormat = unit && formats[unit];\n    const majorFormat = majorUnit && formats[majorUnit];\n    const tick = ticks[index];\n    const major = majorUnit && majorFormat && tick && tick.major;\n\n    return this._adapter.format(time, format || (major ? majorFormat : minorFormat));\n  }\n\n  /**\n\t * @param {object[]} ticks\n\t */\n  generateTickLabels(ticks) {\n    let i, ilen, tick;\n\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      tick = ticks[i];\n      tick.label = this._tickFormatFunction(tick.value, i, ticks);\n    }\n  }\n\n  /**\n\t * @param {number} value - Milliseconds since epoch (1 January 1970 00:00:00 UTC)\n\t * @return {number}\n\t */\n  getDecimalForValue(value) {\n    return value === null ? NaN : (value - this.min) / (this.max - this.min);\n  }\n\n  /**\n\t * @param {number} value - Milliseconds since epoch (1 January 1970 00:00:00 UTC)\n\t * @return {number}\n\t */\n  getPixelForValue(value) {\n    const offsets = this._offsets;\n    const pos = this.getDecimalForValue(value);\n    return this.getPixelForDecimal((offsets.start + pos) * offsets.factor);\n  }\n\n  /**\n\t * @param {number} pixel\n\t * @return {number}\n\t */\n  getValueForPixel(pixel) {\n    const offsets = this._offsets;\n    const pos = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n    return this.min + pos * (this.max - this.min);\n  }\n\n  /**\n\t * @param {string} label\n\t * @return {{w:number, h:number}}\n\t * @private\n\t */\n  _getLabelSize(label) {\n    const ticksOpts = this.options.ticks;\n    const tickLabelWidth = this.ctx.measureText(label).width;\n    const angle = toRadians(this.isHorizontal() ? ticksOpts.maxRotation : ticksOpts.minRotation);\n    const cosRotation = Math.cos(angle);\n    const sinRotation = Math.sin(angle);\n    const tickFontSize = this._resolveTickFontOptions(0).size;\n\n    return {\n      w: (tickLabelWidth * cosRotation) + (tickFontSize * sinRotation),\n      h: (tickLabelWidth * sinRotation) + (tickFontSize * cosRotation)\n    };\n  }\n\n  /**\n\t * @param {number} exampleTime\n\t * @return {number}\n\t * @private\n\t */\n  _getLabelCapacity(exampleTime) {\n    const timeOpts = this.options.time;\n    const displayFormats = timeOpts.displayFormats;\n\n    // pick the longest format (milliseconds) for guesstimation\n    const format = displayFormats[timeOpts.unit] || displayFormats.millisecond;\n    const exampleLabel = this._tickFormatFunction(exampleTime, 0, ticksFromTimestamps(this, [exampleTime], this._majorUnit), format);\n    const size = this._getLabelSize(exampleLabel);\n    // subtract 1 - if offset then there's one less label than tick\n    // if not offset then one half label padding is added to each end leaving room for one less label\n    const capacity = Math.floor(this.isHorizontal() ? this.width / size.w : this.height / size.h) - 1;\n    return capacity > 0 ? capacity : 1;\n  }\n\n  /**\n\t * @protected\n\t */\n  getDataTimestamps() {\n    let timestamps = this._cache.data || [];\n    let i, ilen;\n\n    if (timestamps.length) {\n      return timestamps;\n    }\n\n    const metas = this.getMatchingVisibleMetas();\n\n    if (this._normalized && metas.length) {\n      return (this._cache.data = metas[0].controller.getAllParsedValues(this));\n    }\n\n    for (i = 0, ilen = metas.length; i < ilen; ++i) {\n      timestamps = timestamps.concat(metas[i].controller.getAllParsedValues(this));\n    }\n\n    return (this._cache.data = this.normalize(timestamps));\n  }\n\n  /**\n\t * @protected\n\t */\n  getLabelTimestamps() {\n    const timestamps = this._cache.labels || [];\n    let i, ilen;\n\n    if (timestamps.length) {\n      return timestamps;\n    }\n\n    const labels = this.getLabels();\n    for (i = 0, ilen = labels.length; i < ilen; ++i) {\n      timestamps.push(parse(this, labels[i]));\n    }\n\n    return (this._cache.labels = this._normalized ? timestamps : this.normalize(timestamps));\n  }\n\n  /**\n\t * @param {number[]} values\n\t * @protected\n\t */\n  normalize(values) {\n    // It seems to be somewhat faster to do sorting first\n    return _arrayUnique(values.sort(sorter));\n  }\n}\n","import TimeScale from './scale.time.js';\nimport {_lookupByKey} from '../helpers/helpers.collection.js';\n\n/**\n * Linearly interpolates the given source `val` using the table. If value is out of bounds, values\n * at edges are used for the interpolation.\n * @param {object} table\n * @param {number} val\n * @param {boolean} [reverse] lookup time based on position instead of vice versa\n * @return {object}\n */\nfunction interpolate(table, val, reverse) {\n  let lo = 0;\n  let hi = table.length - 1;\n  let prevSource, nextSource, prevTarget, nextTarget;\n  if (reverse) {\n    if (val >= table[lo].pos && val <= table[hi].pos) {\n      ({lo, hi} = _lookupByKey(table, 'pos', val));\n    }\n    ({pos: prevSource, time: prevTarget} = table[lo]);\n    ({pos: nextSource, time: nextTarget} = table[hi]);\n  } else {\n    if (val >= table[lo].time && val <= table[hi].time) {\n      ({lo, hi} = _lookupByKey(table, 'time', val));\n    }\n    ({time: prevSource, pos: prevTarget} = table[lo]);\n    ({time: nextSource, pos: nextTarget} = table[hi]);\n  }\n\n  const span = nextSource - prevSource;\n  return span ? prevTarget + (nextTarget - prevTarget) * (val - prevSource) / span : prevTarget;\n}\n\nclass TimeSeriesScale extends TimeScale {\n\n  static id = 'timeseries';\n\n  /**\n   * @type {any}\n   */\n  static defaults = TimeScale.defaults;\n\n  /**\n\t * @param {object} props\n\t */\n  constructor(props) {\n    super(props);\n\n    /** @type {object[]} */\n    this._table = [];\n    /** @type {number} */\n    this._minPos = undefined;\n    /** @type {number} */\n    this._tableRange = undefined;\n  }\n\n  /**\n\t * @protected\n\t */\n  initOffsets() {\n    const timestamps = this._getTimestampsForTable();\n    const table = this._table = this.buildLookupTable(timestamps);\n    this._minPos = interpolate(table, this.min);\n    this._tableRange = interpolate(table, this.max) - this._minPos;\n    super.initOffsets(timestamps);\n  }\n\n  /**\n\t * Returns an array of {time, pos} objects used to interpolate a specific `time` or position\n\t * (`pos`) on the scale, by searching entries before and after the requested value. `pos` is\n\t * a decimal between 0 and 1: 0 being the start of the scale (left or top) and 1 the other\n\t * extremity (left + width or top + height). Note that it would be more optimized to directly\n\t * store pre-computed pixels, but the scale dimensions are not guaranteed at the time we need\n\t * to create the lookup table. The table ALWAYS contains at least two items: min and max.\n\t * @param {number[]} timestamps\n\t * @return {object[]}\n\t * @protected\n\t */\n  buildLookupTable(timestamps) {\n    const {min, max} = this;\n    const items = [];\n    const table = [];\n    let i, ilen, prev, curr, next;\n\n    for (i = 0, ilen = timestamps.length; i < ilen; ++i) {\n      curr = timestamps[i];\n      if (curr >= min && curr <= max) {\n        items.push(curr);\n      }\n    }\n\n    if (items.length < 2) {\n      // In case there is less that 2 timestamps between min and max, the scale is defined by min and max\n      return [\n        {time: min, pos: 0},\n        {time: max, pos: 1}\n      ];\n    }\n\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      next = items[i + 1];\n      prev = items[i - 1];\n      curr = items[i];\n\n      // only add points that breaks the scale linearity\n      if (Math.round((next + prev) / 2) !== curr) {\n        table.push({time: curr, pos: i / (ilen - 1)});\n      }\n    }\n    return table;\n  }\n\n  /**\n    * Generates all timestamps defined in the data.\n    * Important: this method can return ticks outside the min and max range, it's the\n    * responsibility of the calling code to clamp values if needed.\n    * @protected\n    */\n  _generate() {\n    const min = this.min;\n    const max = this.max;\n    let timestamps = super.getDataTimestamps();\n    if (!timestamps.includes(min) || !timestamps.length) {\n      timestamps.splice(0, 0, min);\n    }\n    if (!timestamps.includes(max) || timestamps.length === 1) {\n      timestamps.push(max);\n    }\n    return timestamps.sort((a, b) => a - b);\n  }\n\n  /**\n\t * Returns all timestamps\n\t * @return {number[]}\n\t * @private\n\t */\n  _getTimestampsForTable() {\n    let timestamps = this._cache.all || [];\n\n    if (timestamps.length) {\n      return timestamps;\n    }\n\n    const data = this.getDataTimestamps();\n    const label = this.getLabelTimestamps();\n    if (data.length && label.length) {\n      // If combining labels and data (data might not contain all labels),\n      // we need to recheck uniqueness and sort\n      timestamps = this.normalize(data.concat(label));\n    } else {\n      timestamps = data.length ? data : label;\n    }\n    timestamps = this._cache.all = timestamps;\n\n    return timestamps;\n  }\n\n  /**\n\t * @param {number} value - Milliseconds since epoch (1 January 1970 00:00:00 UTC)\n\t * @return {number}\n\t */\n  getDecimalForValue(value) {\n    return (interpolate(this._table, value) - this._minPos) / this._tableRange;\n  }\n\n  /**\n\t * @param {number} pixel\n\t * @return {number}\n\t */\n  getValueForPixel(pixel) {\n    const offsets = this._offsets;\n    const decimal = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n    return interpolate(this._table, decimal * this._tableRange + this._minPos, true);\n  }\n}\n\nexport default TimeSeriesScale;\n","export * from './controllers/index.js';\nexport * from './core/index.js';\nexport * from './elements/index.js';\nexport * from './platform/index.js';\nexport * from './plugins/index.js';\nexport * from './scales/index.js';\n\nimport * as controllers from './controllers/index.js';\nimport * as elements from './elements/index.js';\nimport * as plugins from './plugins/index.js';\nimport * as scales from './scales/index.js';\n\nexport {\n  controllers,\n  elements,\n  plugins,\n  scales,\n};\n\nexport const registerables = [\n  controllers,\n  elements,\n  plugins,\n  scales,\n];\n"]},"metadata":{},"sourceType":"module"}