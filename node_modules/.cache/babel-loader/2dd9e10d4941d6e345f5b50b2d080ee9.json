{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ebelfars\\\\PycharmProjects\\\\react-portfolio\\\\src\\\\components\\\\Skills.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useRef } from 'react';\nimport { Chart } from 'chart.js';\nimport colorSharp from \"../assets/img/color-sharp.png\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Skills = () => {\n  _s();\n\n  const chartRef = useRef(null);\n  useEffect(() => {\n    const ctx = chartRef.current.getContext(\"2d\");\n    const skills = [{\n      title: \"Python Scripting\",\n      level: 8,\n      details: \"Experience with scripting, automation, and task automation using Python.\"\n    }, {\n      title: \"ML Frameworks\",\n      level: 7,\n      details: \"Proficient in various machine learning frameworks like TensorFlow, PyTorch, and scikit-learn.\"\n    }, {\n      title: \"Databases\",\n      level: 9,\n      details: \"Skilled in designing, managing, and querying relational and NoSQL databases.\"\n    }, {\n      title: \"Data Analysis\",\n      level: 8,\n      details: \"Expertise in analyzing complex data sets, using statistical tools and data visualization techniques.\"\n    }, {\n      title: \"DevOps\",\n      level: 6,\n      details: \"Experience in CI/CD pipelines, cloud services, and infrastructure automation.\"\n    }];\n    const data = {\n      labels: skills.map(skill => skill.title),\n      datasets: [{\n        label: 'Skill Proficiency',\n        data: skills.map(skill => skill.level),\n        backgroundColor: 'rgba(54, 162, 235, 0.2)',\n        borderColor: 'rgba(54, 162, 235, 1)',\n        pointBackgroundColor: 'rgba(54, 162, 235, 1)',\n        pointBorderColor: '#fff',\n        pointHoverBackgroundColor: '#fff',\n        pointHoverBorderColor: 'rgba(54, 162, 235, 1)',\n        fill: true\n      }]\n    };\n    const config = {\n      type: 'radar',\n      data: data,\n      options: {\n        scales: {\n          r: {\n            angleLines: {\n              display: true\n            },\n            suggestedMin: 0,\n            suggestedMax: 10,\n            ticks: {\n              stepSize: 2,\n              color: '#fff' // Ensure ticks are visible\n\n            },\n            grid: {\n              color: '#666' // Grid lines color\n\n            },\n            pointLabels: {\n              color: '#fff' // Labels color\n\n            }\n          }\n        },\n        plugins: {\n          legend: {\n            labels: {\n              color: '#fff' // Legend text color\n\n            }\n          },\n          tooltip: {\n            backgroundColor: 'rgba(0, 0, 0, 0.8)',\n            // Tooltip background color\n            callbacks: {\n              label: function (tooltipItem) {\n                const index = tooltipItem.dataIndex;\n                return `${skills[index].title}: ${tooltipItem.raw} - ${skills[index].details}`;\n              }\n            }\n          }\n        }\n      }\n    };\n    const myChart = new Chart(ctx, config);\n    return () => {\n      myChart.destroy();\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"skill\",\n    id: \"skills\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-12\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"skill-bx wow zoomIn\",\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              children: \"Skills\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Acquired skills through academic and professional training include:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n              ref: chartRef,\n              width: \"400\",\n              height: \"400\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      className: \"background-image-left\",\n      src: colorSharp,\n      alt: \"Background\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Skills, \"X+1SfQQ6xefXNU27aQW843M7cTw=\");\n\n_c = Skills;\n\nvar _c;\n\n$RefreshReg$(_c, \"Skills\");","map":{"version":3,"names":["React","useEffect","useRef","Chart","colorSharp","Skills","chartRef","ctx","current","getContext","skills","title","level","details","data","labels","map","skill","datasets","label","backgroundColor","borderColor","pointBackgroundColor","pointBorderColor","pointHoverBackgroundColor","pointHoverBorderColor","fill","config","type","options","scales","r","angleLines","display","suggestedMin","suggestedMax","ticks","stepSize","color","grid","pointLabels","plugins","legend","tooltip","callbacks","tooltipItem","index","dataIndex","raw","myChart","destroy"],"sources":["C:/Users/ebelfars/PycharmProjects/react-portfolio/src/components/Skills.js"],"sourcesContent":["import React, { useEffect, useRef } from 'react';\nimport { Chart } from 'chart.js';\nimport colorSharp from \"../assets/img/color-sharp.png\";\n\nexport const Skills = () => {\n  const chartRef = useRef(null);\n\n  useEffect(() => {\n    const ctx = chartRef.current.getContext(\"2d\");\n\n    const skills = [\n      { title: \"Python Scripting\", level: 8, details: \"Experience with scripting, automation, and task automation using Python.\" },\n      { title: \"ML Frameworks\", level: 7, details: \"Proficient in various machine learning frameworks like TensorFlow, PyTorch, and scikit-learn.\" },\n      { title: \"Databases\", level: 9, details: \"Skilled in designing, managing, and querying relational and NoSQL databases.\" },\n      { title: \"Data Analysis\", level: 8, details: \"Expertise in analyzing complex data sets, using statistical tools and data visualization techniques.\" },\n      { title: \"DevOps\", level: 6, details: \"Experience in CI/CD pipelines, cloud services, and infrastructure automation.\" }\n    ];\n\n    const data = {\n      labels: skills.map(skill => skill.title),\n      datasets: [{\n        label: 'Skill Proficiency',\n        data: skills.map(skill => skill.level),\n        backgroundColor: 'rgba(54, 162, 235, 0.2)',\n        borderColor: 'rgba(54, 162, 235, 1)',\n        pointBackgroundColor: 'rgba(54, 162, 235, 1)',\n        pointBorderColor: '#fff',\n        pointHoverBackgroundColor: '#fff',\n        pointHoverBorderColor: 'rgba(54, 162, 235, 1)',\n        fill: true,\n      }]\n    };\n\n    const config = {\n      type: 'radar',\n      data: data,\n      options: {\n        scales: {\n          r: {\n            angleLines: {\n              display: true\n            },\n            suggestedMin: 0,\n            suggestedMax: 10,\n            ticks: {\n              stepSize: 2,\n              color: '#fff' // Ensure ticks are visible\n            },\n            grid: {\n              color: '#666' // Grid lines color\n            },\n            pointLabels: {\n              color: '#fff', // Labels color\n            },\n          }\n        },\n        plugins: {\n          legend: {\n            labels: {\n              color: '#fff', // Legend text color\n            }\n          },\n          tooltip: {\n            backgroundColor: 'rgba(0, 0, 0, 0.8)', // Tooltip background color\n            callbacks: {\n              label: function(tooltipItem) {\n                const index = tooltipItem.dataIndex;\n                return `${skills[index].title}: ${tooltipItem.raw} - ${skills[index].details}`;\n              }\n            }\n          }\n        }\n      },\n    };\n\n    const myChart = new Chart(ctx, config);\n\n    return () => {\n      myChart.destroy();\n    };\n  }, []);\n\n  return (\n    <section className=\"skill\" id=\"skills\">\n        <div className=\"container\">\n            <div className=\"row\">\n                <div className=\"col-12\">\n                    <div className=\"skill-bx wow zoomIn\">\n                        <h2>Skills</h2>\n                        <p>Acquired skills through academic and professional training include:</p>\n                        <canvas ref={chartRef} width=\"400\" height=\"400\"></canvas>\n                    </div>\n                </div>\n            </div>\n        </div>\n        <img className=\"background-image-left\" src={colorSharp} alt=\"Background\"/>\n    </section>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}